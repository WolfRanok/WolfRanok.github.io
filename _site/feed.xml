<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-01-06T21:38:53+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ranok</title><subtitle>Wolf Biting Pencil</subtitle><entry><title type="html">研究生英语期末复习</title><link href="http://localhost:4000/postgraduateEnglish" rel="alternate" type="text/html" title="研究生英语期末复习" /><published>2024-09-19T00:00:00+08:00</published><updated>2024-09-19T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-postgraduateEnglish</id><content type="html" xml:base="http://localhost:4000/postgraduateEnglish"><![CDATA[<p>  研究生英语，作为高等教育阶段的一个重要组成部分，是为已具备本科或相当水平英语能力的研究生所设计的课程体系。这一阶段的英语学习，不仅旨在进一步提升学生的英语综合应用能力，包括听、说、读、写、译五个方面，还强调在专业领域内有效运用英语进行学术交流和研究的能力。</p>

<hr />
<h1 id="前言">前言</h1>
<p>  本博客是针对期末英语的知识点整理，仅表示个人看法，如果整理有疏漏的地方欢迎和我讨论。最后希望你能认真复习，祝你取得一个好成绩！</p>

<hr />
<h1 id="目录">目录</h1>

<ul>
  <li><a href="#前言">前言</a></li>
  <li><a href="#目录">目录</a></li>
  <li><a href="#试题">试题</a>
    <ul>
      <li><a href="#试题介绍">试题介绍</a></li>
      <li><a href="#阅读理解译文">阅读理解（译文）</a>
        <ul>
          <li><a href="#4篇泛读">4篇泛读</a>
            <ul>
              <li><a href="#unit-3-passage-a--spillonomics-underestimating-risk">Unit 3 Passage A : Spillonomics: Underestimating Risk</a></li>
              <li><a href="#unit-6-passage-a--a-christmas-sermon-on-peace">Unit 6 Passage A : A Christmas Sermon on peace</a></li>
              <li><a href="#unit-9-passage-b--fearing-fear-itself">Unit 9 Passage B : Fearing Fear Itself</a></li>
              <li><a href="#unit-11-passage-b--will-tech-revolution-overwhelm-global-system">Unit 11 Passage B : Will Tech Revolution Overwhelm Global System?</a></li>
            </ul>
          </li>
          <li><a href="#1篇精读">1篇精读</a>
            <ul>
              <li><a href="#unit-2-passage-a--world-english-a-blessing-or-curse">Unit 2 Passage A : World English: A Blessing or Curse?</a></li>
              <li><a href="#unit-5-passage-a--a-beautiful-mind">Unit 5 Passage A : A Beautiful Mind</a></li>
              <li><a href="#unit-7-passage-a--our-picture-of-the-universe">Unit 7 Passage A : Our Picture of the Universe</a></li>
              <li><a href="#unit-10-passage-a--spell-of-the-rising-moon">Unit 10 Passage A : Spell of the Rising Moon</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#词汇">词汇</a>
        <ul>
          <li><a href="#unit-2-passage-a">Unit 2 Passage A</a></li>
          <li><a href="#unit-5-passage-a">Unit 5 Passage A</a></li>
          <li><a href="#unit-7-passage-a">Unit 7 Passage A</a></li>
          <li><a href="#unit-10-passage-a">Unit 10 Passage A</a></li>
        </ul>
      </li>
      <li><a href="#完型填空">完型填空</a>
        <ul>
          <li><a href="#unit-2-passage-a--world-english-a-blessing-or-a-curse">Unit 2 Passage A : World English: A Blessing or a Curse?</a></li>
          <li><a href="#unit-5-passage-a--a-beautiful-mind-1">Unit 5 Passage A : A Beautiful Mind</a></li>
          <li><a href="#unit-7-passage-a--our-picture-of-the-universe-1">Unit 7 Passage A : Our Picture of the Universe</a></li>
          <li><a href="#unit-10-passage-a--spell-of-the-rising-moon-1">Unit 10 Passage A : Spell of the Rising Moon</a></li>
        </ul>
      </li>
      <li><a href="#翻译">翻译</a>
        <ul>
          <li><a href="#unit-2-passage-a-world-english-a-blessing-or-a-curse">Unit 2 Passage A World English: A Blessing or a Curse</a></li>
          <li><a href="#unit-5-passage-a--a-beautiful-mind-2">Unit 5 Passage A : A Beautiful Mind</a></li>
          <li><a href="#unit-7-passage-a--our-picture-of-the-universe-2">Unit 7 Passage A : Our picture of the Universe</a></li>
          <li><a href="#unit-10-passage-a--spell-of-the-rising-moon-2">Unit 10 Passage A : Spell of the Rising Moon</a></li>
        </ul>
      </li>
      <li>
        <h2 id="写作"><a href="#写作">写作</a></h2>
      </li>
    </ul>
  </li>
</ul>

<h1 id="试题">试题</h1>
<h2 id="试题介绍">试题介绍</h2>

<p>  试题内容如下表所示</p>

<table>
  <thead>
    <tr>
      <th>题型</th>
      <th>分值</th>
      <th>来源</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>阅读理解</td>
      <td>40</td>
      <td>精读四篇线下阅读+一篇显示泛读文章</td>
    </tr>
    <tr>
      <td>词汇</td>
      <td>10</td>
      <td>精读文章的线上词汇题目原题</td>
    </tr>
    <tr>
      <td>完型填空</td>
      <td>10</td>
      <td>精读文章的线上完型填空原题</td>
    </tr>
    <tr>
      <td>翻译</td>
      <td>10</td>
      <td>英译中-线下精读文章原题</td>
    </tr>
    <tr>
      <td>作文</td>
      <td>30</td>
      <td>无</td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="阅读理解译文">阅读理解（译文）</h2>

<h3 id="4篇泛读">4篇泛读</h3>

<h4 id="unit-3-passage-a--spillonomics-underestimating-risk">Unit 3 Passage A : Spillonomics: Underestimating Risk</h4>

<p>回想起来，模式似乎很清楚。早在“深水地平线”钻机自爆前的很多年，BP石油公司为了省钱甘冒安全的风险就已经声名狼藉。2005年得克萨斯州炼油厂爆炸中有15名工人丧生。联邦监管机构和前国务卿詹姆斯·贝克三世领导的专门小组认为，削减成本是事故的部分原因。第二年，阿拉斯加腐蚀的管道将石油漏入普拉德霍湾。就连乔·巴顿那个对全球变暖持怀疑态度、来自得克萨斯州的共和党众议员，都谴责BP管理人员“对安全和环境问题表现得漠不关心”</p>

<p>这种冷漠大部分源于对利润的过度追求，不管是什么情况。但似乎也还有另一个因素在起作用，一个更普遍的人性的因素。BP的管理人员在估计似乎不太可能发生但一旦发生就会带来巨大损失的事件真正会发生的可能性时，犯了一个可怕的错误。也许理解这一点最简单的方法就是思考一下BP高管们如今的想法。显然，考虑到清理费用和对BP声誉的影响，高管们真希望可以回到过去，多花些钱让“深水地平线更安全。他们没有增加这笔费用就表明他们认为钻机在当时的状态下不会出问题。</p>

<p>尽管针对 BP高管的所有批评可能都是他们应得的，但是他们绝不是唯一艰难应对这种低概率、高成本事件的人。几乎每个人都会如此。“这些正是我们人类处理时很难做出合理反应的一类事件。”哈佛大学环境经济学家罗伯特·斯塔文斯说。我们经常犯两种基本的且性质相反的错误。当一件事情是很难想象的，我们往往会低估它的可能性。这就是众所周知的黑天鹅(稀有之物)现象。大多数在“深水地平线”工作的人可能从未经历过钻井平台爆炸。因此他们认为这不会发生，至少不会发生在他们身上。</p>

<p>同样,不久以前,本·伯南克和艾伦·格林斯潘也喜欢称全国房地产市场没有泡沫因为以前从未有过泡沫。华尔街交易员也持同样观点，他们建立的数学模型根本不存在房价下降的可能性。许多购房者签订了负担不起的抵押贷款，相信一旦其价格上涨，他们可以再融资或卖掉房子。所以看起来房价过去一直是在上涨。</p>

<p>另一方面，当一个不太可能发生的事件是很容易想象时，我们经常会走向另一个极端，高估它的可能性。“9·11”恐怖袭击后，美国人取消了飞机旅行，转而驾车上路。2002年在这个国家没有发生恐怖袭击，但更多的驾车出行显然导致了交通死亡人数的增加。</p>

<p>当风险非常高时，应该由政府负责以帮助避免这些完全人为的错误。如果让市场自行其是，往往做不到这一点。然而，在“深水地平线”这件事情上，政府的政策实际上起到了相反的作用。它助长 BP低估了灾难的可能性。</p>

<p>埃克森公司瓦尔迪兹漏油事件发生后，在1990年的一个法案很少引人注意的一项条款中，美国国会将钻机泄漏清理费用的责任上限定为7500万美元。即使对旅游业、渔业等造成的经济损失高达数十亿美元，责任方也仅需要支付7500万美元。(在这种情况下，BP已同意对它认为合法的索赔，放弃这一上限。)在华盛顿负责汉密尔顿项目的麻省理工学院经济学家迈克尔·格林斯通说这一法律从根本上扭曲了公司的决策。如果赔偿没有上限，管理人员就会权衡油井可能的收益以及钻井的成本和损害赔偿的风险。而有了这个上限，他们就可以在很大程度上忽略清理费用之外的潜在损害赔偿。所以在损害可能非常可怕的地方，如靠近海岸线的地方，他们也会钻井。换句话说，人类的弱点使得BP 公司高管低估了低概率、高成本事件的可能性。而联邦法律则使得他们低估了成本。</p>

<p>在“深水地平线”之后，美国国会和奥巴马政府毫无疑问希望通过相关法律以减少再次出现“深水地平线”这样的风险。当然他们可以采取一些明智的做法，如解除责任上限，摆脱石油业对监管人员的影响。不过，如果认为我们目前仍然低估的只是那些突然间引人注目的风险，那是非常愚蠢的。</p>

<p>大的金融风险已不再是房地产泡沫。相反它可能是医疗保险、医疗救助和社会保障的增长在未来将会导致的巨额赤字，以及贷款人可能最终不愿再向华盛顿扩大信贷。诚然，一些经济学家和决策者坚持认为国家还不应该考虑如何应对这种可能性，因为贷款人与美国政府的关系从来没有恶化过，也没有迹象显示现在就是这样。但这是不是让人联想到伯南克和格林斯潘对住房市场的老调呢?</p>

<p>当然，即使油井正常运转时，油井(与其他事物一起)也会向大气中排放温室气体。科学家们说，这些气体的积累已经可能在22世纪将地球温度提高至少3度，并导致干旱、风暴和更多的冰层融化。最近，研究人员的预测又提高了，地球温度有可能上升约12度。这样的气候变暖可能会在各大城市引起洪灾，并导致南极部分坍塌。</p>

<p>这样的事情还没有发生过。即使想象它都是困难的。人们更容易做到的，是希望出现这种结果的可能性小到微乎其微。事实上，抱有这样的希望是自然的反应。但是，这并不代表它是明智的。</p>

<hr />

<h4 id="unit-6-passage-a--a-christmas-sermon-on-peace">Unit 6 Passage A : A Christmas Sermon on peace</h4>

<p>今年圣诞时节，人们困惑惶恐，内心无法宁静，外部没有和平。无论身置何处, 恐慌昼夜萦绕于胸，无论走到哪里，战争的阴霾时时笼罩天空。我们这个世界已厌倦了战争，无论何处都危机四伏。各位教友，即便如此，我们不能把祈求和平、善待众人的基督圣训视作不切实际的虔诚美梦。如果不能友善待人，我们所有和所能必将由于使用不当而使我们走向自我毁灭。历史的经验告诉我们，战争早已过时。曾几何时，战争或有以毒攻毒之效，可以遏制邪恶势力的蔓延与发展，然而正是现代战争利器的巨大破坏力，使它再不能被视作打击邪恶的正义之举。因此，如果我们认为人生值得一过，如果我们认为人类有权生存，那么我们就必须抛弃战争，另寻他径。正因为如此，今天上午让我们探讨怎样才能和平，重新思考“世界和平，人人友爱”的圣诞梦想的含义。说到何以有和平，我认为生活于现代的人们确实要好好研究非暴力主义的意义，它的哲学和战略。</p>

<p>关于非暴力主义的含义，我们在美国争取种族正义的斗争中，已经有所尝试。现在是把非暴力主义运用到人类的各种冲突中去的时候了，也就是说要在国际范围内推行非暴力主义。</p>

<p>现在，我首先要说的是，要想世界和平，我们就必须忠于芸芸众生，而不是忠于一隅。我们的忠心必须超越我们的种族和部落，超越我们的阶层和国家;这就意味着我们必须放眼世界。没有一个人能够独自生存，没有一个国家能够孤立存在。我们越想独立世上越有战争的可能。上帝的审判就在眼前，我们要么学会像兄弟一样和平共处，要么像一群傻瓜统统消失。</p>

<p>的确，无论是国家还是个人，我们都要相互依存。我以前和你们说过，若干年前我去过印度。那次经历美妙无比，但是我现在要告诉你们，其中也有不少令人沮丧的时刻。眼见数百万人饿着肚子上床睡觉，怎能不让人沮丧?目睹成千上万的人晚上睡在马路边如何不让人沮丧?每天晚上有一百多万人睡在孟买的街道旁，有五十多万人睡在加尔各答的道路边。他们无家可归。他们没床可睡。此情此景，我的心中不禁要问:“身在美国的我们能袖手旁观、不闻不问吗?”有个声音答道:“不能!”我突然想到就在美国，就在这儿，我们每天要花费数百万美元储藏过剩的食物。我对自己说:“我知道有个地方，可以免费储存那些食物，就在数百万上帝的子民干瘪的肚子里。他们有的在亚洲、非洲，有的在拉丁美洲，有的甚至来自我们自己的国度，饥饿与他们的睡眠相伴。”</p>

<p>归结起来，就是一点:一切生命休戚相关。我们大家都身不由己，置身在一个相互关联的网络之中，我们共穿同一件命运的外衣。不管是什么，只要直接影响到一个人，就会间接影响到所有人。我们生来就得共处,因为世界是相互关联的。你是否偶尔想到过如果不依靠世上的大部分人，你早上连班都上不了呢?你起了床，去洗手间，伸手要拿海绵，那是经过太平洋上的某个岛民之手你才有的。你要拿块肥皂，那是经过某个法国人之手才有的，然后，你走进厨房用早餐，你的咖啡是经过某个南美人之手才有的。也许你想喝茶，那是经过某个中国人之手才有的，或许你很想喝一杯可可茶，那是经过某个西非人之手才有的。你伸手去拿烤面包，那是经过某个会说英语的农夫之手才有的，更不必说面包师傅了。你的早餐还没吃完，就和大半个世界的人产生关联了。这就是我们的宇宙的构造方式，这就是宇宙相互关联的属性。一切事物相互联系，我们只有认识到这一基本事实，世界才有和平。</p>

<p>其次，我呼吁，要实现世界和平，所有众人、所有国家必须坚守非暴力信念，坚信目的、手段必须互渗互连。手段与目的的关系一直是历史上颇有争议的重大哲学问题。总有人认为只要目的正确，可以不择手段，重要的是要达到目的。</p>

<p>因此他们说，假如你正寻求建立一个公正的社会，重要的是建立与否，而手段如何实在无关紧要。只要能让这样的社会建立起来,任何手段都行,包括暴力手段,欺诈手段甚至于可以通过非正义的手段达到正义的目的。纵观历史,总有些人是这样认为的。然而世上永远不会出现和平，除非人们普遍认识到手段与目的并非毫无关系，因为手段让理想体现在行动中，让目的体现在过程中。通过邪恶的手段终归达不到好的结果，因为手段相当于种子，而目的就像是果实。</p>

<p>世上所有伟大的军事天才都谈论过和平，这是最让人感到奇怪的事情之一。古时的征服者们为了所谓的和平一路杀来，亚历山大大帝，裘力斯·恺撒，查理大帝，还有拿破仑，他们寻求和平的世界秩序的做法都一样。要是你真的好好读了《我的奋斗》一书，你就会发现希特勒曾经声称，他在德国所做的一切都是为了和平。今日世界的领导者们谈起和平来头头是道。每次美军在北越投下炸弹，约翰逊总统都会就和平夸夸其谈一番。问题出在哪里?他们是把和平当作一个遥远的目标，当作我们所追求的一个目的来谈的，可是总有一天我们一定会看到，和平不仅仅是我们追求的一个遥远的目标，而且是我们达到这一日标的一个途径。我们必须运用和平的途径达到和平的目的。归根结底一句话，手段和目的是一致的，因为目的先存于手段之中，破坏性的手段终究不能带来建设性的目的。</p>

<p>再者，我要说，若想世界和平、世人和睦，必须以非暴力形式证明所有人的生命都是神圣的。每个人都很重要，因为他们都是上帝之子，因此，我们说“勿杀生”，是指人的生命是神圣的，不应在战场上被轻易夺走人的生命远非旋转电子构成的奇妙之物，也不是无尽燃烧的焖火中升起的一缕轻烟。人类是上帝的子民，是上帝按自身的样子造出来的，因此必须得到应有的尊重。除非天下的人们懂得这一点世界的各国看到这一点，否则我们就会争战不断总有一天有人会提醒我们，即使我们之间可能存在政见的不同，存在意识形态的不同，但是，越南人是我们的兄弟，俄国人是我们的兄弟，中国人也是我们的兄弟，终有一天我们会坐在一起，共享手足之情。在基督里不分犹太人和异教徒，不分男人和女人，不分共产主义者和资本主义者。在基督里，无论如何，不分自由的和不自由的。在基督里，我们同为一体。一旦我们真的相信人格的神圣性，我们就不会压榨别人，就不会用压迫的铁蹄践踏别人，就不会伤人性命。</p>

<hr />

<h4 id="unit-9-passage-b--fearing-fear-itself">Unit 9 Passage B : Fearing Fear Itself</h4>

<p>孩子能应对多少恐惧，焦虑和风险?直到19世纪末，多数人认为这一问题的答案是“相当多”。亚里士多德本人说可以将教育定义为:教会我们正确处理恐惧。人们普遍认为恐惧感对孩子的性格形成有积极意义。1819年，教会传道会声称,“孩子们惧怕老师是必要的”，并详细阐述了恐惧在儿童教育中的极端重要性。儿童的恐惧经历有时被描述为开发其想象力和创造力的必要条件。例如，在1848年，ChristianRegister 周刊向家长们提出忠告:一个“从来不知道任何恐惧的孩子不可能富有想象力:感受不到世界的奇妙，没有生命的冲动，也没有敬畏或崇拜。”</p>

<p>与此形成反差的是当今的文化:娱乐活动满足各个层次的年龄需求;用词不当(或微歧视)被说成可以引发焦虑症;分离带来的终极恐惧被看作对儿童具有巨大伤害，如果处理不好，可能会毁掉孩子的一生。童年的恐惧和对这些恐惧的惧怕似乎无处不在:恐惧霸凌，更怕公共集会及枪击。害怕电视中不断出现的战争和事故场面。当今，由于周遭世界充盈着各种攻击，多数家长不会像从前那样试图吓唬孩子，不会鞭打孩子或是让孩子像裁着镣铐的囚犯一样于一年的苦力。我们尽自己所能了解孩子的忧虑，竭尽全力不惜代价减少他们的恐惧。</p>

<p>新旧观念的转变可以追溯到19世纪后期心理学的出现。心理学的先驱 G.斯坦利·霍尔强烈反对恐惧情绪，认为它给儿童一生造成极具破坏力影响。因而，曾经被认为是儿童性格形成关键因素的恐惧情绪，因其对儿童成长有害而遭到公开谴责。19世纪90年代，霍尔所从事的研究呼吁对恐惧重新定位。他没有将儿童的恐惧–亚里士多德所说的世间教师，视为人生的正常现象，他认为应该将其视为对儿童健康的威胁。医学文献已有大量有关病态恐惧即心理忍惧危险性的记载，霍尔呼吁人们关注这种危险的存在。霍尔在1921年出版的《儿童生活及教育研究》一书中指出，他的研究显示了“由于不明智的恐惧所导致的各种形式的拘捕乃至性变态的数量。”他同时指出:这些“不明智的恐惧’通常归因于不适当的育儿方式。</p>

<p>霍尔的观点被心理学家以及育儿专家和教育工作者广泛接受。1917年，《母亲杂志》的一位答读者问专栏作家要求当局“介入并阻止我们将儿童变成精神和道德有缺陷的人”这位匿名作者断言“恐惧是一种疾病，通常源于儿时受到的不当的培养和虐待”。</p>

<p>在第二次世界大战爆发前的几十年里，关于恐惧情绪对儿童福祉构成威胁的说法得到了更多的重视。此时，育儿忠告让父母作为监护人承担起防止幼儿恐惧的责任。行为心理学的创始人约翰·沃森认为,“父母的主要工作应该是防止恐惧，因为一些恐惧极难治愈。”</p>

<p>育儿指导意见指出，恐惧是一个复杂而危险的问题，在儿童人生的每个关键时期,成年人应担起保护儿童使命。因此，1934年，一个建议专栏刊登的题为《克服恐惧:幼儿园的现代方法》的文章告诫“母亲和保育员”“避免引起儿童恐惧的任何理由”。人们用危言耸听和说教的口吻对不了解恐惧对儿童造成伤害的母亲进行谴责。1922年《麦克卢尔杂志》的一位评论员写道:现如今，普通母亲跟自己的祖母不知道细菌存在的危险一样，对这些思想和精神上的敌人，这些暗藏着同机伤害孩子的心理危害知之甚少。一些专家担心家长不能有效应对儿童的恐惧，而这些儿童被认为比以前想象的要脆弱得多。</p>

<p>20世纪 20-30年代中形成的儿童脆弱性这一观念的发展，与以儿童为中心的生育文化的出现如影随形，在中产阶级中尤其如此。父母和教育工作者都被警告他们有责任保护儿童免受对其心理健康的威胁。一位评论员批评家长对他们的孩子施加了太大的压力，并警告,“从幼儿园到获得大学学位这条充满荆棘道路上的各个阶段，孩子和青少年都可能在压力下崩溃。”来自父母的压力和纪律约束被指引发儿童的恐惧和焦虑。父母被告知要肯定他们的孩子，鼓励而不是训斥他们，也不要给他们施加太大的压力。</p>

<p>在20世纪30年代，教育工作者也接受了让儿童远离恐惧的呼吁。1939年，一位老师在《教育杂志》上写道,“很多男孩和女孩都患有恐惧症”“很惭愧，我承认学校经常使情况变得更糟。”其他人认为，家庭作业和考试可能会让孩子承受过度的压力和紧张。人们经常声称，家庭作业导致了“儿童脊柱弯曲、夜惊和神经衰弱。”为了回应这些主张纽约的公立学校四年级前禁止留作业，在圣地亚哥，学校到八年级才给学生留作业。</p>

<p>起初，只有少数其中主要是中产阶级父母响应放宽纪律约束并不断安抚孩子的呼吁。但逐渐地，采用心理学专业手段来应对儿童的恐惧变成等同于负责任的父母的做法。</p>

<p>尽管害怕恐惧，但几十年来大多数人都认为，一定程度的逆境可以提高心理适应性。灾难中幸存的儿童更具心理复原力，专家说，尤其是这种情感支持源于家人时。但是，到了 20世纪 70年代中期，这个论调开始发生变化:研究人员开始更仔细地审视这个问题质疑儿童心理适应性的程度，转而强调儿童的脆弱性。到20世纪80年代，“易恐儿童-词被普遍使用:这被认为不是某些孩子独有的特定问题，而是所有儿童都存在的问题。</p>

<p>对这一概念的研究表明，大多数已发表的文献将“易恐儿童”视为童年时期相对显而易见的特征。这是一个想当然、很少人论述的观念;就个体而言，由于身体及其他感知尚不成熟，儿童被认为容易受惊吓。另外，这种易受惊吓的特征被描述成孩子们与生俱来的。</p>

<p>孩子们容易受到惊吓，这种观念促使人们不断地夸大儿童所面临的威胁。我所称之为的“犯病的童年时代”已经获得其内在的逻辑性。墨尔本大学心理学家尼克·哈斯兰的研究中强调了这一趋势的重要性，他报告说，自20世纪80年代以来，社会心理学家使用的关键术语如“滥用”、“欺凌”和“创伤”已被应用于越来越多的体验中。具体而言,这些术语越来越多地被应用在先前被解释为令人不愉快但不会引起创伤的情境中。</p>

<p>这一新观点反映了当前的趋势，即通过恐惧的视角来看待童年的几乎每个方面。但这些恐惧很少直接来自儿童的经历。它不是传统意义上的儿童焦虑，如在21世纪对恐惧的叙述中强调的对黑暗的恐惧或被父母抛弃的焦虑。相反，儿童的恐惧是成年人想象出来的，并且经常表达出潜藏在父母心中的焦虑。对身份不确定的恐惧、对失败的恐惧、对自卑的恐惧、对达不到标准的恐惧、对考试对学生心理健康的有害影响的恐惧、对竞争和竞技体育的恐惧以及对纪律的恐惧，都是教育辩论中反复出现的主题。通常，这些紫绕心头的恐惧会被放大，对弱小的儿童所产生的焦虑情绪变得活灵活现。</p>

<p>那么，孩子比过去更充满恐惧了吗?不幸的是，这不是一个可以以任何程度的科学精度来回答的问题。然而，显而易见的是，与过去相比，现在人们更加频繁地谈论与童年相关的恐惧和脆弱性。儿童的恐惧和成年人因孩子而产生的恐惧经常交织在一起讨论现如今这两种恐惧带给人的痛苦超过以往任何时候。事实上，现在有真实的宣传资料将孩子的害怕归咎于父母的恐惧。几十年来，父母被建议保护孩子远离恐惧，如今却被指责对他们孩子的恐惧负有责任。</p>

<p>充满恐惧的“直升机家长”经常受到批评，因为他们限制了孩子的健康发展。今年六月发表在《发展心理学》杂志上的一项研究得出的结论是，“受到家长过度控制的儿童可能缺乏能力成功应对人学以及适应学校环境等挑战”。其他人认为，“直升机育儿”会阻碍孩子满足“自主和能力这两种基本心理需求</p>

<p>对直升机育儿的批评者忽视了迫使许多父母采用这种做法的强大文化压力。所谓的专家们应该宽容些，不要用不断的警告和建议来批评家长，而是反思一下他们提供的相互矛盾的建议带来的有悖常情的结果。如果社会学会信任父母，并且不再试图让他们如此恐惧，那么童年世界将会变得更加美好。</p>

<hr />

<h4 id="unit-11-passage-b--will-tech-revolution-overwhelm-global-system">Unit 11 Passage B : Will Tech Revolution Overwhelm Global System?</h4>

<p>当中国科学家贺建奎声称用一种先进的基因编辑技术(CRISPR)从一个新生儿身上去除了一种导致艾滋病病毒的基因时，包括中国的医疗机构在内的全世界都震惊了，谴责这种努力是“扮演上帝”。几天后，成千上万的韩国出租车司机走上街头抗议一个商业共享搭车应用程序，他们声称这种程序会破坏他们的工作并威胁他们的生计。</p>

<p>这两个时刻都是分水岭，说明了一个毫无准备的世界中存在的潜在风险，因为一场新兴的技术革命正在超越管理它们所需的规则、规范和标准。</p>

<p>在未来的20年里，世界上将出现更多的技术变革，大大超越过去20年中互联网和应用程序经济的崛起。被称为“第四次工业革命”的是人工智能/大数据/机器人技术3D打印、生物技术和新材料的数字融合，它将推动未来十年及以后的经济增长。它将改变工作的本质，改变我们打仗、生活和互动的方式。</p>

<p>我们正在进人这样一个世界，这个世界里有自动驾驶的电动汽车，有物联网上以数十亿连接的传感器和设备，有自主武器、数字化贸易、芯片医学实验室、3D 印刷厂和精准农业等，不一而足。</p>

<p>但危险正在聚集。因为这一技术变革是在支撑全球贸易、金融和政治稳定的整个国际经济和政治体系受到侵蚀之际展开的。</p>

<p>首先，世界贸易组织及其“皇冠之宝”，即争端解决机制的未来正在受到质疑。大家一致认为，随着贸易保护主义在全球的兴起，世贸组织必须进行改革。最初的谈判引发了人们对其未来的担忧，而快速增长的数字商业的全面规则仍然难以实现。世界对人工智能和机器人技术、自动驾驶车辆和其他新兴技术将采用什么标准和道德规范?</p>

<p>同样，如何解决生物科学、合成生物学和生物工程领域的突破所引发的伦理问题?为了达到效果，必须取得全球性的共识。我们知道移除一个基因将如何改变其他基因之间的相互作用吗?更大的问题仍将是有关21世纪经济的新的原材料–数据。谁拥有数据?什么是隐私权?少数几个主要是美国和中国的大型科技公司统治着数据世界。大技术应该像欧盟所寻求的那样，被拆分或监管吗?</p>

<p>一些人担心能自我复制的人工智能机器人将控制或替代人类。这些担心很可能是被误导的。机器智能“深度学习”是基于神经网络，模拟大脑。我们至今仍然不清楚大脑中十亿个以上的神经元是如何工作的。因此，机器智能要具备人类智能的所有维度，很可能需要几十年的时间–如果能实现的话。</p>

<p>然而，人工智能/机器人技术正开始影响未来的工作。随着自动驾驶汽车的普及出租车司机、卡车司机和公共汽车司机会怎么样呢?人们辩论着机器人将在多大程度上取代工人，以及机器人将如何创造新的工作岗位，让工人与机器人一起工作，有些人称之为“混合未来”。但这种技术变革势必要求所有国家重新考虑教育、培训、社会安全网，甚至</p>

<hr />

<h3 id="1篇精读">1篇精读</h3>

<h4 id="unit-2-passage-a--world-english-a-blessing-or-curse">Unit 2 Passage A : World English: A Blessing or Curse?</h4>

<p>2000年,语言学家、威尔士人格兰维尔·普莱斯,在他编辑的《英国与爱尔兰的语言》中发表了如下的观点:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>因为英语是个杀手，正是英语，导致坎伯兰语、康沃尔语、诺恩语和马恩语灭亡。在那些岛屿的部分地区,还有较大规模的群体讲比英语更古老的当地语言。但是，现在日常生活中，英语无处不在，人人--或者说--几乎人人都懂英语。英语威胁到那三种遗留的凯尔特语:爱尔兰语、苏格兰盖尔语和威尔士语，……所以必须意识到，从长远来看，这三种语言的未来……十分危险。
</code></pre></div></div>

<p>在此几年前，1992年，英国学者罗伯特·菲利普森(他如今在丹麦工作)在牛津大学出版了一本书，名为《语言领域的帝国主义》。在书中，他指出，主要的英语国家、世界范围内英语教学产业，尤其是英国文化委员会，实施的是语言扩张政策。他还把这种政策和他所称的“语言歧视”(这个情况类似于“种族歧视”“性别歧视”)联系在一起。在菲利普森看来，在以“白人”为主的英语世界中，起主导作用的机构和个人，或故意或无意，鼓励或者至少容忍英语大肆扩张，他们当然不反对英语的扩张。英语的扩张开始于大约三个世纪以前，最初的表现形式是经济与殖民扩张，</p>

<p>菲利普森本人为英国文化委员会工作过几年。和他一样，还有一些母语为英语的学者，也试图强调英语作为世界语言的危险。在过去几十年里，人们从三个群体的角度，就英语的国际化进行了广泛的讨论。第一个群体是ENL国家，英语是母语(这个群体也叫“内部圈”);第二个群体是 ESL国家，英语是第二语言(“外部圈”);第三个群体是EFL国家，英语是外语(“扩展圈”)。二十世纪八十年代，这些词语开始流行。从那时起这第三圈实际上已扩展到全球范围。</p>

<p>从来没有像英语这样的语言，既有利也有弊。曾经有许多“世界语言”，例如:阿拉伯语、汉语、希腊语、拉丁语和梵语。总的来说，我们现在认为这些语言比较好，经常以赞美、感激的语气谈论与它们相关的文化以及它们给世界带来的变化。我们这样的态度没有什么不妥，因为那些语言现在都不构成严重威胁。</p>

<p>我们现在可以冷静地讨论古汉语对东亚或古拉丁语对西欧的影响。但是，我们与英语关系太紧密，无法同样冷静地分析、评价英语。在对英语的审判中，陪审团还没有露面，可能需要好几个世纪才能做出裁决。但即使如此，值此欧洲语言年，我们可以提出这个问题:普莱斯和菲利普森就我此时使用的语言对我们提出的警告是否有道理。</p>

<p>当然，不难发现有这种情形:人们也许咒骂英语。澳大利亚就是一个例子。澳大利亚常被看成是不折不扣的英语国家。到那里的第一批欧洲人经常使用拉丁语描述、谈论这个地方。“澳大利亚”这个词就是拉丁语。显然当时没有人想到可以简单地称它为“南方(这就是“澳大利亚”的含义)。此外，在澳大利亚南部，有一大片土地叫“纳拉伯平原，其中，第一个词听起来像澳大利亚土著语言，但nullarbor是拉丁语，意思是“没有树木”最重要的是，早期的定居者把这个大陆称为“terra nullius”。1999年的《世界英语电子百科词典》是这样解释“terra nullius”这个拉丁词组的:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>…指这样一个想法和法律概念:第一批欧洲人到达澳大利亚时，这片土地不属于任何人，因此可以随意定居。这种观点已被判定是没有法律效力的。
</code></pre></div></div>

<p>但是，只是最近才这样判定的。欧洲人刚来的时候，澳大利亚人口稀少–只不过有人居住而已–无论从哪个海岸到哪个海岸，无论从哪个方向。当时部落和语言都有几百种。其中许多语言现在已经灭亡了，而正在灭亡的更多。这些死亡的和正在死亡的语言，大都被多种皮钦英语或者通用的澳大利亚英语所取代。这或者是令人哀伤的损失，或者是进步的代价，看你怎么看了，</p>

<p>但是，同时有一个问题:土著语言的灭亡能完全归咎于英语吗?最早发现澳大利亚的欧洲人是荷兰人，他们的语言本可以成为殖民与定居中使用的语言。任何定居者的语言都可能有同样的作用。例如，如果蒙古人能维持他们幅员辽阔的欧亚帝国，蒙古语可能就会成为世界语言，传播到澳大利亚。再例如，如果历史的车轮发生些许偏转的话，那么今天的世界语言有可能是阿拉伯语，一种在西亚和北非的通用语言，如今还影响着许多其他较小的语言，包括科普特语和柏柏尔语。西班牙语对所谓 “拉丁” 美洲的土著语言产生了消极影响，而俄语从欧洲传到西伯利亚太平洋地区。如果英语是个祸害，是个杀手，那可能仅仅是因为任何大的语言都可能会影响和威胁到较小的语言。</p>

<p>但许多人认为英语是有益的。我这里暂不讨论任何世界语言具有的明显优势，例如庞大的交流网络、发达的文学与传媒体系、强大的文化与教育机构。让我们看看与此不同的一些问题:政治、司法与平等。这里我用南非为例来说明。十年前，南非结束了以种族隔离为原则的统治。在南非语(这种语言来源于荷兰语)中，这种制度叫“种族隔离(apartheid)”。出现这种制度，是因为欧洲血统的南非人群体–祖先主要是荷兰人的欧洲定居者–认为自己优于他们建立殖民地的当地人。说英语的、英国裔的南非人不是非常积极地反对种族隔离制度。在黑人的反对力量中，成员使用多种语言，他们起初缺少力量与组织。但是，使这种反对力量增强、更有组织性的语言是英语。对于他们来说，英语成为自由与团结的主要语言，而不是用来压迫他们的语言。今天，南非有十一种官方语言–英语、南非语和九种当地语言，包括祖鲁、恩德比利语和塞茨瓦纳语。但这九种语言中，南非黑人使用(或准备使用)哪一种作为本国通用语言呢?除了母语之外，他们希望子女还能熟练讲、写哪种呢?答案是，哪一种也不是。他们所希望的是英语，而且他们特别希望有一种合适的非洲化的英语。</p>

<p>所以，对于澳大利亚土著人来说，英语是个祸害，而对南非的土著人来说，英语却有一些好处。……</p>

<p>那么，在当今全球化而多样性受到威胁的世界里，我们应该怎样看待英语?在我看来，答案似乎很清楚。与很多事物一样，英语有时是福、有时是祸–对于个人、群 体、国家甚至国家联盟都是如此。东亚“阴”“阳”的象征意义也许能很好地说明这个问题。阴中有阳，阳中有阴。两者虽相反，但共存。就我们这里的问题来说，指的是在同一交流圈内。这种象征意义说明，使用世界通用语言的人应该努力尽可能用其利而避其弊。</p>

<hr />

<h4 id="unit-5-passage-a--a-beautiful-mind">Unit 5 Passage A : A Beautiful Mind</h4>

<p>小约翰·福布斯·纳什–数学天才、理性行为理论创立者、预见会思考的机器出现的预言者，已经和来访者，也是一位数学家，共坐了将近半个小时。那是1959年春季一个工作日的傍晚时分，虽然才是5月，天气却很热，令人不太舒服。纳什颓然坐在医院会客室一角的扶手椅上，身上随意穿着的那件尼龙衬衫，松松垮垮地盖在他没有系皮带的长裤上。他的魁梧身躯现在就像一个布娃娃一样缺乏活力，他的轮优美细致的五官没有任何表情。他一直目光呆滞地盯着哈佛教授乔治·麦基左脚前方不远的地方，除了一次次重复着将垂在前额的略长的黑发拨开的动作，他几乎一动不动。麦基正襟危坐，被沉默压得透不过气来,并且非常清楚地意识到会客室的所有门都锁上了。麦基再也控制不住自己他尽量使语气温和，但听上去仍有些愠怒。“你，一个数学家,”他开始说道,“一个致力于研究理性和逻辑证明的人，怎么能相信外星人正在给你发送消息呢?怎么能相信你被来自太空的外星人选中要来拯救世界呢?怎么能……”</p>

<p>纳什终于抬起头，用类似某种鸟类或者蛇一样冰冷而不动声色的目光，紧紧盯着麦基,“因为,”他慢慢地回答，带着南方人特有的慢条斯理的语气，好像自言自语一般“我的有关超自然生物的想法出现在我的脑海里的方式，是和我的数学思想一样的，所以我会认真对待。”</p>

<p>这个来自西弗吉尼亚州布卢菲尔德的年轻天才–英俊、傲慢,而且非常古怪–在1948年闯人数学界。在接下来的十年，在那既以对人类理性抱有无上信念而著称，又以对人类生存怀有无尽忧虑而闻名的十年，纳什，用知名几何学家米克哈尔·格罗莫夫的话说，证明了自己是“20世纪后半叶最杰出的数学家”。策略博弈、经济竞争、计算机建筑学、宇宙的形状、虚构空间的几何学、素数的奥秘，都是他广阔的想象力涉猎的领域。他的想法属于那种非常深奥而又完全出人意料的类型，无疑会推动科学思维进入新的方向。</p>

<p>数学家保罗·哈莫斯写道:“天才分为两种:一种就像我们大家一样，只是更为出色;另一种则是那些明显具备超凡人类灵感的人。我们都能跑步，有些人还能在四分钟内跑完一英里;但是我们大多数人所做的一切无论如何也无法与谱写出G小调赋格曲相提并论。”纳什的天分就属于那种常与音乐和艺术而非与最古老的科学紧密相连的神奇异禀。这不仅仅是指他的头脑运转更加灵敏，记忆力更加出众，或是他更能集中精力。事实上，直觉的火花稍纵即逝，不能用常理解释。就像其他伟大的数学直觉大师格奥尔格·费里德里希·伯恩哈德·黎曼、朱尔斯·亨利·庞加莱、斯里尼瓦萨·拉马努金一样，纳什先看到一个结论，然后才开始构筑耗费心力的证明过程。不过，即便在他尝试解释某个令人震惊的结论之后，对于那些企图跟随他的逻辑的人而言，他所选择的真正途径却始终是一个谜。20世纪50年代就在麻省理工学院认识纳什的唐纳德·纽曼曾经这样描述他:“其他人通常会在上山途中寻找攀登顶峰的道路。纳什却干脆爬上另外一座山，再反过来从那个遥远的山峰用探照灯搜寻上这座山峰的路。”</p>

<p>没有人比纳什更对原创力着迷、更视权威、更珍惜自己的独立性。早在青年时代，他的身边就不乏 20世纪最伟大的科学权威，比如艾伯特·爱因斯坦、约翰·冯·诺伊曼、诺伯特·维纳，但是他没有加人任何一个学派，不是任何人的门徒，基本上是在既没有引导者，也没有跟随者的状况下前进。在他所做的从博弈论到几何学等多个学科的几乎所有工作之中，他对广为接受的知识、公认的方式以及根深蒂固的规律都持怀疑态度。他差不多一直是独立工作。通常他一边散步，不时用口哨吹出巴赫的作品，一边进行思考。纳什掌握的数学知识，主要并非来源于学习其他数学家已经取得的成果，而是自己重新发现这些成果中蕴藏的真理。他迫切希望取得一鸣惊人的成就，因此随时准备捕捉真正重大的问题。当他全神贯注地思考某个新的难题时，会留意到那些精通这个领域的人(他从来不认为自己已经精通某个领域)最初认为是幼稚或错误而不予考虑的角度。即便是在学生时代，他对旁人的怀疑、疑虑和嘲笑的漠视就已经到了令人畏惧的地步。</p>

<p>纳什对理性以及纯粹思维的力量抱有旁人难以理解的绝对信念，即使是对一个非常年轻的数学家，即使是在计算机、空间旅行和核武器的新时代，都是如此。爱因斯坦就曾经责备他居然想不学物理学就修正相对论。他的偶像是牛顿和尼采这样的孤独的思想者和超人。计算机和科幻小说使他着迷。他把计算机称作“会思考的机器”，认为它在某些地方比人类优越。他一度被药物可能提高体力和智力水平的主意所蛊惑。他也曾沉迷于由超理性生物组成的外星人能够教会自己将所有感情置之度外的想法。他具有一种强迫性的理性，希望将生活中的决定–是搭乘第一部电梯还是等待下一部，到哪里存钱，接受什么样的工作，是否结婚–都转化为利弊得失的计算，转化为完全脱离感情、习俗和传统的算法法则或数学规则。即便是别人在走廊里随口和他打声招呼这样的小事情，也会引起他愤怒地发问:“你究竟为什么要向我打招呼?”</p>

<p>他的同辈人基本上认为他实在不可理喻。他们说他“孤僻”、“傲慢”、“无情”“孤立”、“幽灵一般”、“隔绝”和“古怪”。他和同辈人只是混合在一起，却没有真正融合。他沉醉于自己的隐秘世界，根本不能理解别人操心的世俗事务。他的举止稍微有些冷淡有些高高在上，还有一点秘而不宜的样子,暗示了某种神秘而非自然的东西。他一贯冷漠但一时兴起也会喋喋不休地谈论外太空和地缘政治趋势，或做出孩子般的恶作剧，或者毫无征兆地勃然大怒。但是这些情感的进发总是和他的沉默一样神秘莫测。他和我们不一样”是人们常说的一句话。一位在普林斯顿高等研究院工作的数学家这样描述他在普林斯顿拥挤的学生舞会上第一次遇见纳什的情景:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>我从那里的一大群人当中一下子就注意到他。当时他坐在地上，身边围了半个圆圈的学生，正在讨论什么问题。他使我感到不安，给我一种奇怪的感觉。我觉察到一种特别陌生的东西，他在某些地方与众不同。我并不了解他究竞有多大本事也根本想不到后来他会做出那么大的贡献。
</code></pre></div></div>

<p>但是他确实做出了贡献，而且非同凡响。而让人感到矛盾的是，他的许多想法本身并不晦涩。1958年，由于纳什在博弈论、代数几何学和非线性理论方面取得的成就,《财富》杂志推举他为同时活跃在纯粹数学和应用数学两个领域的新一代天才数学家中最杰出的人物。纳什对于人类竞争动态变化的洞察–他的理性竞争与合作理论–将会成为20世纪最具影响的思想理论之一。这一理论改变着新兴的经济学，其作用无异于孟德尔的基因遗传、达尔文的自然选择模式和牛顿的天体力学再造了当时的生物学和物理学。</p>

<hr />

<h4 id="unit-7-passage-a--our-picture-of-the-universe">Unit 7 Passage A : Our Picture of the Universe</h4>

<p>一位著名的科学家(有人说是贝特兰·罗素)曾经做过一次有关天文学的演讲。他描述了地球如何围绕太阳运转，以及太阳如何进而围绕大量星群的中心运转，这些星群即所谓的银河系。演讲结束之时，一位坐在房间后排的矮个老妇人站起来说道:“你讲的一派胡言。这个世界实际上是驮在一只大乌龟背上的平板。”这位科学家不为所动，微笑着答道:“那么这只乌龟是站在什么上面的呢?”“你很聪明，年轻人，的确很聪明,”老妇人说，“但这就是一只乌龟驮着另一只一直驮下去的!”</p>

<p>大部分人会觉得，把我们的字宙喻为一个无限的乌龟塔相当荒谬，可是我们凭什么自以为知道得更多一些呢?对于宇宙，我们了解多少，又是怎样知道的呢?宇宙从何而来,又将向何处去?宇宙有开端吗?如果有的话,在这之前发生了什么?时间的本质是什么?它会有一个终结吗?我们能回到过去吗?奇妙新技术的出现引发了物理学上的一些最新突破，为回答这些长期以来悬而未决的问题提供了建议。也许有一天这些答案会像我们认为地球绕着太阳运动那样显而易见–当然也可能像乌龟塔那般荒唐可笑。唯有时间(不管其含义如何)才能判断。</p>

<p>依据一些早期的宇宙论的观点和犹太/基督/穆斯林教派传统的观点，宇宙起源于一个有限的并且不太遥远的过去的时间。对这样一个起源，有一种观点是感到必须有“第一原因”来解释宇宙的存在。(在宇宙中，你总可以将一个事件解释为由另一个更早的事件所引起，但是宇宙本身的存在只有当宇宙具有一个开端时才能被解释。)另一种观点是圣·奥古斯丁在他的《上帝之城》中提出的。他指出，文明在进步，我们将记住创造业绩和发展技术的人们。因此，人，也许宇宙，不可能已经存在了太长的时间。圣:奥古斯丁根据《创世记》一书，将公元前 5000年作为宇宙诞生的时间。(有趣的是，这和上一次的冰河时期结束的时间，大约公元前1万年相距不远。考古学家告诉我们，文明实际是从那时开始的。)</p>

<p>另一方面，亚里士多德和大多数其他希腊哲学家不喜欢创生的思想，因为它带有太多神的干涉的味道。他们相信，人类及其周围的世界已经并将继续永远存在。古代的人们已经考虑到上述文明进步的论点，并用周期性洪水或其他灾难的重复出现使人类回到文明的起点，来回答上述问题。</p>

<p>1781年,哲学家伊曼努尔·康德发表了里程碑般的(也是非常晦涩的)著作–《纯粹理性批判》。在这本书中，他深人地考察了关于宇宙在时间上是否有开端、空间上是否有限的问题。他称这些问题为纯粹理性的二律背反(也就是矛盾)。因为他感到存在同样令人信服的论据，来证明宇宙有开端的正命题，以及宇宙已经存在无限久的反命题。他对正命题的论证是:如果宇宙没有一个开端，则任何事件之前必有无限的时间。他认为这是荒谬的。他对反命题的论证是:如果宇宙有一开端，在它之前必有无限的时间，为何宇宙必须在某一特定的时刻开始呢?事实上，他对正命题和反命题用了同样的论证。它们都是基于他的未言明的假设，即不管宇宙是否存在了无限久，时间均可无限地倒溯回去。我们会看到，在宇宙开端之前时间概念是没有意义的。这一点是圣·奥古斯丁首先指出的。当他被问及:“上帝在创造宇宙之前在做什么?”奥古斯丁并没有回答说:“他正为问这类问题的人准备地狱。”而是说:“时间是上帝所创造的宇宙的一种产物,在宇宙开端之前不存在。</p>

<p>在多数人都认为宇宙基本上是静态的而且是不变的情况下，探讨宇宙是否有一个起源确实是一个属于玄学或神学范畴的问题。人们可以用两种不同的理论解释他们所观察到的事物。一种理论是宇宙永存;而另外一种理论是宇宙在某一个有限的时间以一种特定的方式被启动，而这种方式又使得宇宙看上去曾经永远存在。但在1929年，埃德温·哈勃做出了一个具有里程碑意义的观测，即不管你往哪个方向看，远处的星系正急速地远离我们而去。换言之，宇宙正在膨胀。这意味着，在早先星体相互之间更加靠近。事实上，在过去的某一时刻，大约100亿至200亿年之前，所有星体都存在于同一地点，而那时候宇宙的密度是无限大。这个发现最终将宇宙起源的问题带进了科学的王国。</p>

<p>哈勃的发现暗示存在一个叫作大爆炸的时刻，当时宇宙的尺度无穷小，而且无限紧密。在这种条件下，所有科学定律，所有预见将来的能力都失效了。如果在此时刻之前有过这些事件，它们也不可能影响现在所发生的一切。好在我们可以不理它们，因为它们并没有可观测的结果。由于更早的时间根本没有定义，所以在这个意义上人们可以说，时间在大爆炸时有一个开端。必须强调的是，这个时间的开端和早先考虑的非常不同。在一个不变的宇宙中，时间的起点必须由宇宙之外的存在物所赋予;宇宙的开端并没有物理的必要性。人们可以想象上帝创造宇宙发生在过去的任何时间。另一方面,如果宇宙在膨胀，宇宙的起源似乎就有了物理的原因。人们仍然可以想象,上帝是在大爆炸的瞬间创造宇宙或者在晚些时候，以使它看起来就像发生过大爆炸似的方式创造，但是设想在大爆炸之前创造宇宙是没有意义的。膨胀的宇宙并没有排斥造物主，但对他何时从事这项工作加上了时间限制!</p>

<p>为了探讨宇宙的本质以及关于宇宙是否有始终等问题，你必须清楚什么是科学理论。我将采用一个简单的观点，即理论只不过是宇宙的模型或它的受限制的部分模型，是一组联结这模型的量和我们所做的观察的规则。它只存在于我们的头脑中，不具有任何的现实性(不管在任何意义上)。一个好的理论应满足两个要求。一是它必须能够用少数几个任意要素的模型来准确地描述人们所观察到的大量现象。二是它还必须能够对人们未来所能观察到的现象的结果加以明确的预测。例如亚里士多德相信恩培多克勒的理论，即任何东西都是由四种元素组成的:土、空气、火和水。这一理论足够简单，但它没有做出任何明确的预测。另一方面，牛顿的引力理论是基于甚至更为简单的模型，即两物体之间的相互吸引力与被称为质量的量成正比，与它们之间的距离的平方成反比。但是它能够以很高的精确性预言太阳、月亮和行星的运动。</p>

<p>任何物理理论都只是假设，从这个意义上来讲，理论总是暂时的，永远不可能被证明。不管多少回实验的结果和某一理论相一致，你永远不可能断定下一次结果不会和它矛盾。另一方面，哪怕你只找到一个和理论预言不一致的观测事实，即可证明它的错误。正如科学哲学家卡尔·波帕所强调的，一个好的理论的特征是，它能给出许多原则上可以被观测所否定或证明有误的预言。如果新的实验中观测的结果与这预言相符，则这理论就幸存，我们对它的信心也随之增加。但是如果有一个新的观测与之不符，我们就只得抛弃或修正这理论。</p>

<p>至少人们认为应该是这样的，但是你总是可以对做出观测的人的能力表示怀疑。</p>

<p>实际上经常发生的是，创建的新理论是原先理论的推广。例如:对水星的非常精确的观测揭示出它的运动和牛顿理论预言之间存在很小差异。爱因斯坦的广义相对论所预言的运动则和牛顿理论的预言略有不同。爱因斯坦的预言和观测相符，而牛顿的预言与观测不相符，这一事实是这个新理论的一个关键证据。然而我们在大部分实际情况下仍用牛顿理论，因为在我们通常处理的情形下，两者差别非常小。(牛顿理论的另一个巨大优势在于，它比爱因斯坦理论容易得多!)</p>

<p>科学的终极目标在于提供一个简单的理论去描述整个宇宙。然而，大部分科学家实际采用的方法是把问题分为两部分。第一，是一些告诉我们宇宙如何随时间变化的定律。(如果我们知道在任意时刻宇宙是什么样子，那么这些定律就能告诉我们在以后的任一时刻宇宙的样子。)第二,关于宇宙初始状态的问题。有些人认为科学只应过问第一部分他们认为初始状态的问题应是玄学或宗教的范畴。他们会说，全能的上帝可以随心所欲地启动宇宙。也许是这样的。但是，倘若那样，他也可以使宇宙以完全任意的方式演化。可是，看起来他却选择让宇宙以一种非常规则的、按照一定规律的方式演化。所以，看起来可以同样合理地假定，也存在着影响初始状态的定律。</p>

<p>事实上，要想创立一个能够描述一切宇宙现象的理论是十分困难的。取代的办法是，我们可以把问题分割开来，进而创建一些局部理论。每个局部理论对特定有限范围的观测进行描述和预言，而忽略其他量的效应，或仅用简单的一组数字来代表它们。可能这种方法是完全错误的。如果宇宙中的每一个事物都非常依赖于其他的任何一个事物，就不可能通过隔离法研究问题的部分去找到完整的答案。尽管如此，这确实是我们在过去取得进展所用的方法。牛顿引力理论又是一个经典的例子，它告诉我们两个物体之间的引力只取决于与每个物体相关的一个数字–它的质量，而与物体由何物组成无关。这样，人们不需要太阳和行星结构及成分的理论就可以计算它们的轨道。</p>

<p>因为除了在最极端的情况下，我们目前所掌握的局部理论已经足够进行精确的预测，因此很难找到现实的理由去探索宇宙的终极理论。(但是值得指出，类似的论点也可以用来攻击相对论和量子力学，而这些理论已给我们带来了核能和微电子学革命!)一套完整的统一理论的发现可能无法帮助我们种族的存活，甚至也不会影响我们的生活方式但是自从文明开始，人们就不甘于将事件看作是互不关联的，不可理解的。他们渴求理解世界的根本秩序。今天我们仍然渴望知道，我们为何在此?我们从何而来?人类求知的最深切的愿望足以为我们不断的探索提供正当的理由。而我们的目标恰恰正是对于我们生存其中的宇宙做出完整的描述。</p>

<hr />

<h4 id="unit-10-passage-a--spell-of-the-rising-moon">Unit 10 Passage A : Spell of the Rising Moon</h4>

<p>我家附近有座小山。晚上，我常爬上山去。</p>

<p>此时，城市的喧器成了遥远的低语。在这黑夜的静谧中，我可以尽情分享蟋蟀的欢乐，感受猫头鹰的自信。可我上山是来看月出的，因为这可以让我重新得到在城市中被肆意挥霍掉的宁静与清新。</p>

<p>在这座山上,我已欣赏过许多次月亮升起的景象。每一次月的姿容脾性都有所不同。秋天，满月如轮，充满自信;春天，月亮灰蒙蒙，羞羞;冬天，银白的月亮挂在漆黑的、悄无声息的夜空中，显得那般孤寂;夏天，橘黄的月似被烟尘笼罩，俯瞰干燥的田野。每一种月亮，都像美妙的音乐，激荡着我的心，抚慰着我的灵。</p>

<p>观月自古有之。在远古的猎人眼里,月亮如同心跳一样准确无误。他们知道每 29 天月亮都要变得明亮饱满，然后萎缩、消失，然后再复活;他们知道，月盈期间，每经一次日落，头顶的月亮就会显得更高更大;他们还知道月亏期间，月亮每晚都要迟迟升起，待到日出才落。他们竟能从经验中了解到月亮的行踪变化，真可谓心深意广。</p>

<p>但我们这些人却因深居室内，与月亮失去了联系。城市炫目的街灯、污浊的烟尘掩盖了夜晚的天空。虽然人类已在月亮上行走过，但月亮对于我们却更加陌生了。有几人能说得出今晚月亮会几时升起。</p>

<p>但无论怎样，月亮依旧牵动我们的心灵。倘若我们偶尔遇见一轮黄灿灿的满月高悬中天，谁都会禁不住停下来凝神仰望她尊贵的姿容。而月亮也向注视她的人赐予厚礼。</p>

<p>我了解到她的馈赠是在山间七月的一个夜晚。我的车突然熄火，将我孤身一人困在山中。太阳已经西沉，我看见东边山头涌出一团橘红色的明光，好像森林起火一般，忽而山头自己也似乎进出火焰，一会儿，大大的月亮涨红着脸，从密林中鬼魅似地钻了出来,夏天空气中弥漫的尘雾与汗气把它变得丑陋不堪。</p>

<p>大地灼热的呼吸扭曲了它，它变得格外暴躁，不再完美。附近农舍的狗紧张地狂吠起来，以为这团奇怪的光亮叫醒了野草中的魔鬼。</p>

<p>然而当月亮缓缓升起，离开山头，它变得坚定、威严;它的面孔也由红变成了橘红又变成金色，最后是平静的明黄色。它似乎从渐暗的大地中吸取了光明，因为随着它的升起，下面的丘陵山谷愈来愈黯淡朦胧。待到皓月当空，满月如盘，闪烁着象牙般乳白的清辉，山谷便成了风景中一片片幽深的阴影。那些狗明白了那团光原是它们熟悉的月亮，也安定下来，停止了吼叫。霎时间，我也觉得信心倍增，心情舒畅，近平笑了起来。</p>

<p>这奇特的景观持续了一个小时。月出是缓慢的，充满微妙变化。观看月出，我们得回到从前那种对时间的耐心中去。观看月亮义无反顾地越升越高，就如同找到自己内心异乎寻常的宁静。我们的神思能让我们看到宇宙的广袤和大地的宽阔，能让我们意识到我们自身的存在是多么不可思议。我们觉得自身渺小，却又深受大自然的厚待。</p>

<p>月色下，我们看不到生活中坚硬的棱角。山坡在月光中如同笼上了柔和的轻纱。一片银白;海水在月光下碧蓝而静谧;我们在月光下也不再像白日那般精于算计，而是更加沉醉于情感中。</p>

<p>这种时候往往会发生奇特的事情。在那个七月的夜晚，我看了一两个小时的月景后，回到车中，转动钥匙点火，发动机居然响了起来，就像几个小时前熄火那般突然而神秘。我驱车沿着山路回家，肩上披着明月，心灵一片宁静。</p>

<p>后来我常回到山上观月，尤其是在接踵而来的事使我身心疲惫、头晕眼花时。这种境况经常发生在秋天，这时我就登上那座小山，守候猎人的月亮出现，等着那金色的圆月俯照大地，为黑夜带来光明。</p>

<p>一只猫头鹰自山头俯冲下来，静悄悄地如一团火焰闪过，一只蟋蟀在草丛长鸣我想起了诗人和音乐家，想起了贝多芬的“月光奏鸣曲”和莎士比亚笔下《威尼斯商人》中洛伦佐的话:“月光沉睡在这岸边多么轻柔!我们要坐在这里让音乐之声潜入我们的耳内。”我不知道他们的诗篇与音乐，连同蟋蟀的歌声，是否都可算作月的声音。想到这些我那些城市化的昏乱心绪也融化在了夜的幽静之中，</p>

<p>恋人和诗人在夜里能找到生活更深刻的意义。其实我们都爱问一些更加深刻的问题–我们从哪来?命运又将把我们带到何方?我们沉溺于谜团中，而不是那些统治着白天世界的刻板的条条框框。在夜里，我们都成了哲人和神秘主义者。</p>

<p>月出之时，当我们放慢自己的思想，让它跟随天国的脚步，一种心醉神迷的感觉就会流遍全身。我们会打开情感的窗口，会让白天被理智锁住的那部分思绪尽情奔涌。我们越过遥远的时空，听见远古猎人的低语，再次看到很久以前的恋人与诗人眼中的世界。</p>

<hr />
<h2 id="词汇">词汇</h2>
<h3 id="unit-2-passage-a">Unit 2 Passage A</h3>

<p>1 There has been much opposition from some social groups, <strong>__</strong>____from the farming community.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A straightforwardly
B notably
C virtually
D exceptionally
</code></pre></div></div>

<p>正确答案:notably</p>

<p>2 The <strong>__</strong>____view in Britain and other Western countries associates aging with decline, dependency, isolation, and often poverty.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  predominant
B  credulous
C  inclusive
D  sustainable
</code></pre></div></div>

<p>正确答案:predominant</p>

<p>3 But gifts such as these cannot be awarded to everybody, either by judges or by the most <strong>__</strong>____of governments.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  tough
B  demanding
C  diverse
D  benign
</code></pre></div></div>

<p>正确答案:benign</p>

<p>4 The foreman read the <strong>__</strong>____of guilty fourteen times, one for each defendant.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  prejudice
B  verification
C  verdict
D  punishment
</code></pre></div></div>

<p>正确答案:verdict</p>

<p>5.
 They fear it could have a(n) <strong>__</strong>____effect on global financial markets.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  sizeable
B  adverse
C  beneficial
D  consequential
</code></pre></div></div>

<p>正确答案:adverse</p>

<p>6 The UN threatened to <strong>__</strong>____economic sanctions if the talks were broken off.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  engage
B  pursue
C  abandon
D  invoke
</code></pre></div></div>

<p>正确答案:invoke</p>

<p>7 There are at least four crucial differences between the new <strong>__</strong>____and the old government.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  regime
B  hegemony
C  complex
D  federation
</code></pre></div></div>

<p>正确答案:regime</p>

<p>8 These questions <strong>__</strong>____a challenge to established attitude of superiority toward the outside world.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  evolve
B  constitute
C  tolerate
D  arouse
</code></pre></div></div>

<p>正确答案:constitute</p>

<p>9 Because of  this, a  strong administrative <strong>__</strong>____was needed to plan the use of scarce resources, organize production and regulate distribution.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  apparatus
B  constitution
C  insistence
D  promotion
</code></pre></div></div>

<p>正确答案:apparatus</p>

<p>10 I learnt that there are  no genuinely <strong>__</strong>____animals in this area, all the animals were brought here from other places.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  endangered
B  domesticated
C  indigenous
D  extinct
</code></pre></div></div>

<p>正确答案:indigenous</p>

<h3 id="unit-5-passage-a">Unit 5 Passage A</h3>

<p>1 Another common use of the tag question is in small talk when the speaker is trying to <strong>__</strong>_____ conversation: “Sure is hot here, isn’t it?”</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  illicit
B  elicit
C  solicit
D  explicit
</code></pre></div></div>

<p>正确答案:elicit</p>

<p>2 Napster says it is delaying the launch of its subscription service yet again, after running into serious problems in its talks with other firms. So here is Napster’s <strong>__</strong>_____: Still not ready.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  refrain
B  renown
C  restraint
D  retention
</code></pre></div></div>

<p>正确答案:refrain</p>

<p>3 The path from initial lab work on a drug to final approval of the drug by the Food &amp; Drug Administration is a long and <strong>__</strong>_____process.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  hilarious
B  notorious
C  industrious
D  laborious
</code></pre></div></div>

<p>正确答案:laborious</p>

<p>4 When I was a child, I always refused to write thank-you notes for birthday presents from a faraway relative. My mother would <strong>__</strong>_____me and say, “Paul, you must learn to be polite.”</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  glide
B  slide
C  abide
D  chide
</code></pre></div></div>

<p>正确答案:chide</p>

<p>5 A(n) <strong>__</strong>_____memory may be a good thing, but the ability to forget is the true token of greatness.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  attentive
B  inattentive
C  retentive
D  irretentive
</code></pre></div></div>

<p>正确答案:retentive</p>

<p>6 There’s still a great deal of <strong>__</strong>_____on the weapons of mass destruction, which despite what President Bush and Prime Minister Blair say, have not yet been found.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  evidence
B  skepticism
C  knowledge
D  consensus
</code></pre></div></div>

<p>正确答案:skepticism</p>

<p>7 Even though exercise has many positive benefits, too much can be harmful. Teens who exercise <strong>__</strong>_____are at risk for both physical and psychological problems.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  comparatively
B  competitively
C  compulsively
D  comprehensively
</code></pre></div></div>

<p>正确答案:compulsively</p>

<p>8 Some of the maids were quiet and affectionate. But others were <strong>__</strong>_____, driving the young women crazy by complaining to them all the time.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  querulous
B  fabulous
C  pretentious
D  conscientious
</code></pre></div></div>

<p>正确答案:querulous</p>

<p>9 There is nothing more fascinating than observing citizens of many different nationalities <strong>__</strong>_____and exchanging greetings at an international airport.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  singling
B  tingling
C  jingling
D  mingling
</code></pre></div></div>

<p>正确答案:mingling</p>

<p>10 When Dallas police notified the hospital that President Kennedy had been shot, at first, the young neurosurgeon thought it was a <strong>__</strong>_____.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  blank
B  flank
C  prank
D  frank
</code></pre></div></div>

<p>正确答案:prank</p>

<hr />

<h3 id="unit-7-passage-a">Unit 7 Passage A</h3>

<p>1 The aim of science is to <strong>__</strong>_____theories and to replace them by better theories.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  falsify
B  testify
C  prove
D  hypothesize
</code></pre></div></div>

<p>正确答案:falsify</p>

<p>2 Half the people questioned said they were opposed to the military <strong>__</strong>_____.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  interview
B  intervention
C  interrogation
D  interest
</code></pre></div></div>

<p>正确答案:intervention</p>

<p>3 The Constitution of the United States is a(n) <strong>__</strong>_____document.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  fierce
B  inflammable
C  conservative
D  monumental
</code></pre></div></div>

<p>正确答案:monumental</p>

<p>4 The invention of the silicon chip was a <strong>__</strong>_____in the history of the computer.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  sign
B  stop
C  landmark
D  roadmap
</code></pre></div></div>

<p>正确答案:landmark</p>

<p>5 The fact that your application was not successful this time does not <strong>__</strong>_____the possibility of your applying again next time.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  conclude
B  prelude
C  include
D  preclude
</code></pre></div></div>

<p>正确答案:preclude</p>

<p>6 The certificate had clearly been <strong>__</strong>_____, because it contained wrong information.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  cheated
B  misled
C  falsified
D  flawed
</code></pre></div></div>

<p>正确答案:falsified</p>

<p>7 How can a loving, <strong>__</strong>_____God permit disease, war and suffering?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  opportunistic
B  omnipotent
C  oppressive
D  observable
</code></pre></div></div>

<p>正确答案:omnipotent</p>

<p>8 <strong>__</strong>_____theory is the hypothesis that in radiation the energy of electrons is discharged not continuously but in certain fixed amounts.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  Quantum
B  Quotient
C  Quantity
D  Quality
</code></pre></div></div>

<p>正确答案:Quantum</p>

<p>9 For some <strong>__</strong>_____reason, he’s decided to cancel the project.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  inexpensive
B  interacting
C  intact
D  inexplicable
</code></pre></div></div>

<p>正确答案:inexplicable</p>

<p>10 Despite his great commercial success he still <strong>__</strong>_____for critical approval.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  yearns
B  pulls
C  accounts
D  lives
</code></pre></div></div>

<p>正确答案:yearns</p>

<hr />

<h3 id="unit-10-passage-a">Unit 10 Passage A</h3>

<p>1 When she arose to speak in their assemblies, her commanding figure and dignified manners <strong>__</strong>___every trifler into silence.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  rushed
B  hushed
C  cashed
D  pushed
</code></pre></div></div>

<p>正确答案:hushed</p>

<p>2 In many of his paintings of towns, harbors, and rivers, Marquet showed a particular gift for simplification that seized <strong>__</strong>___upon the essentials in the scene before him.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  unexpectedly
B  unavoidably
C  unerringly
D  unbelievably
</code></pre></div></div>

<p>正确答案:unerringly</p>

<p>3 The old gentleman was so much immersed in business that he was unable to <strong>__</strong>___much attention upon me.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  bestow
B  bewilder
C  beware
D  betray
</code></pre></div></div>

<p>正确答案:bestow</p>

<p>4 The most famous <strong>__</strong>___whiteface clown is Felix Adler, who performed in the early and mid-20th century.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  picturesque
B  unique
C  technique
D  grotesque
</code></pre></div></div>

<p>正确答案:grotesque</p>

<p>5 By the first century B.C., Roman power was growing and Greek influence had begun to <strong>__</strong>___.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  wane
B  waver
C  weave
D  wax
</code></pre></div></div>

<p>正确答案:wane</p>

<p>6 To starboard, at Hurghada, behind <strong>__</strong>___ranks of coral reefs, lay the important Marine Biological Station of the University of Egypt.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  severe
B  serried
C  seduced
D  sentimental
</code></pre></div></div>

<p>正确答案:serried</p>

<p>7 At first, the downturn was confined to industries most sensitive to high interest rates. But <strong>__</strong>___, the loss of income in these areas had a ripple effect throughout the economy.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  inexorably
B  intensively
C  inimitably
D  infinitely
</code></pre></div></div>

<p>正确答案:inexorably</p>

<p>8 The puppet theater combines three elements: the puppets; the chanters who sing and <strong>__</strong>___for the puppets; and the players of the three-stringed instrument.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  decline
B  reclaim
C  declaim
D  proclaim
</code></pre></div></div>

<p>正确答案:declaim</p>

<p>9 This is your daily life; to me it is like a scene from a play, over which one sighs to see the curtain fall—all <strong>__</strong>___, all light, all happiness.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  enchantment
B  engagement
C  enlargement
D  endurance
</code></pre></div></div>

<p>正确答案:enchantment</p>

<p>10 “It was really rural when we moved here,” says Stanley. “But these newcomers are <strong>__</strong>___the rural atmosphere.”</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A  justifying
B  citifying
C  ratifying
D  simplifying
</code></pre></div></div>

<p>正确答案:citifying</p>

<hr />
<h2 id="完型填空">完型填空</h2>

<h3 id="unit-2-passage-a--world-english-a-blessing-or-a-curse">Unit 2 Passage A : World English: A Blessing or a Curse?</h3>

<p>A simplified form of the English language based on 850 key words was developed in the late 1920s by the English psychologist Charles Kay Ogden and <strong>(1)<em><u>publicized</u></em></strong> by the English educator I. A. Richards. Known as Basic English, it was used mainly to teach English to non-English- speaking persons and <strong>(2)<em><u>promoted</u></em></strong> as an international language. The complexities of English spelling and grammar, however, were major <strong>(3)<em><u>obstacles</u></em></strong> to the adoption of Basic English as a second language.</p>

<p>The fundamental principle of Basic English was that any idea, <strong>(4)<em><u>however</u></em></strong> complex, may be reduced to simple units of thought and expressed clearly by a limited number of everyday words. The 850-word primary vocabulary was <strong>(5)<em><u>composed of</u></em></strong> 600 nouns (representing things or events), 150 adjectives (for qualities and <strong>(6)<em><u>properties</u></em></strong> ), and 100 general “operational” words, mainly verbs and prepositions. Almost all the words were in <strong>(7)<em><u>common</u></em></strong> use in English-speaking countries. More than 60 percent of them were one-syllable words. The basic vocabulary was created <strong>(8)<em><u>in part</u></em></strong> by eliminating numerous words which have the same or similar meanings and by <strong>(9)<em><u>experiencing</u></em></strong> the use of 18 “basic” verbs, such as make, get, do, have, and be. These verbs were generally combined with prepositions, such as up, among, under, in, and forward. For example, a Basic English student would use the expression “go up” <strong>(10)<em><u>in case of</u></em></strong> “ascend”.</p>

<p>参考译文：</p>

<p>20世纪20年代末，英国心理学家查尔斯·凯·奥格登开发了一种基于850个关键字的英语简化形式，并由英国教育家I.A.理查兹推广。它被称为基础英语，主要用于向非英语母语人士教授英语，并被推广为一种国际语言。然而，英语拼写和语法的复杂性是采用基础英语作为第二语言的主要障碍。</p>

<p>基础英语的基本原则是，任何想法，无论多么复杂，都可以简化为简单的思维单位，并通过有限数量的日常单词清晰地表达出来。850个单词的主要词汇由600个名词（表示事物或事件）、150个形容词（表示品质和属性）和100个通用的“操作”词组成，主要是动词和介词。几乎所有的单词在英语国家都很常用。其中60%以上是单音节单词。基本词汇的创建部分是通过消除许多具有相同或相似含义的单词，并体验18个“基本”动词的使用，如make、get、do、have和be。这些动词通常与介词结合，如up、between、under、in和forward。例如，一名基础英语学生会在“上升”的情况下使用“上升”一词。</p>

<hr />

<h3 id="unit-5-passage-a--a-beautiful-mind-1">Unit 5 Passage A : A Beautiful Mind</h3>

<p>distinguish, as to, unlike, case, necessary, strike, chronic, result in, fortunate, collection</p>

<p>John Nash has the same mental illness that affects more than two million Americans: schizophrenia(精神分裂症).He has experienced the same symptoms as others <strong>(1)<em><u>striken</u></em></strong> with the disease: illusions that messages are being sent to him through television or newspapers. What <strong>(2)<em><u>distinguishes</u></em></strong> Nash from others is an uncommon amount of public attention. In 1994, Nash shared the Nobel Prize with two other economists.</p>

<p>The attention has <strong>(3)<em><u>resulted in</u></em></strong> a long overdue education for the public about the illness and its treatments.”<strong>(4)<em><u>Cases</u></em></strong> like Nash’s help us know that people may have mental illness but still can contribute to society,” says Roberto Gil.</p>

<p>Gil added that Nash’s recovery is not <strong>(5)<em><u>necessarily</u></em></strong> a normal thing. Schizophrenia usually affects people in their late teens or early twenties.” <strong>(6)<em><u>unlike</u></em></strong> Nash who didn’t slide into the illness until he was thirty. This gave him time to explore his theories and establish a social network that enabled him to survive later.Many patients who are diagnosed earlier in their lives are not as <strong>(7)<em><u>fortunate</u></em></strong>.</p>

<p>Much debate continues <strong>(8)<em><u>as to</u></em></strong> what exactly schizophrenia is and what causes it.One view suggests that it is an illness with many manifestations while another submits that it is a <strong>(9)<em><u>collection</u></em></strong> of illnesses often lumped together. According to the National Institute of Mental Health, schizophrenia is”a <strong>(10)<em><u>chronic</u></em></strong> and disabling brain disease that has no known single cause.</p>

<p>参考译文：</p>

<p>John Nash有与200多万美国人相同的精神疾病：精神分裂症。他经历了与其他患有这种疾病的人相同的症状：幻想信息是通过电视或报纸发送给他的。纳什与其他人的不同之处在于，他受到了不同寻常的公众关注。1994年，Nash与另外两位经济学家共同获得了诺贝尔奖。</p>

<p>这种关注导致了公众对这种疾病及其治疗方法早就应该进行的教育。”像Nash这样的案例帮助我们知道，人们可能患有精神疾病，但仍然可以为社会做出贡献，”Roberto Gil说。</p>

<p>John补充说，纳什的康复不一定是正常的事情。精神分裂症通常影响十几岁或二十出头的人。”不像Nash直到三十岁才病倒。这让他有时间探索自己的理论，并建立一个社交网络，使他能够在以后生存下来。许多在生命早期被诊断出的患者并没有那么幸运。</p>

<p>关于精神分裂症的确切含义及其病因，仍存在许多争论。一种观点认为，它是一种具有多种表现形式的疾病，而另一种观点则认为，它通常是一系列疾病的集合。根据美国国家心理健康研究所的说法，精神分裂症是“一种慢性致残性脑部疾病，没有已知的单一病因。</p>

<hr />

<h3 id="unit-7-passage-a--our-picture-of-the-universe-1">Unit 7 Passage A : Our Picture of the Universe</h3>

<p>It is an interesting reflection on the general climate of thought before the twentieth century that no one had suggested that the universe was expanding or contracting. It was generally accepted that <strong>(1)<em><u>either</u></em></strong> the universe had existed forever in an unchanging state, or that it had been <strong>(2)<em><u>created</u></em></strong> at a finite time in the past more or less as we observe it today. In part this may have been <strong>(3)<em><u>due to</u></em></strong> people’s tendency to believe in eternal truths, <strong>(4)<em><u>as well as</u></em></strong> the comfort they found in the thought that even though they may grow old and die, the universe is <strong>(5)<em><u>eternal</u></em></strong> and unchanging.</p>

<p>Even those who realized that Newton’s theory of gravity showed that the universe could not be static did not think to suggest that it might be expanding. <strong>(6)<em><u>Instead</u></em></strong>, they attempted to modify the theory by making the gravitational force repulsive at very large distances. This did not <strong>(7)<em><u>significantly</u></em></strong> affect their predictions of the motions of the planets, but it allowed an infinite distribution of stars to remain in equilibrium—with the attractive forces between nearby stars <strong>(8)<em><u>balanced</u></em></strong> by the repulsive forces from those that were farther away. However, we now believe such an equilibrium would be unstable: If the stars in some region got only slightly nearer each other, the attractive forces between them would become <strong>(9)<em><u>stronger</u></em></strong> and dominate over the repulsive forces so that the stars would continue to fall toward each other.<strong>(10)<em><u>On the other hand</u></em></strong>, if the stars got a bit farther away from each other, the repulsive forces would dominate and drive them farther apart.</p>

<p>参考译文：</p>

<p>这是对二十世纪之前总体思想氛围的一个有趣反思，即没有人提出宇宙在膨胀或收缩。人们普遍认为，要么宇宙以不变的状态永远存在，要么它或多或少是在我们今天观察到的有限时间内被创造出来的。在某种程度上，这可能是由于人们倾向于相信永恒的真理，以及他们在这样一种思想中找到的安慰，即即使他们可能会变老和死亡，宇宙也是永恒不变的。</p>

<p>即使是那些意识到牛顿引力理论表明宇宙不可能是静止的人，也不认为它可能在膨胀。相反，他们试图通过使引力在非常大的距离上排斥来修改这一理论。这并没有显著影响他们对行星运动的预测，但它使恒星的无限分布保持平衡——附近恒星之间的吸引力与较远恒星的排斥力相平衡。然而，我们现在认为这样的平衡是不稳定的：如果某个区域的恒星只稍微靠近一点，它们之间的吸引力就会变得更强，并主导排斥力，这样恒星就会继续朝着彼此坠落。另一方面，如果恒星彼此相距更远，排斥力将占据主导地位，并使它们相距更远。</p>

<hr />
<h3 id="unit-10-passage-a--spell-of-the-rising-moon-1">Unit 10 Passage A : Spell of the Rising Moon</h3>

<p>The Moon shows progressively different phases as it moves along its orbit around the Earth. Half the Moon is always in sunlight,<strong>(1)<em><u>just as</u></em></strong> half of the Earth has day while the other half has night. Thus, there is no <strong>(2)<em><u>permanent</u></em></strong> “dark side of the Moon”, which is sometimes confused with the Moon’s far side—the side that always faces away from the Earth. The phases of the Moon <strong>(3)<em><u>depend on</u></em></strong> how much of the sunlit half can be seen at any one time. In the <strong>(4)<em><u>phase</u></em></strong> called the new moon, the near side is completely in <strong>(5)<em><u>shadow</u></em></strong>. About a week after a new moon, the Moon is in first quarter, <strong>(6)<em><u>resembling</u></em></strong> a luminous half- circle; another week later, the full moon shows its fully lighted near side; a week afterward, in its last quarter, the Moon appears as a half-circle again. The entire cycle is repeated each <strong>(7)<em><u>lunar</u></em></strong> month. The Moon is full when it is farther away from the Sun than the Earth; it is new when it is <strong>(8)<em><u>closer</u></em></strong>. When it is more than half <strong>(9)<em><u>illuminated</u></em></strong>, it is said to be in gibbous phase. The Moon is said to be <strong>(10)<em><u>waning</u></em></strong> as it progresses from full to new, and to be waxing as it proceeds from new to full.</p>

<p>参考译文：</p>

<p>月球在绕地球运行的轨道上显示出逐渐不同的相位。月球的一半总是在阳光下，就像地球的一半有白天，另一半有黑夜一样。因此，没有永久的“月球黑暗面”，有时会将其与月球的远侧混淆，即始终背对地球的一侧。月球的相位取决于在任何时候可以看到多少被阳光照射的一半。在新月阶段，近侧完全处于阴影中。新月后大约一周，月亮在第一季度，像一个发光的半圆；又过了一周，满月显示出它完全照亮的近侧；一周后，在最后一个季度，月球再次出现半圆。整个周期在每个阴历月重复。当月亮离太阳比离地球更远时，它就是满月；当它靠近时，它是新的。当它被照亮一半以上时，据说它处于凸相。据说月亮在从满月到新月的过程中逐渐变弱，而在从新月到满月的过程中则逐渐变圆。</p>

<hr />

<h2 id="翻译">翻译</h2>

<h3 id="unit-2-passage-a-world-english-a-blessing-or-a-curse">Unit 2 Passage A World English: A Blessing or a Curse</h3>

<hr />

<p>For English is a killer. It is English that has killed off Cumbric, Cornish, Norn and Manx. There are still parts of these islands where sizeable communities speak languages that were there before English. Yet English is everwhere in everyday use and understood by all or virtually all, constituting such a threat to the three remaining Celtic languages, Irish, Scottish Gaelic, and Welsh… that their long-term future must be considered… very greatly at risk.</p>

<p><strong>译文1</strong>：</p>

<p>因为英语是个杀手。正是英语，导致坎伯兰语、康沃尔语、诺恩语和马恩语灭亡。在那些岛屿的部分地区，还有较大规模的群体讲比英语更古老的当地语言。但是，现在日常生活中，英语无处不在，人人–或者说–几乎人人都懂英语。英语威胁到那三种遗留的凯尔特语:爱尔兰语、苏格兰盖尔语和威尔士语，……所以必须意识到，从长远来看，这三种语言的未来……十分危险。</p>

<hr />

<p><strong>译文2</strong>：</p>

<p>He also associated such policies with a prejudice which he calls linguicism ( a condition parallel to racism and sexism ). As Phillipson sees it, leading institutions and individuals within the predominantly “white” English-speaking world, have ( by design or default ) encouraged or at least tolerated – and certainly have not opposes – the hegemonic spread of English, a spread which began some three centuries ago as economic and colonial expansion.</p>

<p>他还把这种政策和他所称的“语言歧视” （这个情况类似于“种族歧视”“性别歧视”）联系在一起。在菲利普森看来，在以“白人”为主的英语世界中，起主导作用的机构和个人（有意无意地）鼓励或者至少容忍英语大肆扩张，他们当然不反对英语的扩张。英语的霸权传播, 始于大约三个世纪前的经济和殖民扩张。</p>

<hr />

<p>By and large, we now view them as more or less benign, and often talk with admiration and appreciation about the cultures associated with them and what they have given to the world. And it is fairly safe to do this, because none of them now poses much of a threat.</p>

<p><strong>译文3</strong>：</p>

<p>总的来说，我们现在认为这些语言比较好，经常以赞美、感激的语气谈论与它们相关的文化以及它们给世界带来的变化。我们这样的态度，没有什么不妥，因为那些语言现在都不构成严重威胁。</p>

<hr />

<p>English however is probably too close for us to be able to analyze and judge it as dispassionately as we may now discuss the influence of Classical Chinese on East Asia or of Classical Latin on Western Europe. The jury is still out in the trial of the English language, and may take several centuries to produce its verdict, but evern so we can ask,in this European Year of Languages, whether Price and Phillipson are right to warn us all about the lanuage then I am using at this very moment.</p>

<p><strong>译文4</strong>：</p>

<p>我们现在可以冷静地讨论古汉语对东亚或古拉丁语对西欧的影响。但是，我们与英语关系太紧密，无法同样冷静地分析、评价英语。对于英语语言的审判，陪审团仍然没有定论，可能需要几个世纪才能做出裁决。但即使如此，值此欧洲语言年，我们可以提出这个问题: 普莱斯和菲利普森就我此时使用的语言对我们提出的警告是否有道理。</p>

<hr />

<p>English-speaking South Africans of British descent were not particularly strong in opposing the apartheid regime, and the black opposition, whose members had many languages ,was at first weak and disorganized.</p>

<p><strong>译文5</strong>：</p>

<p>说英语的、英国裔的南非人不是非常积极地反对种族隔离制度。在黑人的反对力量中成员使用多种语言，他们起初缺少力量与组织。</p>

<hr />

<p><strong>译文6</strong>：</p>

<p>Such symbolism suggests that the users of the world’s ligua franca should seek to benefit as fully as possible from the blessing and as far as possible avoid invoking the curse.</p>

<p>这种象征意义说明，使用世界通用语言的人应该努力尽可能用其利而避其弊。</p>

<hr />

<h3 id="unit-5-passage-a--a-beautiful-mind-2">Unit 5 Passage A : A Beautiful Mind</h3>

<p>John Forbes Nash, Jr. ——mathematical genius, inventor of a theory of rational behavior, visionary of the thinking machine——had been sitting with his visitor, also a mathematician, for nearly half an hour.</p>

<p><strong>译文1</strong>：</p>

<p>小约翰·福布斯·纳什–数学天才、理性行为理论的创立者、预见会思考的机器出现的预言者–已经和来访者，也是一位数学家，共坐了将近半个小时。</p>

<hr />

<p>He had been staring dully at a spot immediately in front of the left foot of Harvard professor George Mackey, hardly moving except to brush his long dark hair away from his forehead in a fitful, repetitive.</p>

<p><strong>译文2</strong>：</p>

<p>他一直目光呆滞地盯着哈佛教授乔治·麦基左脚前方不远的地方，除了一次次重复着将垂在前额的略长的黑发拨开的动作，他几乎一动不动。</p>

<hr />

<p>Over the next decade, a decade as notable for its supreme faith in human rationality as for its dark anxieties about mankind’s survival, Nash proved himself, in the words of the eminent geometer Mikhail Gromov, “the most remarkable mathematician of the second half of the century.</p>

<p><strong>译文3</strong>：</p>

<p>在接下来的十年，在那既以对人类理性抱有无上信念而著称，又以对人类生存怀有无尽忧虑而闻名的十年,纳什,用知名几何学家米克哈尔·格罗莫夫的话说,证明了自己是“20世纪后半叶最杰出的数学家”</p>

<hr />

<p>“Geniuses”, the mathematician Paul Halmos wrote, “are of two kinds: the ones who are just like all of us, but very much more so, and the ones who, apparently, have an extra human spark. We can all run, and some of us can run the mile in less than 4 minutes; but there is nothing that most of us can do that compares with the creation of the Great G-minor Fugue.” Nash’s genius was of that mysterious variety more often associated with music and art than with the oldest of all sciences.</p>

<p><strong>译文4</strong>：</p>

<p>数学家保罗·哈莫斯写道:“天才分为两种:一种就像我们大家一样，只是更为出色;另一种则是那些明显具备超凡人类灵感的人。我们都能跑步，有些人还能在四分钟内跑完一英里;但是我们大多数人所做的一切无论如何也无法与创作出G小调赋格曲相提并论。”纳什的天分就属于那种常与音乐和艺术而非与最古老的科学紧密相连的神奇异禀。</p>

<hr />

<p>Compulsively rational, he wished to turn life’s decisions——whether to take the first elevator or wait for the next one, there to abnk his money, what job to accept, thether to marry——into calculations of advantage and disadvantage, algorithms or mathematial rules divorced for emotion, convention, and tradition.</p>

<p><strong>译文5</strong>：</p>

<p>他具有一种强迫性的理性，希望将生活中的决定–是搭乘第一班电梯还是等待下一班，到哪里存钱，接受什么样的工作，是否结婚–都转化为利弊得失的计算，转化为完全脱离感情、习俗和传统的算法法则或数学规则。</p>

<hr />

<p>His remoteness was punctuated by flights of garrulousness about outer space and geopolitical trends, childish pranks, and unpredictable eruptions of anger. But these outbursts were, more often than not, as enigmatic as his silences.” He is not one of us” was a constant refrain.</p>

<p><strong>译文6</strong>：</p>

<p>他一贯冷漠，但一时兴起也会喋喋不休地谈论外太空和地缘政治趋势，或做出孩子般的恶作剧,或者毫无征兆地勃然大怒。但是这些情感的进发总是和他的沉默一样神秘莫测。“他和我们不一样”是人们常说的一句话。</p>

<hr />

<p>Nash’s insight into the dynamics of human rivalry——his theory of rational conflict and cooperation——was to bacome one of the most influential ideas of the twentieth century, transforming the young science of economics the way that Mendel’s ideas of genetic transmission, Darwin’s model of natural selection, and Newton’s celestial mechanics reshaped biology and physics in their day.</p>

<p><strong>译文7</strong>：</p>

<p>纳什对于人类竞争动态变化的洞察–他的理性竞争与合作理论–将会成为20世纪最具影响的思想理论之一。这一理论改变着新兴的经济学，其作用无异于孟德尔的基因遗传、达尔文的自然选择模式和牛顿的天体力学再造了当时的生物学和物理学。</p>

<hr />

<h3 id="unit-7-passage-a--our-picture-of-the-universe-2">Unit 7 Passage A : Our picture of the Universe</h3>

<hr />

<p>A well-know scientist ( some say it was Bertrand Russell ) once gave a public lecture on astronomy. He described how the earth orbits around the sun and how the sun, in turn, orbits around the center of a vast collection of stars called our galaxy.</p>

<p><strong>译文1</strong>：</p>

<p>一位著名的科学家(有人说是伯特兰·罗素)曾经做过一次关于天文学的演讲。他描述了地球如何围绕太阳运转，以及太阳如何进而围绕大量星群的中心运转，这些星群即所谓的银河系。</p>

<hr />

<p>According to a number of early cosmologies and the Jewish/Christian/Muslim tradition, the universe started at a finite, and not very distant, time in the past.</p>

<p><strong>译文2</strong>：</p>

<p>依据一些早期的宇宙论的观点和犹太/基督,穆斯林教派传统的观点，字宙起源于一个特定的并且不太遥远的过去时间。</p>

<hr />

<p>when most people believed in an essentially static and unchanging universe, the question of whether or not it had a beginning was really one of metaphysics or theology. One could account for what was observed equally well on the theory that the univers had existed forever or on the theory that it was set in motion at some finite time in such a manner as to look as though it had existed forever.</p>

<p><strong>译文3</strong>：</p>

<p>在多数人都认为宇宙基本上是静态的而且是不变的情况下，探讨宇宙是否有一个起源确实是一个属于玄学或神学范畴的问题。人们可以用两种不同的理论解释他们所观察到的事物。一种理论是宇宙永存;而另外一种理论是宇宙在某一个有限的时间以一种特定的方式被启动，而这种方式又使得宇宙看上去曾经永远存在。</p>

<hr />

<p>In order to talk about the nature of the universe and to discuss questions such as whether it has a beginning or an end, you have to be clear about what a scientific theory is.</p>

<p><strong>译文4</strong>：</p>

<p>为了探讨宇宙的本质以及宇宙是否有始有终等问题，你必须清楚什么是科学理论。</p>

<hr />
<p>A theory is a good theory if it satisfies two requirements. it must accurately describe a large class of observations on the basis of a model that contains only a few arbitrary elements, and it must make definite predictions about the results of future observations.</p>

<p><strong>译文5</strong>：</p>

<p>一个好的理论应满足两个要求。一是它必须能够基于一个只包含少数几个任意要素的模型来准确地描述人们所观察到的大量现象。二是它还必须能够明确地预测人们未来所能观察到的现象的结果。</p>

<hr />

<p>It turns out to be very difficult to devise a theory to describe the universe all in one go. Instead, we break the problem up into bits and invent a number of partial theories.</p>

<p><strong>译文6</strong>：</p>

<p>事实上，要想设计出一个能够描述一切宇宙现象的理论是十分困难的。取代的办法是，我们可以把问题分割开来，进而创建一些局部理论。</p>

<hr />

<h3 id="unit-10-passage-a--spell-of-the-rising-moon-2">Unit 10 Passage A : Spell of the Rising Moon</h3>
<p>共7个</p>

<hr />

<p>Still,  it tugs at our minds. If we unexpectedly encounter the full moon, huge and yellow over the horizon, we are helpless but to stare back at its commanding presence.And the moon has gifts to bestow upon those who watch.</p>

<p><strong>译文1</strong>：</p>

<p>但无论怎样，月亮依旧牵动我们的心灵。倘若我们偶尔遇见一轮黄灿灿的满月高悬中天，谁都会禁不住停下来凝神仰望她尊贵的姿容。而月亮也向注视她的人赐予厚礼。</p>

<hr />

<p>But as the moon lifted off the ridge it gathered firmness and authority.Its complexion changed from red,to orange, to glod,to impassive yellow.It seemed to draw light out of the darkening earth, for as it rose,the hills and valleys below grew dimmer.By the time the moonstood clear of the horizon, full chested and round and the color of ivory, the valleys were deep shadows in the landscape.</p>

<p><strong>译文2</strong>：</p>

<p>然而当月亮缓缓升起，离开山头，它变得坚定、威严;它的面孔也由红变成了橘红又变成金色，最后是平静的明黄色。它似乎从渐暗的大地中吸取了光明，因为随着它的升起，下面的丘陵山谷愈来愈黯淡朦。待到皓月当空，满月如盘，闪烁着象牙般乳白的清辉，山谷便成了风景中一片片幽深的阴影。</p>

<hr />

<p>Moonrise is slow and serried with subtleties.To watch it, we must slip into an older,more patient sense of time.To watch the moon move inexorably higher is to find an unusual stillness within outselves.Our imaginations become aware of the vast distances of space,the immensity of the earth and the huge improbability of our own existence.We feel small but privileged.</p>

<p><strong>译文3</strong>：</p>

<p>月出是缓慢的，充满微妙变化。观看月出，我们得回到从前那种对时间的耐心中去。观看月亮义无反顾地越升越高，就如同找到自己内心异乎寻常的宁静。我们的神思能让我们看到宇宙的广袤和大地的宽，能让我们意识到我们自身的存在是多么不可思议。我们觉得自身渺小，却又深受大自然的厚待。</p>

<hr />

<p>Moonlight shows us none of life’s harder edges. Hillsides seem silken and silvery,the oceans still and blue in its light. In moonlight we become less calculating, more drawn to our feelings.</p>

<p><strong>译文4</strong>：</p>

<p>月色下，我们看不到生活中坚硬的棱角。山坡在月光中如同笼上了柔和的轻纱一片银白;海水在月光下碧蓝而静谧;我们在月光下也不再像白日那般精于算计，而是更加沉醉于情感中。</p>

<hr />

<p>I return often to the rising moon.I am draw especially when events crowd ease and clarity of vision into a small corner of my life.</p>

<p><strong>译文5</strong>：</p>

<p>我经常回到月出的时刻。特别是当生活中的琐事将我的轻松和清晰的视野挤到一个小小的角落时，我更是被月出所吸引。</p>

<hr />

<p>Lovers and poets find deeper meaning at night.We are all apt to pose deeper questions-about our originis and destinies.We indulge in riddles,rather than in the impersonal geometries that govern the daylit world.We become philosophers and mystics.</p>

<p><strong>译文6</strong>：</p>

<p>恋人和诗人在夜里能找到生活更深刻的意义。其实我们都爱问一些更加深刻的问题–我们从哪来?命运又将把我们带到何方?我们沉于谜团中，而不是那些统治着白天世界的刻板的条条框框。在夜里，我们都成了哲人和神秘主义者。</p>

<hr />

<p>At moonrise, as we slow our minds to the pace of the heavens, enchantment steals over us.We open the vents of feeling and exercise parts of our minds that reason locks away by day.We hear,across the distances,murmurs of ancient hunters and see anew the visions of poets and lovers of long ago.</p>

<p><strong>译文7</strong>：</p>

<p>月出之时，当我们放慢自己的思想，让它跟随天国的脚步，一种心醉神迷的感觉就会流遍全身。我们会打开情感的窗口，会让白天被理智锁住的那部分思绪尽情奔涌。我们越过遥远的时空，听见远古猎人的低语，再次看到很久以前的恋人与诗人眼中的世界。</p>

<hr />

<h2 id="写作-1">写作</h2>]]></content><author><name>Ranok</name></author><category term="English" /><category term="期末考试" /><summary type="html"><![CDATA[  研究生英语，作为高等教育阶段的一个重要组成部分，是为已具备本科或相当水平英语能力的研究生所设计的课程体系。这一阶段的英语学习，不仅旨在进一步提升学生的英语综合应用能力，包括听、说、读、写、译五个方面，还强调在专业领域内有效运用英语进行学术交流和研究的能力。]]></summary></entry><entry><title type="html">智能感知</title><link href="http://localhost:4000/intellisense" rel="alternate" type="text/html" title="智能感知" /><published>2023-11-04T00:00:00+08:00</published><updated>2023-11-04T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-intellisense</id><content type="html" xml:base="http://localhost:4000/intellisense"><![CDATA[<p>  《智能感知》是一门专注于研究如何通过计算机技术和人工智能理论来感知和理解现实世界的课程。它涵盖了多个领域的知识，包括机器学习、深度学习、计算机视觉、自然语言处理等，旨在培养学生具备利用人工智能技术进行数据分析和解决实际问题的能力。</p>

<blockquote>
  <p>温馨提示：如果你觉得界面配色有些刺眼，你可以点击右上角的菜单，选择使用圆形按钮切换主题背景。</p>
</blockquote>

<p><a id="article_top"></a></p>

<hr />

<h1 id="前言">前言</h1>
<p>  本博客针对，智能感知期末考试进行整理。材料内容由 <strong>TraSorrow</strong>同学亲情提供，本人只做整理排版工作。内容较多，祝你顺利通过考试，取得一个<strong>好成绩</strong>！。</p>

<hr />

<h1 id="题目部分">题目部分</h1>

<p>题目题型包含选择、判断、以及问答大题、编程题、以及设计题，本博客内容包含两套试卷的量，因此内容较多。</p>

<blockquote>
  <p>提示：选择判断的试题顺序与考试相同，来不及备考的同学可以<strong>直接背答案</strong></p>
</blockquote>

<hr />
<h2 id="选择题">选择题</h2>

<h5 id="1-讯飞开放平台文字识别服务在处理大量文本时可能遇到的主要问题是什么b">1. 讯飞开放平台文字识别服务在处理大量文本时,可能遇到的主要问题是什么?(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 识别准确率低
B. 识别速度慢
C. 无法处理特殊字符
D. 所有选项都正确
</code></pre></div></div>

<h5 id="2-以下哪个应用场景不属于图像识别技术的应用c">2. 以下哪个应用场景不属于图像识别技术的应用?(C)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 自动驾驶
B. 医学影像诊断
C. 语音识别
D. 人脸识别支付
</code></pre></div></div>

<h5 id="3-讯飞开放平台的语音合成服务主要支持哪些语言b">3. 讯飞开放平台的语音合成服务主要支持哪些语言?(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 中文和英文
B. 中文、英文和其他多种语言
C. 仅支持中文
D. 仅支持英文
</code></pre></div></div>

<h5 id="4-在命名实体识别中以下哪种方法不属于基于深度学习的方法d">4. 在命名实体识别中,以下哪种方法不属于基于深度学习的方法?(D)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 卷积神经网络(CNN)
B. 循环神经网络(RNN)
C. 长短时记忆网络(LSTM)
D. 支持向量机(SVM)
</code></pre></div></div>

<h5 id="5-flask中的路由装饰器是哪个b">5. Flask中的路由装饰器是哪个?(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. @route()
B. @app.route()
C. @url_for()
D. @request()
</code></pre></div></div>

<h5 id="6-语音识别的输入实际上就是一段随时间播放的信号序列而输出则是一段a">6. 语音识别的输入实际上就是一段随时间播放的信号序列,而输出则是一段(A)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 文本序列
B. 语音序列
C. 音频特征
D. mel频谱
</code></pre></div></div>

<h5 id="7-语音转写技术的准确性如何提高d">7. 语音转写技术的准确性如何提高?(D)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 增加训练数据量
B. 优化算法模型
C. 提高麦克风质量
D. 所有以上方法
</code></pre></div></div>

<h5 id="8-语音识别目前存在的主要问题不包括b">8. 语音识别目前存在的主要问题不包括(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 自由交谈风格
B. 细微问题的发现
C. 语言混合识别
D. 多人说话重叠
</code></pre></div></div>

<h5 id="9-提高语音识别健壮性的方法不包括c">9. 提高语音识别健壮性的方法不包括(C)。</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 增加训练集样本
B. 多样化录音设备
C. 减小模型参数量
D. 添加语音增强前处理
</code></pre></div></div>

<h5 id="10-讯飞开放平台的语音合成服务可以用于哪些应用场景d">10. 讯飞开放平台的语音合成服务可以用于哪些应用场景?(D)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 智能客服机器人
B. 语音助手
C. 有声读物制作
D. 所有以上选项答案
</code></pre></div></div>

<h5 id="11-讯飞开放平台文字识别服务提供的api接口类型主要有哪些a">11. 讯飞开放平台文字识别服务提供的API接口类型主要有哪些?(A)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. HTTP和HTTPS
B. TCP和UDP
C. MQTT和CoAP
D. 所有选项都正确
</code></pre></div></div>

<h5 id="12-图像识别技术中卷积神经网络cnn的主要作用是什么c">12. 图像识别技术中,卷积神经网络(CNN)的主要作用是什么?(C)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 生成图像
B. 分类图像
C. 提取图像特征
D. 压缩图像
</code></pre></div></div>

<h5 id="13-讯飞开放平台语音合成服务在处理大量文本时可能遇到的主要问题是什么a">13. 讯飞开放平台语音合成服务在处理大量文本时,可能遇到的主要问题是什么?(A)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 合成速度慢
B. 合成质量低
C. 无法处理特殊字符
D. 所有选项都正确
</code></pre></div></div>

<h5 id="14-命名实体识别ner的主要任务是什么c">14. 命名实体识别(NER)的主要任务是什么?(C)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 从文本中提取关键词
B. 从文本中提取短语
C. 从文本中识别并分类预定义的实体,如人名、地名、组织名等
D. 从文本中提取情感倾向
</code></pre></div></div>

<h5 id="15-flask中的路由装饰器是哪个b">15. Flask中的路由装饰器是哪个?(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. @route()
B. @app.route()
C. @url_for()
D. @request()
</code></pre></div></div>

<h5 id="16-语音识别系统主要包含d以及解码搜索这些主要流程">16. 语音识别系统主要包含(D)以及解码搜索这些主要流程</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 特征提取
B. 声学模型
C. 语言模型
D. 以上都是
</code></pre></div></div>

<h5 id="17-在语音转写中以下哪个参数对于识别准确性的影响较大d">17. 在语音转写中,以下哪个参数对于识别准确性的影响较大?(D)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 采样率
B. 帧长
C. 麦克风数量
D. 语音质量
</code></pre></div></div>

<h5 id="18-语音识别又称自动语音识别技术简称是b">18. 语音识别,又称自动语音识别技术,简称是(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. TTS
B. ASR
C. RAS
D. SST
</code></pre></div></div>

<h5 id="19-在语音识别任务中过拟合的解决方法不包括c">19. 在语音识别任务中,过拟合的解决方法不包括（C）。</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 增加训练样本量
B. 提前停止训练
C. 增加网络层数
D. L2正则化
</code></pre></div></div>

<h5 id="20-海量歌曲数据中找到音乐特征相似的歌曲可以采用技术b">20. 海量歌曲数据中,找到音乐特征相似的歌曲,可以采用技术。(B)</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 分布式计算
B. 推荐系统
C. 数据挖掘
D. 语音识别
</code></pre></div></div>

<hr />
<h2 id="判断题">判断题</h2>

<blockquote>
  <p>提示都是<strong>对错对对错</strong></p>
</blockquote>

<ol>
  <li>（✔）智能感知技术主要依赖于人工智能算法来实现对环境的感知和理解。</li>
  <li>（✖）在智能感知技术中，计算机视觉和语音识别是两个独立的技术领域，它们之间没有交集。</li>
  <li>（✔）在Flask中，可以使用AJAX技术实现前后端数据交互。</li>
  <li>（✔）在Flask中，可以使用render_template()函数渲染HTML模板。</li>
  <li>（✖）在Flask中，可以使用request对象实现用户会话管理。错</li>
  <li>（✔）深度学习技术在智能感知技术中的应用主要体现在图像识别、语音识别和自然语言处理等领域。</li>
  <li>（✖）感知技术在安防领域的应用仅限于人脸识别，无法实现行为分析等功能.错</li>
  <li>（✔）Flask中的Jinja2模板引擎用于生成动态HTML页面。</li>
  <li>（✔）在Flask中，可以使用redirect()函数实现页面重定向。</li>
  <li>（✖）在Flask中，可以使用session对象获取HTTP请求的信息。</li>
</ol>

<hr />

<h2 id="问答题">问答题</h2>

<h3 id="1语音识别性别年龄的原因有哪些-至少五个">1.语音识别性别/年龄的原因有哪些 至少五个</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 声调
2. 口音和方言
3. 语音特征
4. 背景噪音
5. 基频
</code></pre></div></div>

<hr />

<h3 id="2人脸比对的功能讯飞开放平台中的人脸对比对人脸的要求">2.人脸比对的功能,讯飞开放平台中的人脸对比对人脸的要求</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>功能:人脸比对可以对比两张照片中的人脸信息，判断是否是同一个人
要求:需要清晰的人脸照片，人脸大小不小于30*30像素，其中人脸俯仰角、左右偏航角、人脸翻转角60°以内识别效果更好。
</code></pre></div></div>

<hr />

<h3 id="3情感分析的功能应用场景">3.情感分析的功能,应用场景</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>功能:情感分析即文本倾向性分析，就是计算机判断人们的看法或评论是属于对事物的积极、消极或中性意见。

应用场景:

1.	电商平台
2.	社交平台
3.	客服平台
4.	Chatbot
</code></pre></div></div>

<hr />

<h3 id="4语音合成和语音识别的概念和区别">4.语音合成和语音识别的概念和区别</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>语音合成是通过将文本合成为声音音频的过程
语言识别是将语音中的词汇转化为计算机的可读输入
他们的区别是:
语音合成是文本到声音的过程
语音识别是将人的语音转化为计算机可读的文本信息
</code></pre></div></div>

<hr />

<h2 id="编程题">编程题</h2>

<h4 id="1程序填空">1.程序填空</h4>

<blockquote>
  <p>注意这里只显示需要填写答案的部分，并不是完整的代码，请注意区分！</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">#判断图片是否存在
</span>    <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="n">image_path</span><span class="p">):</span>
    <span class="c1">#读取图片数据
</span>    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
    <span class="c1">#将api_key作为请求params中的参数,发送post请求
</span>    <span class="n">response</span><span class="o">=</span><span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span><span class="n">params</span><span class="o">=</span><span class="p">{</span><span class="err">‘</span><span class="n">api_key</span><span class="err">’</span><span class="p">:</span><span class="n">api_key</span><span class="p">})</span>
    <span class="c1">#如果返回的状态码为200,请求成功
</span>    <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="c1">#如果请求成功,解析返回的JSON数据
</span>        <span class="n">result</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="2程序填空">2.程序填空:</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span><span class="n">url_for</span><span class="p">,</span><span class="n">redirect</span>
    <span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
    <span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="err">’</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
        <span class="k">return</span> <span class="err">‘</span><span class="n">Hello</span> <span class="n">World</span><span class="err">’</span>	<span class="o">//</span>	<span class="n">A</span><span class="p">:</span><span class="n">Hello</span> <span class="n">World</span>		<span class="n">B</span><span class="p">:</span><span class="n">success</span>
    <span class="c1">#省略部分代码
</span>    <span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="n">login</span><span class="err">’</span><span class="p">)</span>	<span class="o">//</span>	<span class="n">A</span><span class="p">:</span><span class="err">’</span><span class="o">/</span><span class="n">login</span><span class="err">’</span>		<span class="n">B</span><span class="p">:</span><span class="err">’</span><span class="o">/</span><span class="n">register</span><span class="err">’</span>
    <span class="k">def</span> <span class="nf">login</span><span class="p">():</span>
        <span class="c1">#模拟登录流程
</span>        <span class="n">flag</span> <span class="o">=</span> <span class="err">‘</span><span class="n">success</span><span class="err">’</span>
        <span class="c1">#如果登录成功,跳转到首页
</span>        <span class="k">if</span> <span class="n">flag</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="n">url_for</span><span class="p">(</span><span class="err">‘</span><span class="n">index</span><span class="err">’</span><span class="p">))</span>
        <span class="k">return</span> <span class="err">‘</span><span class="n">登录页面</span><span class="err">’</span>
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="err">‘</span><span class="n">__main__</span><span class="err">’</span><span class="p">:</span>
        <span class="n">app</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<h2 id="设计题">设计题</h2>

<h3 id="基于智能语音合成技术的虚拟导游系统">基于智能语音合成技术的虚拟导游系统</h3>

<h4 id="1评估语音合成系统质量的指标">(1)评估语音合成系统质量的指标</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>自然度：评估合成语音的听起来自然程度，是否接近人类语音。
清晰度：评估合成语音的发音是否清晰，是否易于理解。
准确性：评估合成语音的发音是否准确，是否能够准确地传达信息。
情感表达：评估合成语音是否能够表达出特定的情感，如愉快、悲伤、愤怒等。
语种和语言能力：评估语音合成系统是否能够支持不同的语种和语言，以及其处理能力如何。
时延：评估语音合成系统的响应速度，即从输入到输出的时间。
稳定性：评估语音合成系统在各种情况下的运行稳定性，如在不同网络环境、不同设备、不同操作系统下的表现。
</code></pre></div></div>

<h4 id="2主要功能至少两个">(2)主要功能至少两个</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>语音导览：根据旅游者的位置和需求，提供景点讲解、历史背景介绍等服务。
路线规划：根据旅游者的需求和时间安排，为其规划合理的旅游路线，包括交通方式、景点顺序、餐饮等。
信息咨询：为旅游者提供关于旅游信息、天气、文化等方面的咨询服务。
语音交互：通过语音识别和语音合成技术，实现与旅游者的语音交互，解答其问题、提供建议等。
个性化服务：通过分析旅游者的偏好和历史行为，为其提供个性化的导览服务、推荐景点等。
</code></pre></div></div>

<h5 id="3分别描述实现该功能的技术实现方法至少三个">(3)分别描述实现该功能的技术实现方法至少三个</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.语音识别技术：通过语音识别技术，将旅游者的语音指令转化为文字，便于后续处理和分析。常见的语音识别技术包括基于深度学习和基于规则的方法等。
2.自然语言处理技术：通过自然语言处理技术，对文字指令进行分析和理解，提取出关键信息，如景点名称、位置、历史背景等。常见的自然语言处理技术包括分词、词性标注、句法分析等。
3.语音合成技术：通过语音合成技术，将文字指令转化为自然、清晰的语音，便于旅游者理解和接受。常见的语音合成技术包括基于规则的方法和基于深度学习的方法等。
</code></pre></div></div>

<h4 id="4描述系统可能会出现的问题及解决方案-至少三个">(4)描述系统可能会出现的问题及解决方案	至少三个</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.语音识别不准确：由于环境噪音、口音差异等因素影响，可能导致语音识别不准确。解决方案可以采用多模态识别技术，结合视觉、文本等信息提高识别准确性。
2.自然语言处理错误：由于语义歧义、背景知识不足等因素影响，可能导致自然语言处理错误。解决方案可以采用上下文理解、多轮对话等方式提高语义理解准确性。
3.语音合成不自然：由于语音合成的技术限制或参数设置不当等因素影响，可能导致语音合成不自然。解决方案可以采用更自然的语音合成技术或针对特定场景调整参数设置等方式提高语音合成质量。
4.数据安全问题：由于数据传输、存储等方面存在安全漏洞，可能导致数据泄露或被篡改。解决方案可以采用加密传输、访问控制、备份数据等方式保障数据安全。
5.系统稳定性不足：由于硬件设备故障、网络中断等因素影响，可能导致系统稳定性不足。解决方案可以采用高可用性设计、容错机制等方式提高系统稳定性。
</code></pre></div></div>

<hr />

<h2 id="基于智能语音技术的智能家居控制系统">基于智能语音技术的智能家居控制系统</h2>

<p>  (1)(3)(4)同上</p>

<h4 id="2-主要功能至少两个">(2) 主要功能(至少两个):</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.语音控制：用户可以通过语音指令控制智能家居设备，如灯光、窗帘、空调、电视等。这种控制方式无需使用手机或遥控器，方便快捷。
2.智能家居设备的控制：系统可以连接并控制多种智能家居设备，包括但不限于灯光、窗帘、空调、电视等。用户可以通过语音指令或手机应用程序对这些设备进行统一控制。
3,定时控制：用户可以为智能家居设备设置定时任务，例如早晨自动开启窗帘和灯光，晚上自动关闭。
4.远程控制：用户可以通过手机应用程序远程控制智能家居设备，无论身在何处，都能随时随地掌控家中各项设备的状态。
</code></pre></div></div>

<hr />

<p><a href="#article_top">回到顶部</a></p>]]></content><author><name>TraSorrow</name></author><category term="python" /><category term="期末考试" /><summary type="html"><![CDATA[  《智能感知》是一门专注于研究如何通过计算机技术和人工智能理论来感知和理解现实世界的课程。它涵盖了多个领域的知识，包括机器学习、深度学习、计算机视觉、自然语言处理等，旨在培养学生具备利用人工智能技术进行数据分析和解决实际问题的能力。]]></summary></entry><entry><title type="html">大数据可视化</title><link href="http://localhost:4000/largedatavisualization" rel="alternate" type="text/html" title="大数据可视化" /><published>2023-11-03T00:00:00+08:00</published><updated>2023-11-03T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-largedatavisualization</id><content type="html" xml:base="http://localhost:4000/largedatavisualization"><![CDATA[<p>  大数据可视化是指将庞大的数据集通过图表、地图、仪表盘等可视化工具呈现出来，使人们能够直观地理解和分析数据。它是数据分析和决策过程中的重要工具，有助于揭示数据背后的模式、趋势和关联关系，帮助用户更好地理解数据，并根据数据进行决策。</p>

<blockquote>
  <p>温馨提示：如果你觉得界面配色有些刺眼，你可以点击右上角的菜单，选择使用圆形按钮切换主题背景。</p>
</blockquote>

<p><a id="article_top"></a></p>

<hr />
<h1 id="目录">目录</h1>

<ul>
  <li><a href="#目录">目录</a></li>
  <li><a href="#前言">前言</a></li>
  <li><a href="#题目部分">题目部分</a>
    <ul>
      <li><a href="#选择题">选择题</a>
        <ul>
          <li><a href="#1-哪些图形适合显示多维数据">1. 哪些图形适合显示多维数据:</a></li>
          <li><a href="#2-哪些图形适合显示时间序列数据">2. 哪些图形适合显示时间序列数据:</a></li>
          <li><a href="#3-哪些图形适合显示分类数据">3. 哪些图形适合显示分类数据:</a></li>
          <li><a href="#4-哪些图形适合显示离散数据">4. 哪些图形适合显示离散数据:</a></li>
          <li><a href="#5-哪些图形适合显示二元数据">5. 哪些图形适合显示二元数据:</a></li>
        </ul>
      </li>
      <li><a href="#填空题">填空题:</a>
        <ul>
          <li><a href="#1-条形图通常显示哪些数据">1. 条形图通常显示哪些数据:</a></li>
          <li><a href="#2-散点图用于显示什么类型的数据">2. 散点图用于显示什么类型的数据:</a></li>
          <li><a href="#3-直方图用于显示什么类型的数据">3. 直方图用于显示什么类型的数据:</a></li>
          <li><a href="#4-饼图用于显示什么类型的数据">4. 饼图用于显示什么类型的数据:</a></li>
          <li><a href="#5-折线图用于显示什么类型的数据">5. 折线图用于显示什么类型的数据:</a></li>
        </ul>
      </li>
      <li><a href="#问答题">问答题</a>
        <ul>
          <li><a href="#1简述数据可视化流程">1.简述数据可视化流程</a></li>
          <li><a href="#2简述数据可视化常用的工具">2.简述数据可视化常用的工具</a></li>
          <li><a href="#3简述数据可视化可以用于哪些行业至少五个">3.简述数据可视化可以用于哪些行业(至少五个)</a></li>
          <li><a href="#4简述可视化的意义至少三条">4.简述可视化的意义(至少三条)</a></li>
          <li><a href="#5pandas中可以读取多种文件格式常用的文件格式有哪几种">5.pandas中可以读取多种文件格式,常用的文件格式有哪几种</a></li>
          <li><a href="#6据清洗有哪些方法">6.据清洗有哪些方法</a></li>
          <li><a href="#7异常值检测有哪些方法两种基本方法">7.异常值检测有哪些方法(两种基本方法):</a></li>
          <li><a href="#8可视化哪些图像适合对比为什么适合">8.可视化哪些图像适合对比,为什么适合</a></li>
          <li><a href="#9-编程题">9. 编程题:</a>
            <ul>
              <li><a href="#91-阅读以上代码回答问题">9.1 阅读以上代码回答问题:</a></li>
              <li><a href="#911-encoding是哪一个类型的参数">9.1.1 encoding	是哪一个类型的参数:</a></li>
              <li><a href="#912-如果要把data3和data4按照b列合并请写出合并代码">9.1.2 如果要把data3和data4按照B列合并,请写出合并代码:</a></li>
              <li><a href="#92-根据图表来回答问题">9.2 根据图表来回答问题:</a></li>
              <li><a href="#921-请根据表的数据分析可以从哪几个角度可视化并写出理由">9.2.1 请根据表的数据分析可以从哪几个角度可视化,并写出理由:</a></li>
              <li><a href="#922-根据上题中选取一种可视化的需求写出完整代码">9.2.2 根据上题中选取一种可视化的需求,写出完整代码</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<h1 id="前言">前言</h1>
<p>  本博客针对，大数据可视化期末考试进行整理。材料内容由 <strong>TraSorrow</strong>同学亲情提供，本人只做整理排版工作。内容不多，祝你取得一个<strong>好成绩</strong>！。</p>

<hr />

<h1 id="题目部分">题目部分</h1>

<p>  题型主要有，选择题、填空题、问答大题（包含编程题）组成。<br />   内容如下仅供参考。</p>

<hr />

<h2 id="选择题">选择题</h2>

<h4 id="1-哪些图形适合显示多维数据">1. 哪些图形适合显示多维数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>直方图
</code></pre></div></div>

<h4 id="2-哪些图形适合显示时间序列数据">2. 哪些图形适合显示时间序列数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>折线图
</code></pre></div></div>

<h4 id="3-哪些图形适合显示分类数据">3. 哪些图形适合显示分类数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>条形图
</code></pre></div></div>

<h4 id="4-哪些图形适合显示离散数据">4. 哪些图形适合显示离散数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>散点图
</code></pre></div></div>

<h4 id="5-哪些图形适合显示二元数据">5. 哪些图形适合显示二元数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>散点图
</code></pre></div></div>

<hr />

<h2 id="填空题">填空题:</h2>

<h4 id="1-条形图通常显示哪些数据">1. 条形图通常显示哪些数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>分类数据
</code></pre></div></div>

<h4 id="2-散点图用于显示什么类型的数据">2. 散点图用于显示什么类型的数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>离散数据
</code></pre></div></div>

<h4 id="3-直方图用于显示什么类型的数据">3. 直方图用于显示什么类型的数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>连续数据
</code></pre></div></div>

<h4 id="4-饼图用于显示什么类型的数据">4. 饼图用于显示什么类型的数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>离散数据
</code></pre></div></div>

<h4 id="5-折线图用于显示什么类型的数据">5. 折线图用于显示什么类型的数据:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>连续数据
</code></pre></div></div>

<hr />

<h2 id="问答题">问答题</h2>

<h3 id="1简述数据可视化流程">1.简述数据可视化流程</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 采集数据
2. 数据处理和变换
3. 可视化映射
4. 人机交互以及用户感知
</code></pre></div></div>

<h3 id="2简述数据可视化常用的工具">2.简述数据可视化常用的工具</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Tableau
2. dataV
3. ECharts
4. FineBl
5. Python numpy Matplotlib库
6. Excel
</code></pre></div></div>

<h3 id="3简述数据可视化可以用于哪些行业至少五个">3.简述数据可视化可以用于哪些行业(至少五个)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 金融行业
2. 教育行业
3. 天气预报
4. 医疗行业
5. 物流行业
</code></pre></div></div>

<h3 id="4简述可视化的意义至少三条">4.简述可视化的意义(至少三条)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 通过图形化手段清晰有效地传达与沟通信息
2. 帮助人更好的分析数据
3. 帮助企业从信息中提取知识、从知识中收获价值
</code></pre></div></div>

<h3 id="5pandas中可以读取多种文件格式常用的文件格式有哪几种">5.pandas中可以读取多种文件格式,常用的文件格式有哪几种</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. CSV文件
2. Excel文件
3. JSON文件
4. 压缩文件(.zip等)
5. 文本文件(.tsv,.txt等)
</code></pre></div></div>

<h3 id="6据清洗有哪些方法">6.据清洗有哪些方法</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 去除空值
2. 缺失值填充
3. 重复值处理
4. 数据标准化
</code></pre></div></div>

<h3 id="7异常值检测有哪些方法两种基本方法">7.异常值检测有哪些方法(两种基本方法):</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 箱线图法
2. Z-Score法
3. IQR法
4. 散点图法
5. 直方图
6. 线图
</code></pre></div></div>

<h3 id="8可视化哪些图像适合对比为什么适合">8.可视化哪些图像适合对比,为什么适合</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.  柱状图 原因: 可以通过柱子的高度可以直观地展示数值之间的差异
2.  饼图 原因: 可以通过扇形面积和角度来比较不同类别的数据
3.  条形图 原因: 可以通过不同长度的条形可以清晰地比较各个类别的数值大小
4.  线状图 原因: 通过线条的起伏变化可以反映出一个序列中的趋势和规律
5.  散点图：原因散点图通过点的分布情况，可以直观地展示两个变量之间的关联程度。
</code></pre></div></div>

<hr />

<h3 id="9-编程题">9. 编程题:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    <span class="n">Import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
    
    <span class="n">data1</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="err">“</span><span class="n">F</span><span class="p">:</span>\\<span class="n">tmp</span>\\<span class="n">数据1</span><span class="p">.</span><span class="n">csv</span><span class="err">”</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="err">’</span><span class="n">gb18030</span><span class="err">’</span><span class="p">)</span>
    
    <span class="n">data2</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="err">“</span><span class="n">F</span><span class="p">:</span>\\<span class="n">tmp</span>\\<span class="n">数据2</span><span class="p">.</span><span class="n">csv</span><span class="err">”</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="err">’</span><span class="n">gb18030</span><span class="err">’</span><span class="p">)</span>
    <span class="n">data3</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="err">‘</span><span class="n">A</span><span class="err">’</span><span class="p">:[</span><span class="err">‘</span><span class="n">a1</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">a2</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">a3</span><span class="err">’</span><span class="p">],</span><span class="err">’</span><span class="n">B</span><span class="err">’</span><span class="p">:[</span><span class="err">‘</span><span class="n">b1</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">b2</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">b3</span><span class="err">’</span><span class="p">],</span><span class="err">’</span><span class="n">C</span><span class="err">’</span><span class="p">:[</span><span class="err">‘</span><span class="n">c1</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">c2</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">c3</span><span class="err">’</span><span class="p">]})</span>
    <span class="n">data4</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="err">’</span><span class="n">B</span><span class="err">’</span><span class="p">:[</span><span class="err">‘</span><span class="n">b2</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">b3</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">b4</span><span class="err">’</span><span class="p">],</span><span class="err">’</span><span class="n">D</span><span class="err">’</span><span class="p">:[</span><span class="err">‘</span><span class="n">d2</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">d3</span><span class="err">’</span><span class="p">,</span><span class="err">’</span><span class="n">d4</span><span class="err">’</span><span class="p">]})</span>

</code></pre></div></div>

<h4 id="91-阅读以上代码回答问题">9.1 阅读以上代码回答问题:</h4>

<h4 id="911-encoding-是哪一个类型的参数">9.1.1 encoding	是哪一个类型的参数:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>关键字参数
</code></pre></div></div>

<h4 id="912-如果要把data3和data4按照b列合并请写出合并代码">9.1.2 如果要把data3和data4按照B列合并,请写出合并代码:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>merged_data = pd.merge(data3, data4, on='B', how='outer')
</code></pre></div></div>

<hr />

<div class="row">
    
    <div class="column">
        <img class="single" src="/assets/img/blog-img/largedatavisualization/1.jpg" alt="1.jpg" />
    </div>
    
</div>

<h4 id="92-根据图表来回答问题">9.2 根据图表来回答问题:</h4>

<h4 id="921-请根据表的数据分析可以从哪几个角度可视化并写出理由">9.2.1 请根据表的数据分析可以从哪几个角度可视化,并写出理由:</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>可以选择两个角度考虑年度和指标
在国民总收入,比较随着年度的变化,收入总量的变化趋势
还可以根据某一年不同指标之间的比较来获取数据信息
</code></pre></div></div>

<h4 id="922-根据上题中选取一种可视化的需求写出完整代码">9.2.2 根据上题中选取一种可视化的需求,写出完整代码</h4>

<blockquote>
  <p>注意本题代码老师并未透露。且题目也可能变化，为了避免误导此处不展示代码示例。</p>
</blockquote>

<p><a href="#article_top">回到顶部</a></p>]]></content><author><name>TraSorrow</name></author><category term="python" /><category term="大数据" /><summary type="html"><![CDATA[  大数据可视化是指将庞大的数据集通过图表、地图、仪表盘等可视化工具呈现出来，使人们能够直观地理解和分析数据。它是数据分析和决策过程中的重要工具，有助于揭示数据背后的模式、趋势和关联关系，帮助用户更好地理解数据，并根据数据进行决策。]]></summary></entry><entry><title type="html">神经网络</title><link href="http://localhost:4000/artificialNetwork" rel="alternate" type="text/html" title="神经网络" /><published>2023-06-21T00:00:00+08:00</published><updated>2023-06-21T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-artificialNetwork</id><content type="html" xml:base="http://localhost:4000/artificialNetwork"><![CDATA[<p>  人工神经网络（Artificial Neural Networks，简写为ANNs）也简称为神经网络（NNs）或称作连接模型（Connection Model），它是一种模仿动物神经网络行为特征，进行分布式并行信息处理的算法数学模型。这种网络依靠系统的复杂程度，通过调整内部大量节点之间相互连接的关系，从而达到处理信息的目的。</p>

<hr />

<h1 id="前言">前言</h1>
<p>  本博客针对神经网络期末考试课程整理，由于该授课老师对考试内容透露较少，因此整理的内容不一定能准确的压到，请做好心理准备。</p>

<hr />

<h1 id="目录">目录</h1>
<ul>
  <li><a href="#前言">前言</a></li>
  <li><a href="#目录">目录</a></li>
  <li><a href="#正文">正文</a>
    <ul>
      <li><a href="#问答题">问答题</a>
        <ul>
          <li><a href="#1-神经网络的优化方案5条">1 神经网络的优化方案（5条）</a></li>
          <li><a href="#2-过拟合的优化方案5条">2 过拟合的优化方案（5条）</a></li>
          <li><a href="#3-对公式中的参数解释">3 对公式中的参数解释</a></li>
          <li><a href="#4必考列举深度学习中最常见的激活函数并说明3条">4（必考）列举深度学习中最常见的激活函数并说明（3条）</a></li>
          <li><a href="#5-cnn的基本结构有哪些基本模块和功能">5 CNN的基本结构，有哪些基本模块和功能</a></li>
          <li><a href="#6-卷积神经网络相关问题">6 卷积神经网络相关问题</a>
            <ul>
              <li><a href="#61-卷积神经网络主要工作是什么">6.1 卷积神经网络主要工作是什么？</a></li>
              <li><a href="#62-池化层的池化作用">6.2 池化层的池化作用</a></li>
              <li><a href="#63简述两种池化方式">6.3简述两种池化方式</a></li>
            </ul>
          </li>
          <li><a href="#7-对一些名词的解释">7 对一些名词的解释</a>
            <ul>
              <li><a href="#epoch">Epoch</a></li>
              <li><a href="#batch">Batch</a></li>
              <li><a href="#interation">interation</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#编程题">编程题</a>
        <ul>
          <li><a href="#a卷">A卷</a>
            <ul>
              <li><a href="#1-导入tensorflow模块并命名为tf">1 导入tensorflow模块并命名为tf</a></li>
              <li><a href="#2-利用constent创建一个形状为22数值分别为1234类型为float的常量tensor_a">2 利用constent创建一个形状为2*2，数值分别为[1,2,3,4]，类型为float的常量tensor_a</a></li>
              <li><a href="#3-创建一个形状为22的变量tensor_b并且b中的每个元素的值为1">3 创建一个形状为2*2的变量tensor_b，并且b中的每个元素的值为1</a></li>
              <li><a href="#4-将两个tensor_a和tensor_b相加定义为tensor_c">4 将两个tensor_a和tensor_b相加，定义为tensor_c</a></li>
              <li><a href="#5-tensor_c的数值是多少">5 tensor_c的数值是多少</a></li>
            </ul>
          </li>
          <li><a href="#b卷">B卷</a>
            <ul>
              <li><a href="#1-导入tensorflow模块并命名为tf-1">1 导入tensorflow模块并命名为tf</a></li>
              <li><a href="#2-利用constent创建一个形状为32数值分别为123456类型为float的常量tensor_a">2 利用constent创建一个形状为3*2，数值分别为[1,2,3,4,5,6]，类型为float的常量tensor_a</a></li>
              <li><a href="#3-创建一个形状为22的变量tensor_b并且b中的每个元素的值为1-1">3 创建一个形状为2*2的变量tensor_b，并且b中的每个元素的值为1</a></li>
              <li><a href="#4-将两个tensor_a-和tensor_b数乘定义为tensor_c">4 将两个tensor_a 和tensor_b数乘，定义为tensor_c</a></li>
              <li><a href="#5-tensor_c的数值是多少-1">5 tensor_c的数值是多少</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#计算大题">计算大题</a>
        <ul>
          <li><a href="#卷积计算灰度图像">卷积计算（灰度图像）</a>
            <ul>
              <li><a href="#1-根据卷积以上输入数据和卷积核给出每次卷积的过程12">1 根据卷积以上输入数据和卷积核给出每次卷积的过程。（12’）</a></li>
              <li><a href="#2-最终的特征图是什么3">2 最终的特征图是什么？(3’)</a></li>
            </ul>
          </li>
          <li><a href="#多通道彩色图像">多通道（彩色图像）</a>
            <ul>
              <li><a href="#1-请给出每次卷积的过程12">1 请给出每次卷积的过程。(12’)</a></li>
              <li><a href="#2-最终的特征图是什么3-1">2 最终的特征图是什么？(3’)</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#设计题开放性题目">设计题（开放性题目）</a>
        <ul>
          <li><a href="#1_a-中文电影评论分类的目标是什么并说明其意义">1_A 中文电影评论分类的目标是什么？并说明其意义。</a></li>
          <li><a href="#1_b-垃圾邮件分类的目标是什么并说明其意义">1_B 垃圾邮件分类的目标是什么？并说明其意义。</a></li>
          <li><a href="#2-设计一个基于循环神经网络分类器要考虑哪些问题3点">2 设计一个基于循环神经网络分类器，要考虑哪些问题。（3点）</a>
            <ul>
              <li><a href="#21-电影评论的解法">2.1 电影评论的解法</a></li>
              <li><a href="#22-垃圾邮件的解法">2.2 垃圾邮件的解法</a></li>
            </ul>
          </li>
          <li><a href="#列举至少2个评估模型性能的指标并说明原因">列举至少2个评估模型性能的指标，并说明原因。</a>
            <ul>
              <li><a href="#31-电影评论的解法">3.1 电影评论的解法</a></li>
              <li><a href="#32-垃圾邮件的解法">3.2 垃圾邮件的解法</a></li>
            </ul>
          </li>
          <li><a href="#4_a-请设计一种循环神经网络模型用于中文电影评论情感分析并且介绍你所设计模型的结构">4_a 请设计一种循环神经网络模型，用于中文电影评论情感分析，并且介绍你所设计模型的结构</a></li>
          <li><a href="#4_b-请设计一种循环神经网络模型用于中文电影评论情感分析并且介绍你所设计模型的结构">4_b 请设计一种循环神经网络模型，用于中文电影评论情感分析，并且介绍你所设计模型的结构</a></li>
        </ul>
      </li>
      <li><a href="#选择题--判断">选择题 \&amp; 判断</a>
        <ul>
          <li><a href="#重点掌握部分">重点掌握部分</a></li>
          <li><a href="#非重点掌握部分">非重点掌握部分</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="正文">正文</h1>

<h2 id="问答题">问答题</h2>

<h3 id="1-神经网络的优化方案5条">1 神经网络的优化方案（5条）</h3>

<ol>
  <li>通过改变模型待优化的参数和神经网络层数来改变网络模型的复杂度。</li>
  <li>选择更加合适的损失函数</li>
  <li>优化学习率</li>
  <li>选择更加合适的优化器</li>
  <li>数据集增强</li>
  <li>正则化</li>
  <li>使用dropout防止过拟合</li>
</ol>

<hr />

<h3 id="2-过拟合的优化方案5条">2 过拟合的优化方案（5条）</h3>

<p>数据层面：<br />
  （1）获取更多的数据集：数据增强<br />
  （2）数据预处理：清洗数据，筛选更高质量的特征</p>

<p>模型层面：<br />
  （1）选择简单的模型<br />
  （2）加入正则化：L1，L2正则化，降低模型的复杂度</p>

<p>更多方法：<br />
  （1）加入噪声：减少频繁出现的无意义的模式<br />
  （2）dropout：随机去除一部分的神经元</p>

<hr />

<h3 id="3-对公式中的参数解释">3 对公式中的参数解释</h3>

\[\sum w_i*x_i + b = wx + b\]

<p>  \(w_i\) :权重变量<br />
  \(x_i\) :数据输入变量<br />
  \(b\) :偏置<br /></p>

<hr />

<h3 id="4必考列举深度学习中最常见的激活函数并说明3条">4（必考）列举深度学习中最常见的激活函数并说明（3条）</h3>

<ol>
  <li>sigmoid函数：取值范围为(0,1)，它可以将一个实数映射到(0,1)的区间。</li>
  <li>tanh函数：tanh函数也叫也称为双切正切函数，取值范围为[-1,1]。</li>
  <li>ReLU函数：将负数映射为0，将正数保留不变。</li>
  <li>Softmax函数：将一组任意实数值映射到一个概率分布，其中每个值都是正的并且总和等于1。</li>
  <li>Leaky ReLU函数：在负区域返回一个小的斜率而不是0。</li>
</ol>

<hr />

<h3 id="5-cnn的基本结构有哪些基本模块和功能">5 CNN的基本结构，有哪些基本模块和功能</h3>

<p>基本组成单元:<br />
  具有可学习的权重和偏置的神经元组成</p>

<p>基本层级构造<br />
  输入层：数据的输入（通常是图像）<br />
  卷积层：使用卷积进行特征提取和映射<br />
  激活函数：增加非线性映射<br />
  池化层：下采样，对特征图稀疏处理，减少数据运算量<br />
  全连接层：通常在尾部，对数据重新拟合并输出分类结果</p>

<hr />

<h3 id="6-卷积神经网络相关问题">6 卷积神经网络相关问题</h3>

<h4 id="61-卷积神经网络主要工作是什么">6.1 卷积神经网络主要工作是什么？</h4>
<p>  提取特征。</p>

<h4 id="62-池化层的池化作用">6.2 池化层的池化作用</h4>

<p>  作用：降维,缩减模型大小。提高计算速度<br /></p>

<h4 id="63简述两种池化方式">6.3简述两种池化方式</h4>

<p>最大池化：<br />
  输入张量中的每个窗口映射到该窗口中的最大值。它能够保留局部特征的最大值并压缩输入的空间维度</p>

<p>均值池化：<br />
  将输入张量中的每个窗口映射到该窗口中的平均值。它能够对输入进行平滑处理并压缩输入的空间维度。</p>

<hr />

<h3 id="7-对一些名词的解释">7 对一些名词的解释</h3>

<h4 id="epoch">Epoch</h4>
<p>  表示整个数据集的一次迭代。</p>

<h4 id="batch">Batch</h4>
<p>  指的是不能一次性将整个数据集传递给神经网络，所以我们将数据集分成几个批处理，每一批称为Batch</p>

<h4 id="interation">interation</h4>
<p>  迭代的次数。例如我们有10000张图像作为数据，Batch大小为200。那么一个Epoch 应该运行50次Iteration(10,000除以200)。</p>

<hr />

<h2 id="编程题">编程题</h2>

<h3 id="a卷">A卷</h3>

<h4 id="1-导入tensorflow模块并命名为tf">1 导入tensorflow模块并命名为tf</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
</code></pre></div></div>

<h4 id="2-利用constent创建一个形状为22数值分别为1234类型为float的常量tensor_a">2 利用constent创建一个形状为2*2，数值分别为[1,2,3,4]，类型为float的常量tensor_a</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tensor_a</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">constent</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]],</span><span class="n">shape</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="n">dtype</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="3-创建一个形状为22的变量tensor_b并且b中的每个元素的值为1">3 创建一个形状为2*2的变量tensor_b，并且b中的每个元素的值为1</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tensor_b</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">ones</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">]))</span>
</code></pre></div></div>

<h4 id="4-将两个tensor_a和tensor_b相加定义为tensor_c">4 将两个tensor_a和tensor_b相加，定义为tensor_c</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">c</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tensor_a</span><span class="p">,</span><span class="n">tensor_b</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="5-tensor_c的数值是多少">5 tensor_c的数值是多少</h4>

<p>以下是完整的输出(你只需要写<code class="language-plaintext highlighter-rouge">array</code>中的内容即可)</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span>

<span class="o">&lt;</span><span class="n">tf</span><span class="p">.</span><span class="n">Tensor</span><span class="p">:</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">float32</span><span class="p">,</span><span class="n">numpy</span><span class="o">=</span>
<span class="n">array</span><span class="p">([[</span><span class="mf">2.</span><span class="p">,</span><span class="mf">3.</span><span class="p">],</span>
       <span class="p">[</span><span class="mf">4.</span><span class="p">,</span><span class="mf">5.</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">float32</span><span class="p">)</span><span class="o">&gt;</span>
</code></pre></div></div>

<hr />

<h3 id="b卷">B卷</h3>

<h4 id="1-导入tensorflow模块并命名为tf-1">1 导入tensorflow模块并命名为tf</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
</code></pre></div></div>

<h4 id="2-利用constent创建一个形状为32数值分别为123456类型为float的常量tensor_a">2 利用constent创建一个形状为3*2，数值分别为[1,2,3,4,5,6]，类型为float的常量tensor_a</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tensor_a</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">constent</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]],</span><span class="n">shape</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="n">dtype</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="3-创建一个形状为22的变量tensor_b并且b中的每个元素的值为1-1">3 创建一个形状为2*2的变量tensor_b，并且b中的每个元素的值为1</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tensor_b</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">ones</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">]))</span>
</code></pre></div></div>

<h4 id="4-将两个tensor_a-和tensor_b数乘定义为tensor_c">4 将两个tensor_a 和tensor_b数乘，定义为tensor_c</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tensor_c</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">matmul</span><span class="p">(</span><span class="n">tensor_a</span><span class="p">,</span><span class="n">tensor_b</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="5-tensor_c的数值是多少-1">5 tensor_c的数值是多少</h4>

<p>以下是完整的输出(你只需要写<code class="language-plaintext highlighter-rouge">array</code>中的内容即可)</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span>

<span class="o">&lt;</span><span class="n">tf</span><span class="p">.</span><span class="n">Tensor</span><span class="p">:</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="n">dtype</span><span class="o">=</span><span class="n">float32</span><span class="p">,</span><span class="n">numpy</span><span class="o">=</span>
<span class="n">array</span><span class="p">([[</span><span class="mf">3.</span><span class="p">,</span><span class="mf">3.</span><span class="p">],</span>
       <span class="p">[</span><span class="mf">7.</span><span class="p">,</span><span class="mf">7.</span><span class="p">],</span>
       <span class="p">[</span><span class="mf">11.</span><span class="p">,</span><span class="mf">11.</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">float32</span><span class="p">)</span><span class="o">&gt;</span>
</code></pre></div></div>

<hr />

<h2 id="计算大题">计算大题</h2>

<blockquote>
  <p>以下图片只是做一个示例，考试时请自行计算，要求，每一步都必须要写到位，每一个像素值都需要计算<br />
示例中空白的部分在考试时需要补全</p>
</blockquote>

<h3 id="卷积计算灰度图像">卷积计算（灰度图像）</h3>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/3.jpg" alt="3.jpg" />
    </div>
    
</div>

<h4 id="1-根据卷积以上输入数据和卷积核给出每次卷积的过程12">1 根据卷积以上输入数据和卷积核给出每次卷积的过程。（12’）</h4>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/4.jpg" alt="4.jpg" />
    </div>
    
</div>

<h4 id="2-最终的特征图是什么3">2 最终的特征图是什么？(3’)</h4>

<div class="row">
    
    <div style="flex: 50.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/5.jpg" alt="5.jpg" />
    </div>
    
</div>

<hr />

<h3 id="多通道彩色图像">多通道（彩色图像）</h3>

<h4 id="1-请给出每次卷积的过程12">1 请给出每次卷积的过程。(12’)</h4>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/1.jpg" alt="1.jpg" />
    </div>
    
</div>

<h4 id="2-最终的特征图是什么3-1">2 最终的特征图是什么？(3’)</h4>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/2.jpg" alt="2.jpg" />
    </div>
    
</div>

<hr />

<h2 id="设计题开放性题目">设计题（开放性题目）</h2>

<p>本题针对两个题面进行分析，分别是：“中文电影评论情感分析”、“垃圾邮件分类”。</p>

<h3 id="1_a-中文电影评论分类的目标是什么并说明其意义">1_A 中文电影评论分类的目标是什么？并说明其意义。</h3>

<p>  目标：对电影评论进行分类。<br />
  意义：根据模型识别出电影的评论是正面的还是负面的，有助于对电影做出定性的分析。</p>

<h3 id="1_b-垃圾邮件分类的目标是什么并说明其意义">1_B 垃圾邮件分类的目标是什么？并说明其意义。</h3>

<p>  目标：对邮件进行分类<br />
  意义：将邮件分为，有用邮件和垃圾邮件，有助于对邮件做出定性的分析。</p>

<hr />

<h3 id="2-设计一个基于循环神经网络分类器要考虑哪些问题3点">2 设计一个基于循环神经网络分类器，要考虑哪些问题。（3点）</h3>

<h4 id="21-电影评论的解法">2.1 电影评论的解法</h4>

<ol>
  <li>数据的处理问题：需要收集电影评论数据并进行清洗、去重、分词等预处理操作。</li>
  <li>模型的选择问题：选择双向LSTM神经网络，作为该神经网络的分类器。因为双向LSTM可以同时考虑历史和未来的信息，从而更好地预测当前时间步的输出。</li>
  <li>训练方式的选择：使用监督学习的方式训练LSTM网络分类器。使用数据量较大时考虑使用采用批量训练的方式。</li>
  <li>模型评估的方法选择：结合交叉验证来评估模型性能。</li>
  <li>要防止过拟合的发生：采用一些正则化技术，如L1、L2正则化和dropout等方法来缓解。</li>
</ol>

<h4 id="22-垃圾邮件的解法">2.2 垃圾邮件的解法</h4>

<ol>
  <li>数据的处理问题：需要收集邮件数据并进行清洗、去重、分词等预处理操作。</li>
  <li>模型的选择问题：选择双向LSTM神经网络，作为该神经网络的分类器。因为双向LSTM可以同时考虑历史和未来的信息，从而更好地预测当前时间步的输出。</li>
  <li>训练方式的选择：使用监督学习的方式训练LSTM网络分类器。使用数据量较大时考虑使用采用批量训练的方式。</li>
  <li>模型评估的方法选择：结合交叉验证来评估模型性能。</li>
  <li>要防止过拟合的发生：采用一些正则化技术，如L1、L2正则化和dropout等方法来缓解。</li>
</ol>

<h3 id="列举至少2个评估模型性能的指标并说明原因">列举至少2个评估模型性能的指标，并说明原因。</h3>

<h4 id="31-电影评论的解法">3.1 电影评论的解法</h4>

<ol>
  <li>准确率：它表示分类器正确预测样本标签的比例。在电影情感分析任务中，准确率可以告诉我们分类器正确预测情感极性评论的比例。</li>
  <li>召回率：指实际为正例的样本中被分类器正确识别为正例的比例。在情感分析中，召回率可以衡量分类器正确捕捉到所有积极或消极评论的能力。</li>
  <li>AUC值：AUC值越大，则分类器的性能越好，在正负样本不平衡时可以使用。</li>
  <li>F1值：分数是准确率和召回率的加权平均值，它综合了两者的影响。F1分数越高，则分类器的性能越好。</li>
</ol>

<h4 id="32-垃圾邮件的解法">3.2 垃圾邮件的解法</h4>

<ol>
  <li>准确率：它表示分类器正确预测样本标签的比例。在电影情感分析任务中，在垃圾邮件分类任务中，准确率可以告诉我们分类器正确预测垃圾邮件或非垃圾邮件的比例。。</li>
  <li>召回率：指实际为正例的样本中被分类器正确识别为正例的比例。在垃圾邮件分类中，召回率可以衡量分类器正确捕捉到所有垃圾邮件的能力。</li>
  <li>AUC值：AUC值越大，则分类器的性能越好，在正负样本不平衡时可以使用。</li>
  <li>F1值：分数是准确率和召回率的加权平均值，它综合了两者的影响。F1分数越高，则分类器的性能越好。</li>
</ol>

<h3 id="4_a-请设计一种循环神经网络模型用于中文电影评论情感分析并且介绍你所设计模型的结构">4_a 请设计一种循环神经网络模型，用于中文电影评论情感分析，并且介绍你所设计模型的结构</h3>

<p>这里选用LSTM循环神经网络</p>

<ol>
  <li>输入层：接受原始文本数据，即需要进行情感分类的中文电影评论，将每一个中文文本转化为词向量。</li>
  <li>Embedding Layer（嵌入层）：使用预训练的中文词向量来初始化嵌入层参数。</li>
  <li>LSTM层：按顺序处理每个词向量，并输出相应的隐藏状态向量和记忆状态向量。</li>
  <li>全局最大池化层：提取整个序列的最大特征向量，减少模型复杂度并提高泛化性能。在此模型中，用全局最大池化来得到固定长度的特征向量。</li>
  <li>全连接层：全连接层接收全局池化层的输出，可以进一步提取高级特征，并通过ReLU激活函数进行非线性映射。</li>
  <li>Sigmoid层：输出层采用Sigmoid函数作为激活函数，将全连接层的输出映射到0~1之间。</li>
  <li>Output（输出层）：生成最终的模型预测结果，即电影评论的正向与负向</li>
</ol>

<p>最后使用交叉熵损失函数作为目标函数，使用反向传播算法进行参数更新。</p>

<h3 id="4_b-请设计一种循环神经网络模型用于中文电影评论情感分析并且介绍你所设计模型的结构">4_b 请设计一种循环神经网络模型，用于中文电影评论情感分析，并且介绍你所设计模型的结构</h3>

<p>这里选用LSTM循环神经网络</p>

<ol>
  <li>输入层：接受原始文本数据，即需要进行分类的邮件信息，将每一个文本转化为词向量。</li>
  <li>Embedding Layer（嵌入层）：使用预训练的词向量来初始化嵌入层参数。</li>
  <li>LSTM层：按顺序处理每个词向量，并输出相应的隐藏状态向量和记忆状态向量。</li>
  <li>全局最大池化层：提取整个序列的最大特征向量，减少模型复杂度并提高泛化性能。在此模型中，用全局最大池化来得到固定长度的特征向量。</li>
  <li>全连接层：全连接层接收全局池化层的输出，可以进一步提取高级特征，并通过ReLU激活函数进行非线性映射。</li>
  <li>Sigmoid层：输出层采用Sigmoid函数作为激活函数，将全连接层的输出映射到0~1之间。</li>
  <li>Output（输出层）：生成最终的模型预测结果，即邮件是否为垃圾邮件的评定。</li>
</ol>

<p>最后使用交叉熵损失函数作为目标函数，使用反向传播算法进行参数更新。</p>

<hr />

<h2 id="选择题--判断">选择题 &amp; 判断</h2>

<h3 id="重点掌握部分">重点掌握部分</h3>

<p>1.【单选】
以下关于深度学习描述正确的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 深度学习是机器学习的一个分支
	B. 深度学习与机器学习是互相包含的关系
	C. 深度学习与机器学习同属于人工智能但相互之间没有关系
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>2.【单选】
传统机器学习和深度学习是人工智能核心技术，在工程流程上略有差别，以下步骤在深度学习中不需要做的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 模型评估
	B. 特征工程
	C. 数据清洗
	D. 模型构建
</code></pre></div></div>

<p>正确答案：B</p>

<p>3.【单选】
是指根据文本所表达的含义和情感信息将文本划分成褒扬的或贬义的两种或几种类型，是对文本作者倾向性和观点、态度的划分，因此有时也称倾向性分析。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 语音识别
	B. 机器学习
	C. 自然语言处理
	D. 情感分类
</code></pre></div></div>

<p>正确答案：D</p>

<p>4.【单选】
下列有关单层感知器的说法错误的是？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 包含输入层、隐藏层和输出层
	B. 包含求和和激活操作
	C. 能够解决“与门”操作
	D. “与门”的线性分割线的斜率有权值决定
</code></pre></div></div>

<p>正确答案：A</p>

<p>5.【单选】
若输入x1=1，x2=0，对应的权值分别为0.5，0.5，则经过过sign函数后的值是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 0
	B. 1
</code></pre></div></div>

<p>正确答案：B</p>

<p>6.【单选】
如果我们希望预测n个类（p1，p2 … pk）的概率使得所有n的p的和等于1，那么下列哪个函数可以用作输出层中的激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. softmax
	B. ReLU
	C. Sigmoid
	D. Tanh
</code></pre></div></div>

<p>正确答案：A</p>

<p>7.【单选】
将Sigmoid激活函数改为ReLu，将有助于克服梯度消失问题？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 错
</code></pre></div></div>

<p>正确答案：A</p>

<p>8.【单选】
Sigmoid是神经网络中最常用到的一种激活函数，除非当梯度太大导致激活函数被弥散，这叫作神经元饱和。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/6.png" alt="6.png" />
    </div>
    
</div>

<p>这就是为什么ReLU会被提出来，因为ReLU可以使得梯度在正向时输出值与原始值一样。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/7.png" alt="7.png" />
    </div>
    
</div>

<p>这是否意味着在神经网络中ReLU单元永远不会饱和?（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对的
	B. 错的
</code></pre></div></div>

<p>正确答案：B</p>

<p>9.【单选】
您正在构建一个用于识别黄瓜（y=1）和西瓜（y=0）的二进制分类器。您建议将这些激活函数中的哪一个用于输出层？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. ReLU
	B. Leaky ReLU
	C. sigmoid
	D. tanh
</code></pre></div></div>

<p>正确答案：C</p>

<p>10.【单选】
假定你在神经网络中的隐藏层中使用激活函数 X。在特定神经元给定任意输入，你会得到输出「-0.0001」。X 可能是以下哪一个激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. ReLU
	B. tanh（x）
	C. sigmoid
	D. 以上都不是
</code></pre></div></div>

<p>正确答案：B</p>

<p>11.【单选】
DNN的全称是（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 深度神经网络
	B. 深度学习网络
	C. 动态神经网络
	D. 动态学习网络
</code></pre></div></div>

<p>正确答案：A</p>

<p>12.【单选】
下列有关全连接网络说法正确的是（  ）：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 每个神经元具有激活函数功能
	B. 每一个神经元与下一层的神经元完全连接
	C. 神经元之间不存在跨层连接
	D. 以上都正确
</code></pre></div></div>

<p>正确答案：D</p>

<p>13.【单选】
在一个神经网络中，知道每一个神经元的权重和偏差是最重要的一步。如果知道了神经元准确的权重和偏差，便可以近似任何函数，但怎么获知每个神经的权重和偏移呢（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 搜索每个可能的权重和偏差组合，直到得到最佳值
	B. 赋予一个初始值，然后检查跟最佳值的差值，不断迭代调整权重
	C. 随机赋值
	D. 以上都不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>14.【单选】
假设神经元的输入值为（1,2,3），对应的权重为4,5,6，神经元经过一个线性函数y=2x，最终的输出结果是多少（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 32
	B. 64
	C. 96
	D. 48
</code></pre></div></div>

<p>正确答案：B</p>

<p>15.【单选】</p>

<p>下列声明哪些是正确的？（  ）</p>

<p>声明1：可以通过将所有权重初始化为0来训练网络</p>

<p>声明2：可以通过将偏差初始化为0来训练网络</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1对2错
	B. 1错2对
	C. 1和2都对
	D. 1和2都错
</code></pre></div></div>

<p>正确答案：B</p>

<p>16.【单选】
我们在训练神经网络过程中，使用梯度下降法不断更新哪种数值，进而使得损失函数最小化?（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 样本数目
	B. 特征值
	C. 超参数
	D. 参数
</code></pre></div></div>

<p>正确答案：D</p>

<p>17.【单选】
在神经网络中，我们是通过以下哪个方法在训练网络的时候更新参数，从而最小化损失函数的?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正向传播算法
	B. 池化计算
	C. 卷积计算
	D. 反向传播算法
</code></pre></div></div>

<p>正确答案：D</p>

<p>18.【单选】
单层感知器能够实现异或问题的分类，这句话是否正确？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 错误
</code></pre></div></div>

<p>正确答案：B</p>

<p>19.【单选】
如果我们用了一个过大的学习速率会发生什么？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 神经网络会收敛
	B. 不好说
	C. 都不对
	D. 神经网络不会收敛
</code></pre></div></div>

<p>正确答案：D</p>

<p>20.【单选】
在下图中，我们可以观察到误差出现了许多小的”涨落”。 这种情况我们应该担心吗？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/8.png" alt="8.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 需要，这也许意味着神经网络的学习速率存在问题
	B. 不需要，只要在训练集和交叉验证集上有累积的下降就可以了
	C. 不确定
</code></pre></div></div>

<p>正确答案：B</p>

<p>21.【单选】
当神经网络的调参效果不好时，需要从哪些角度考虑？（ ）</p>

<p>1 是否找到合适的损失函数</p>

<p>2 batch size是否合适</p>

<p>3 是否选择了和是的激活函数</p>

<p>4 是否选择合适的学习率</p>

<p>5 是否过拟合</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,3,4,5
	B. 1,2,3,4
	C. 全部都不是
	D. 全部都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>22.【单选】
学习率会影响待优化的参数的收敛吗？</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 会
	B. 不会
</code></pre></div></div>

<p>正确答案：A</p>

<p>23.【单选】
在训练神经网络时，损失函数(loss)在最初的几个epochs时没有下降，可能的原因是？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/9.png" alt="9.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 学习率太高
	B. 正则参数太高
	C. 陷入局部最小值
	D. 以上都有可能
</code></pre></div></div>

<p>正确答案：D</p>

<p>24.【单选】学习率（），会导致待优化的参数在最小值附近波动，不收敛；学习率（），会导致待优化的参数收敛缓慢。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 过小；过大
	B. 过大；过小
	C. 过大；过大
	D. 过小；过小
</code></pre></div></div>

<p>正确答案：B</p>

<p>25.【单选】当训练一个神经网络来作图像识别任务时，通常会绘制一张训练集误差和交叉训练集误差图来进行调试。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/10.png" alt="10.png" />
    </div>
    
</div>

<p>在上图中，最好在哪个时间停止训练？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. A
	B. B
	C. C
	D. D
</code></pre></div></div>

<p>正确答案：C</p>

<p>26.【单选】
在选择神经网络的深度时，下面哪些参数需要考虑？（  ）</p>

<p>1 神经网络的类型(如MLP,CNN)</p>

<p>2 输入数据</p>

<p>3 计算能力(硬件和软件能力决定)</p>

<p>4 学习速率</p>

<p>5 映射的输出函数</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,2,3,5
	B. 2,3,4,5
	C. 都需要
	D. 1,3,4,5
</code></pre></div></div>

<p>正确答案：C</p>

<p>27.【单选】
Dropout对一个神经元随机屏蔽输入权重这句话是否正确？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>28.【单选】
在一个神经网络中，下面哪种方法可以用来处理过拟合？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. dropout
	B. 分批归一化
	C. 正则化
	D. 以上都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>29.【单选】
下列的哪种方法可以用来降低深度学习模型的过拟合问题？（  ）</p>

<p>1 增加更多的数据</p>

<p>2 使用数据扩增技术(data augmentation)</p>

<p>3 使用归纳性更好的架构</p>

<p>4 正规化数据</p>

<p>5 降低架构的复杂度</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,4,5
	B. 1,2,3
	C. 1,3,4,5
	D. 所有都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>30.【单选】
数据规一化(Normalization)的好处都有啥？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 让每一层的输入的范围都大致固定
	B. 它将权重的归一化平均值和标准差
	C. 它是一种非常有效的反向传播(BP)方法
	D. 以上都不正确
</code></pre></div></div>

<p>正确答案：A</p>

<p>31.【单选】
单层的神经网络反向传播算法也适用多层神经网络的反向传播，这句话正确吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>32.【单选】前馈神经网络是指网络只能前向传播，不能后向传播，这句话是否正确（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>33.【单选】
“所谓的权值共享就是说，用一个卷积核去卷积一张图，这张图每个位置是被同样数值的卷积核操作的，权重是一样的”，这句话是否正确</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 错误
	C. 不确定
</code></pre></div></div>

<p>正确答案：A</p>

<p>34.【单选】
CNN是卷积神经网络，它的关键层有哪些？（ ）1 输入层2 卷积层3 激活层4 池化层5 全连接层</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,2,3,4
	B. 1,2,3,4,5
	C. 2,4
</code></pre></div></div>

<p>正确答案：B</p>

<p>35.【单选】
关于循环神经网络以下说法错误的是?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络可以根据时间轴展开
	B. LSTM 无法解决梯度消失的问题
	C. LSTM 也是一种循环神经网络
	D. 循环神经网络可以简写为 RNN
</code></pre></div></div>

<p>正确答案：B</p>

<p>36.【单选】
关于循环神经网络，哪个不是LSTM的门?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 输入门
	B. 遗忘门
	C. 输出门
	D. 更新门
</code></pre></div></div>

<p>正确答案：D</p>

<p>37.【单选】
“门”的出现可以帮助防止在RNN中的梯度消失问题。（ ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 错
</code></pre></div></div>

<p>正确答案：A</p>

<p>38.【单选】
以下关于标准 RNN 模型，说法正确的是?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 不存在一对一的模型结构
	B. 反向传播时不考虑时间方向
	C. 不存在多对多的模型结构
	D. 会出现长时间传输记忆的信息衰减的问题
</code></pre></div></div>

<p>正确答案：D</p>

<p>39.【单选】深度学习可以用在下列哪些NLP任务中？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 情感分析
	B. 问答系统
	C. 机器翻译
	D. 所有选项
</code></pre></div></div>

<p>正确答案：D</p>

<p>40.【单选】给定一个长度为n的不完整单词序列，我们希望预测下一个字母是什么。比如输入是“predictio”(9个字母组成)，希望预测第十个字母是什么。下面哪种神经网络结构适用于解决这个工作？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 卷积神经网络
	C. 全连接神经网络
	D. 以上都不是
</code></pre></div></div>

<p>正确答案：A</p>

<p>41.【单选】以下哪项任务优先选择使用卷积神经网络来实现</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 图像数据获取
	B. 图像预处理
	C. 图像特征提取
	D. 图像数据增强
</code></pre></div></div>

<p>正确答案：C</p>

<p>42.【单选】
对于一个图像识别问题(在一张照片里找出一只猫)，下面哪种神经网络可以更好地解决这个问题？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 感知机
	C. 多层感知机
	D. 卷积神经网络
</code></pre></div></div>

<p>正确答案：D</p>

<p>43.【单选】
在训练CNN时，可以对输入进行旋转、平移、缩放等预处理提高模型泛化能力。这么说是对，还是不对？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>44.【单选】
一个32X32大小的图像，通过步长为4，尺寸为4X4的池化运算后，尺寸变为</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 14X14
	B. 2X2
	C. 28X28
	D. 8X8
</code></pre></div></div>

<p>正确答案：D</p>

<p>45.【单选】
图像卷积处理中，例如32X32，strides=1，padding=”VALID”，FILTER卷积核3*3，则经过卷积处理之后图像尺寸变为?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 28X28
	B. 14X14
	C. 30X30
	D. 32X32
</code></pre></div></div>

<p>正确答案：C</p>

<hr />

<h3 id="非重点掌握部分">非重点掌握部分</h3>

<p>1.【单选】给定一个长度为n的不完整单词序列，我们希望预测下一个字母是什么。比如输入是“predictio”(9个字母组成)，希望预测第十个字母是什么。下面哪种神经网络结构适用于解决这个工作？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 卷积神经网络
	C. 全连接神经网络
	D. 以上都不是
</code></pre></div></div>

<p>正确答案：A</p>

<p>2.【单选】关于循环神经网络，哪个不是LSTM的门?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 输入门
	B. 遗忘门
	C. 输出门
	D. 更新门
</code></pre></div></div>

<p>正确答案：D</p>

<p>3.【单选】
以下哪项任务优先选择使用卷积神经网络来实现</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 图像数据获取
	B. 图像预处理
	C. 图像特征提取
	D. 图像数据增强
</code></pre></div></div>

<p>正确答案：C</p>

<p>4.【单选】
对于一个图像识别问题(在一张照片里找出一只猫)，下面哪种神经网络可以更好地解决这个问题？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 感知机
	C. 多层感知机
	D. 卷积神经网络
</code></pre></div></div>

<p>正确答案：D</p>

<p>5.【单选】
若输入x1=1，x2=0，对应的权值分别为0.5，0.5，则经过过sign函数后的值是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 0
	B. 1
</code></pre></div></div>

<p>正确答案：B</p>

<p>6.【单选】
在神经网络中，我们是通过以下哪个方法在训练网络的时候更新参数，从而最小化损失函数的?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正向传播算法
	B. 池化计算
	C. 卷积计算
	D. 反向传播算法
</code></pre></div></div>

<p>正确答案：D</p>

<p>7.【单选】单层的神经网络反向传播算法也适用多层神经网络的反向传播，这句话正确吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>8.【单选】前馈神经网络是指网络只能前向传播，不能后向传播，这句话是否正确（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>9.【单选】
学习率（），会导致待优化的参数在最小值附近波动，不收敛；学习率（），会导致待优化的参数收敛缓慢。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 过小；过大
	B. 过大；过小
	C. 过大；过大
	D. 过小；过小
</code></pre></div></div>

<p>正确答案：B</p>

<p>10.【单选】
学习率会影响待优化的参数的收敛吗？</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 会
	B. 不会
</code></pre></div></div>

<p>正确答案：A</p>

<p>11.【单选】
下列有关LSTM的细胞状态正确的是。（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. LSTM决定从细胞状态中丢弃什么信息
	B. LSTM决定什么信息增加到细胞状态中
	C. LSTM决定从细胞状态中输出什么信息
	D. 以上都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>12.【单选】
关于循环神经网络，哪个不是LSTM的门?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 输入门
	B. 遗忘门
	C. 输出门
	D. 更新门
</code></pre></div></div>

<p>正确答案：D</p>

<p>13.【单选】
给定一个长度为n的不完整单词序列，我们希望预测下一个字母是什么。比如输入是“predictio”(9个字母组成)，希望预测第十个字母是什么。下面哪种神经网络结构适用于解决这个工作？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 卷积神经网络
	C. 全连接神经网络
	D. 以上都不是
</code></pre></div></div>

<p>正确答案：A</p>

<p>14.【单选】
构建一个神经网络，将前一层的输出和它自身作为输入。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/11.png" alt="11.png" />
    </div>
    
</div>

<p>下列哪一种架构有反馈连接？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 循环神经网络
	B. 卷积神经网络
	C. 限制玻尔兹曼机
	D. 以上都不正确
</code></pre></div></div>

<p>正确答案：A</p>

<p>15.【单选】
“门”的出现可以帮助防止在RNN中的梯度消失问题。（ ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 错
</code></pre></div></div>

<p>正确答案：A</p>

<p>16.【单选】
以下关于标准 RNN 模型，说法正确的是?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 不存在一对一的模型结构
	B. 反向传播时不考虑时间方向
	C. 不存在多对多的模型结构
	D. 会出现长时间传输记忆的信息衰减的问题
</code></pre></div></div>

<p>正确答案：D</p>

<p>17.【单选】
以下关于标准 RNN 模型，说法正确的是?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 不存在一对一的模型结构
	B. 反向传播时不考虑时间方向
	C. 不存在多对多的模型结构
	D. 会出现长时间传输记忆的信息衰减的问题
</code></pre></div></div>

<p>正确答案：D</p>

<p>18.【单选】
一个循环神经网络可以被展开成为一个完全连接的、具有无限长度的普通神经网络，这种说法是（  ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：A</p>

<p>19.【单选】
输入图片大小为200×200，依次经过一层卷积（kernel size 5×5，same padding ，stride 2），pooling（kernel size 3×3，valid padding ，stride 1），又一层卷积（kernel size 3×3，same padding，stride 1）之后，输出特征图大小为（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 96
	B. 97
	C. 98
</code></pre></div></div>

<p>正确答案：C</p>

<p>20.【单选】
增加卷积核的大小对于改进卷积神经网络的效果是必要的吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 没听说过
	B. 是
	C. 否
	D. 不知道
</code></pre></div></div>

<p>正确答案：C</p>

<p>21.【单选】
在训练CNN时，可以对输入进行旋转、平移、缩放等预处理提高模型泛化能力。这么说是对，还是不对？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>22.【单选】
当构建一个神经网络进行图片的语义分割时，通常采用下面哪种顺序？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 先用卷积神经网络处理输入，再用反卷积神经网络得到输出
	B. 先用反卷积神经网络处理输入，再用卷积神经网络得到输出
	C. 不确定
</code></pre></div></div>

<p>正确答案：A</p>

<p>23.【单选】
假设下方是传入最大池化层的一个输入，该层中神经元的池化大小为(3,3)</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/12.png" alt="12.png" />
    </div>
    
</div>

<p>那么，该池化层的输出是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 3
	B. 7
	C. 5
	D. 5.5
</code></pre></div></div>

<p>正确答案：B</p>

<p>24.【单选】在一个神经网络中，下面哪种方法可以用来处理过拟合？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. dropout
	B. 分批归一化
	C. 正则化
	D. 以上都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>25.【单选】下列的哪种方法可以用来降低深度学习模型的过拟合问题？（  ）</p>

<p>1 增加更多的数据</p>

<p>2 使用数据扩增技术(data augmentation)</p>

<p>3 使用归纳性更好的架构</p>

<p>4 正规化数据</p>

<p>5 降低架构的复杂度</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,4,5
	B. 1,2,3
	C. 1,3,4,5
	D. 所有都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>26.【多选】优化神经网络可以从哪些方面入手？（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 学习率的优化
	B. 梯度下降的优化
	C. 过拟合和欠拟合的优化
	D. 梯度的优化
</code></pre></div></div>

<p>正确答案：A,B,C</p>

<p>27.【单选】当神经网络的调参效果不好时，需要从哪些角度考虑？（ ）</p>

<p>1 是否找到合适的损失函数</p>

<p>2 batch size是否合适</p>

<p>3 是否选择了和是的激活函数</p>

<p>4 是否选择合适的学习率</p>

<p>5 是否过拟合</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,3,4,5
	B. 1,2,3,4
	C. 全部都不是
	D. 全部都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>28.【单选】过拟合和欠拟合的优化不包括以下哪种方法？（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Dropout
	B. Bagging
	C. 梯度下降法
	D. 正则化
</code></pre></div></div>

<p>正确答案：C</p>

<p>29.【单选】单层的神经网络反向传播算法也适用多层神经网络的反向传播，这句话正确吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>30.【单选】一个完成的反向传播的步骤是（  ）</p>

<p>1 将隐藏层误差反向传播给输入层，调节隐藏层到输入层的权值和阈值</p>

<p>2 将输出层的误差反向传播给隐藏层，调整隐藏层到输出层的权值和阈值</p>

<p>3 将隐藏层的误差反向传播给隐藏层，调节隐藏层到隐藏层的权值和阈值</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1 2 3
	B. 2 1 3
	C. 1 3 2
	D. 2 3 1
</code></pre></div></div>

<p>正确答案：D</p>

<p>31.【单选】已知：</p>

<ul>
  <li>
    <p>大脑是有很多个叫做神经元的东西构成，神经网络是对大脑的简单的数学表达。</p>
  </li>
  <li>
    <p>每一个神经元都有输入、处理函数和输出。</p>
  </li>
  <li>
    <p>神经元组合起来形成了网络，可以拟合任何函数。</p>
  </li>
  <li>
    <p>为了得到最佳的神经网络，我们用梯度下降方法不断更新模型</p>
  </li>
</ul>

<p>给定上述关于神经网络的描述，什么情况下神经网络模型被称为深度学习模型？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 加入更多层，使神经网络的深度增加
	B. 有维度更高的数据
	C. 当这是一个图形识别的问题
	D. 以上都不正确
</code></pre></div></div>

<p>正确答案：A</p>

<p>32.【单选】前馈神经网络是指网络只能前向传播，不能后向传播，这句话是否正确（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>33.【单选】反向传播算法一开始计算什么内容的梯度，之后将其反向传播？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 预测结果与样本标签之间的误差
	B. 各个输入样本的平方差之和
	C. 各个网络权重的平方差之和
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>34.【单选】下图中的数据是线性可分的么？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/13.png" alt="13.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 是
	B. 否
</code></pre></div></div>

<p>正确答案：B</p>

<p>35.【单选】下列有关单层感知器的说法错误的是？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 包含输入层、隐藏层和输出层
	B. 包含求和和激活操作
	C. 能够解决“与门”操作
	D. “与门”的线性分割线的斜率有权值决定
</code></pre></div></div>

<p>正确答案：A</p>

<p>36.【单选】神经网络结构的选择会影响训练模型的效果，神经元结构不包括哪方面的选择。（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. depth
	B. width
	C. connectivity
	D. function
</code></pre></div></div>

<p>正确答案：D</p>

<p>37.【多选】神经网络模型的效果受神经元结构的影响，受哪方面的选择。（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. depth
	B. width
	C. connectivity
	D. function
</code></pre></div></div>

<p>正确答案：A,B,C</p>

<p>38.【单选】传统机器学习和深度学习是人工智能核心技术，在工程流程上略有差别，以下步骤在深度学习中不需要做的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 模型评估
	B. 特征工程
	C. 数据清洗
	D. 模型构建
</code></pre></div></div>

<p>正确答案：B</p>

<p>39.【单选】如果我们用了一个过大的学习速率会发生什么？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 神经网络不会收敛
	B. 不好说
	C. 都不对
	D. 神经网络会收敛
</code></pre></div></div>

<p>正确答案：A</p>

<p>40.【单选】过拟合和欠拟合的优化不包括以下哪种方法？（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Bagging
	B. Dropout
	C. 梯度下降法
	D. 正则化
</code></pre></div></div>

<p>正确答案：C</p>

<p>41.【多选】神经网络中优化方法有（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Adam
	B. 随机梯度下降法
	C. 随机下降法
	D. 梯度下降法
</code></pre></div></div>

<p>正确答案：A,B,D</p>

<p>42.【单选】在选择神经网络的深度时，下面哪些参数需要考虑？（  ）</p>

<p>1 神经网络的类型(如MLP,CNN)</p>

<p>2 输入数据</p>

<p>3 计算能力(硬件和软件能力决定)</p>

<p>4 学习速率</p>

<p>5 映射的输出函数</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 都需要
	B. 2,3,4,5
	C. 1,2,3,5
	D. 1,3,4,5
</code></pre></div></div>

<p>正确答案：A</p>

<p>43.【单选】当训练一个神经网络来作图像识别任务时，通常会绘制一张训练集误差和交叉训练集误差图来进行调试。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/14.png" alt="14.png" />
    </div>
    
</div>

<p>在上图中，最好在哪个时间停止训练？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. C
	B. B
	C. D
	D. A
</code></pre></div></div>

<p>正确答案：A</p>

<p>44.【单选】当数据太大而不能同时在RAM中处理时，哪种梯度技术更有优势？（ ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 随机梯度下降(Stochastic Gradient Descent)
	B. 全批量梯度下降(Full Batch Gradient Descent )
</code></pre></div></div>

<p>正确答案：A</p>

<p>45.【单选】当神经网络的调参效果不好时，需要从哪些角度考虑？（ ）</p>

<p>1 是否找到合适的损失函数</p>

<p>2 batch size是否合适</p>

<p>3 是否选择了和是的激活函数</p>

<p>4 是否选择合适的学习率</p>

<p>5 是否过拟合</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,3,4,5
	B. 全部都是
	C. 1,2,3,4
	D. 全部都不是
</code></pre></div></div>

<p>正确答案：B</p>

<p>46.【单选】下列的哪种方法可以用来降低深度学习模型的过拟合问题？（  ）</p>

<p>1 增加更多的数据</p>

<p>2 使用数据扩增技术(data augmentation)</p>

<p>3 使用归纳性更好的架构</p>

<p>4 正规化数据</p>

<p>5 降低架构的复杂度</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,3,4,5
	B. 所有都可以
	C. 1,2,3
	D. 1,4,5
</code></pre></div></div>

<p>正确答案：B</p>

<p>47.【单选】在一个神经网络中，下面哪种方法可以用来处理过拟合？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 分批归一化
	B. dropout
	C. 以上都可以
	D. 正则化
</code></pre></div></div>

<p>正确答案：C</p>

<p>48.【单选】下图中，红色曲线表示关于深度学习算法中每个时期的训练精度。绿色和蓝色曲线都表示验证的准确性。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/15.png" alt="15.png" />
    </div>
    
</div>

<p>哪条曲线表示过拟合overfitting？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 绿色曲线
	B. 蓝色曲线
</code></pre></div></div>

<p>正确答案：B</p>

<p>49.【单选】以下词语中，与卷积神经网络的概念无关的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. ImageNet
	B. 超平面
	C. BP算法
	D. 特征提取
</code></pre></div></div>

<p>正确答案：B</p>

<p>50.【单选】以下哪些是CNN网络常用的模型？（  ）</p>

<p>1 LeNet-5</p>

<p>2 AlexNet</p>

<p>3 VGGNet</p>

<p>4 Google Inception Net</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,2,3,4
	B. 1,2,3
	C. 2,3
</code></pre></div></div>

<p>正确答案：A</p>

<p>51.【单选】从图中趋势可见，如果增加神经网络的宽度，精确度会增加到一个特定阈值后，便开始降低。造成这一现象的可能原因是什么？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/16.png" alt="16.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 即使增加卷积核的数量，只有少部分的核会被用作预测
	B. 当卷积核数量增加时，神经网络的预测能力（Power）会降低
	C. 当卷积核数量增加时，导致过拟合
	D. 以上都不正确
</code></pre></div></div>

<p>正确答案：C</p>

<p>52.【单选】输入图像已被转换为大小为28×28的矩阵和大小为7×7的步幅为1的核心/滤波器，填充方式是valid 。卷积矩阵的大小是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 22 X 22
	B. 21 X 21
	C. 28 X 28
	D. 7X 7
</code></pre></div></div>

<p>正确答案：A</p>

<p>53.【多选】借助池化，网络存储可以有效提升存储的利用率，池化操作通常有几种?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 平均池化
	B. 卷积
	C. 最大池化
	D. 全连接
</code></pre></div></div>

<p>正确答案：A,C</p>

<p>54.【单选】在深度学习网络中，反向传播算法用于寻求最优参数，在反向传播算法中使用的什么法则进行逐层求导的?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 链式法则
	B. 累加法则
	C. 对等法则
	D. 归一法则
</code></pre></div></div>

<p>正确答案：A</p>

<p>55.【单选】一个完成的反向传播的步骤是（  ）</p>

<p>1 将隐藏层误差反向传播给输入层，调节隐藏层到输入层的权值和阈值</p>

<p>2 将输出层的误差反向传播给隐藏层，调整隐藏层到输出层的权值和阈值</p>

<p>3 将隐藏层的误差反向传播给隐藏层，调节隐藏层到隐藏层的权值和阈值</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1 2 3
	B. 2 1 3
	C. 1 3 2
	D. 2 3 1
</code></pre></div></div>

<p>正确答案：D</p>

<p>56.【单选】前馈神经网络是指网络只能前向传播，不能后向传播，这句话是否正确（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>57.【单选】反向传播算法一开始计算什么内容的梯度，之后将其反向传播？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 预测结果与样本标签之间的误差
	B. 各个输入样本的平方差之和
	C. 各个网络权重的平方差之和
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>58.【单选】单层的神经网络反向传播算法也适用多层神经网络的反向传播，这句话正确吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>59.【单选】将Sigmoid激活函数改为ReLu，将有助于克服梯度消失问题？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 对
	B. 错
</code></pre></div></div>

<p>正确答案：A</p>

<p>60.【单选】如果我们希望预测n个类（p1，p2 … pk）的概率使得所有n的p的和等于1，那么下列哪个函数可以用作输出层中的激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. softmax
	B. ReLU
	C. Sigmoid
	D. Tanh
</code></pre></div></div>

<p>正确答案：A</p>

<p>61.【单选】您正在构建一个用于识别黄瓜（y=1）和西瓜（y=0）的二进制分类器。您建议将这些激活函数中的哪一个用于输出层？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. ReLU
	B. Leaky ReLU
	C. sigmoid
	D. tanh
</code></pre></div></div>

<p>正确答案：C</p>

<p>62.【单选】下列哪个函数不可以做激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. y=tanh(x)
	B. y=sin(x)
	C. y=max(x,0)
	D. y=2x
</code></pre></div></div>

<p>正确答案：D</p>

<p>63.【单选】在输出层不能使用以下哪种激活函数来分类图像（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. sigmoid
	B. Tanh
	C. ReLU
	D. If（x&gt; 5,1,0）
</code></pre></div></div>

<p>正确答案：C</p>

<p>64.【单选】下列有关单层感知器的说法错误的是？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 包含输入层、隐藏层和输出层
	B. 包含求和和激活操作
	C. 能够解决“与门”操作
	D. “与门”的线性分割线的斜率有权值决定
</code></pre></div></div>

<p>正确答案：A</p>

<p>65.【单选】神经网络最基本的结构不包括（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 输入层
	B. 激活层
	C. 隐藏层
	D. 输出层
</code></pre></div></div>

<p>正确答案：B</p>

<p>66.【单选】下列有关全连接网络说法正确的是（  ）：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 每个神经元具有激活函数功能
	B. 每一个神经元与下一层的神经元完全连接
	C. 神经元之间不存在跨层连接
	D. 以上都正确
</code></pre></div></div>

<p>正确答案：D</p>

<p>67.【单选】单层感知器能够实现异或问题的分类，这句话是否正确？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 错误
</code></pre></div></div>

<p>正确答案：B</p>

<p>68.【单选】在一个简单的MLP模型中，输入层有8个神经元，隐藏层有5个神经元，输出层有1个神经元。隐藏输出层和输入隐藏层之间的权重矩阵的大小是多少（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. [1 X 5]，[5 X 8]
	B. [8×5]，[1×5]
	C. [5×8]，[5×1]
	D. [5×1]，[8×5]
</code></pre></div></div>

<p>正确答案：D</p>

<p>69.【单选】以下关于深度学习描述正确的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 深度学习是机器学习的一个分支
	B. 深度学习与机器学习同属于人工智能但相互之间没有关系
	C. 深度学习与机器学习是互相包含的关系
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>70.【单选】在输出层不能使用以下哪种激活函数来分类图像（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Tanh
	B. ReLU
	C. sigmoid
	D. If（x&gt; 5,1,0）
</code></pre></div></div>

<p>正确答案：B</p>

<p>71.【单选】相比sigmoid激活函数，relu激活函数有什么优势？(  )</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 防止梯度消失
	B. ReLu函数简繁计算速度快
	C. 以上都是
	D. ReLu输出具有稀疏性
</code></pre></div></div>

<p>正确答案：C</p>

<p>72.【单选】下列哪个函数不可以做激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. y=tanh(x)
	B. y=2x
	C. y=max(x,0)
	D. y=sin(x)
</code></pre></div></div>

<p>正确答案：B</p>

<p>73.【单选】您正在构建一个用于识别黄瓜（y=1）和西瓜（y=0）的二进制分类器。您建议将这些激活函数中的哪一个用于输出层？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Leaky ReLU
	B. tanh
	C. ReLU
	D. sigmoid
</code></pre></div></div>

<p>正确答案：D</p>

<p>74.【单选】若输入x1=1，x2=0，对应的权值分别为0.5，0.5，则经过过sign函数后的值是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1
	B. 0
</code></pre></div></div>

<p>正确答案：A</p>

<p>75.【单选】如果我们希望预测n个类（p1，p2 … pk）的概率使得所有n的p的和等于1，那么下列哪个函数可以用作输出层中的激活函数？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. softmax
	B. Sigmoid
	C. Tanh
	D. ReLU
</code></pre></div></div>

<p>正确答案：A</p>

<p>76.【单选】将Sigmoid激活函数改为ReLu，将有助于克服梯度消失问题？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 错
	B. 对
</code></pre></div></div>

<p>正确答案：B</p>

<p>77.【单选】您正在构建一个用于识别黄瓜（y=1）和西瓜（y=0）的二进制分类器。您建议将这些激活函数中的哪一个用于输出层？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. tanh
	B. Leaky ReLU
	C. ReLU
	D. sigmoid
</code></pre></div></div>

<p>正确答案：D</p>

<p>78.【单选】相比sigmoid激活函数，relu激活函数有什么优势？(  )</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. ReLu输出具有稀疏性
	B. ReLu函数简繁计算速度快
	C. 防止梯度消失
	D. 以上都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>79.【单选】以下关于深度学习描述正确的是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 深度学习与机器学习是互相包含的关系
	B. 深度学习是机器学习的一个分支
	C. 深度学习与机器学习同属于人工智能但相互之间没有关系
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：B</p>

<p>80.【多选】一般神经网络包括（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 输入层
	B. 隐藏层
	C. 激活层
	D. 输出层
</code></pre></div></div>

<p>正确答案：A,B,D</p>

<p>81.【单选】单层感知器能够实现异或问题的分类，这句话是否正确？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 错误
</code></pre></div></div>

<p>正确答案：B</p>

<p>82.【多选】已知全连接神经网络的某一层的参数总量为 330,则上一层和本层的神经元数量可能为?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 33 和 10
	B. 9 和 33
	C. 32 和 10
	D. 10 和 33
</code></pre></div></div>

<p>正确答案：A,D</p>

<p>83.【单选】全连接神经网络，如果输入层为44X8矩阵，那么与它相连的第一级参数矩阵最有可能为</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 32X32矩阵
	B. 任意尺寸矩阵
	C. 32X4矩阵
	D. 8X5矩阵
</code></pre></div></div>

<p>正确答案：D</p>

<p>84.【多选】深度学习中常用的损失函数有</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 均方误差损失函数
	B. L1 损失函数
	C. 交叉熵误差损失函数
	D. 自下降损失函数
</code></pre></div></div>

<p>正确答案：A,C</p>

<p>85.【单选】若输入x1=1，x2=0，对应的权值分别为0.5，0.5，则经过过sign函数后的值是多少？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 0
	B. 1
</code></pre></div></div>

<p>正确答案：B</p>

<p>86.【单选】梯度下降算法的正确步骤是什么？（  ）</p>

<p>1 计算预测值和真实值之间的误差</p>

<p>2 重复迭代，直至得到网络权重的最佳值</p>

<p>3 把输入传入网络，得到输出值</p>

<p>4 用随机值初始化权重和偏差</p>

<p>5 对每一个产生误差的神经元，调整相应的（权重）值以减小误差</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 3，2，1，5，4
	B. 5，4，3，2，1
	C. 1，2，3，4，5
	D. 4，3，1，5，2 ​
</code></pre></div></div>

<p>正确答案：D</p>

<p>87.【单选】假设神经元的输入值为（1,2,3），对应的权重为4,5,6，神经元经过一个线性函数y=2x，最终的输出结果是多少（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 64
	B. 32
	C. 48
	D. 96
</code></pre></div></div>

<p>正确答案：A</p>

<p>88.【单选】我们在训练神经网络过程中，使用梯度下降法不断更新哪种数值，进而使得损失函数最小化?（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 样本数目
	B. 特征值
	C. 参数
	D. 超参数
</code></pre></div></div>

<p>正确答案：C</p>

<p>89.【单选】神经元的网络计算公式中，各参数代表的含义错误的是（）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/17.png" alt="17.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. b 为偏置值
	B. z 为真实结果
	C. x 为输入
	D. w 为权重
</code></pre></div></div>

<p>正确答案：B</p>

<p>90.【单选】在神经网络中，我们是通过以下哪个方法在训练网络的时候更新参数，从而最小化损失函数的?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 反向传播算法
	B. 池化计算
	C. 正向传播算法
	D. 卷积计算
</code></pre></div></div>

<p>正确答案：A</p>

<p>91.【单选】优化器是训练神经网络的重要组成部分，使用优化器的目的不包含以下哪项</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 加快算法收敛速度
	B. 避过局部极值
	C. 减少手工参数的设置难度
	D. 避过过拟合问题
</code></pre></div></div>

<p>正确答案：D</p>

<p>92.【单选】神经网络最基本的结构不包括（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 隐藏层
	B. 输出层
	C. 输入层
	D. 激活层
</code></pre></div></div>

<p>正确答案：D</p>

<p>93.【单选】DNN的全称是（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 动态神经网络
	B. 深度学习网络
	C. 动态学习网络
	D. 深度神经网络
</code></pre></div></div>

<p>正确答案：D</p>

<p>94.【单选】下列有关全连接网络说法正确的是（  ）：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 每个神经元具有激活函数功能
	B. 神经元之间不存在跨层连接
	C. 以上都正确
	D. 每一个神经元与下一层的神经元完全连接
</code></pre></div></div>

<p>正确答案：C</p>

<p>95.【单选】下列有关张量和和变量的说法正确的是（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 张量可以简单理解为多维度数组
	B. 在TensorFlow中所有的数据都是通过张量的形式表示“
	C. 变量是一种特殊的张量
	D. 以上都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>96.【单选】TensorFlow的说法哪些是正确的（  ）</p>

<p>A  TensorFlow是由谷歌在2015年年底推出的一款开源框架</p>

<p>B  TensorFlow是基于DistDelief进行研发的第二代人工智能系统，用来快速实现深度学习（DL）和卷积神经网络（CNN）等各种算法</p>

<p>C  TensorFlow名字描述了执行的原理：Tensor（张量）意味着N维数组，Flow（流）意味着基于数据流图的计算</p>

<p>D  以上都是</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. A
	B. D
	C. B
	D. C
</code></pre></div></div>

<p>正确答案：B</p>

<p>97.【单选】深度学习与机器学习算法之间的区别在于，深度学习过程中无需进行特征提取工作，也就是说，我们建议在进行深度学习过程之前要首先完成特征提取的工作。这种说法是（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>98.【单选】有关数据的流向机制描述正确的是（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 注入机制是feed，取出机制是fetch
	B. 取出机制，即向模式中输入数据
	C. 注入机制，即从模式中得到结果
	D. 注入机制是fetch，取出机制是feed
</code></pre></div></div>

<p>正确答案：A</p>

<p>99.【单选】有关“图”描述错误的是（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. “图”会在会话中被启动
	B. 使用Graph函数生成新的计算图
	C. 一个“图”代表一个或多个计算任务
	D. 不同计算图上的张量和运算不共享
</code></pre></div></div>

<p>正确答案：C</p>

<p>100.【单选】Dropout对一个神经元随机屏蔽输入权重这句话是否正确？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>101.【单选】当神经网络的调参效果不好时，需要从哪些角度考虑？（ ）</p>

<p>1 是否找到合适的损失函数</p>

<p>2 batch size是否合适</p>

<p>3 是否选择了和是的激活函数</p>

<p>4 是否选择合适的学习率</p>

<p>5 是否过拟合</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,3,4,5
	B. 1,2,3,4
	C. 全部都不是
	D. 全部都是
</code></pre></div></div>

<p>正确答案：D</p>

<p>102.【单选】学习率（），会导致待优化的参数在最小值附近波动，不收敛；学习率（），会导致待优化的参数收敛缓慢。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 过小；过大
	B. 过大；过小
	C. 过大；过大
	D. 过小；过小
</code></pre></div></div>

<p>正确答案：B</p>

<p>103.【单选】学习率会影响待优化的参数的收敛吗？</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 会
	B. 不会
</code></pre></div></div>

<p>正确答案：A</p>

<p>104.【单选】在训练神经网络时，损失函数(loss)在最初的几个epochs时没有下降，可能的原因是？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/18.png" alt="18.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 学习率太高
	B. 正则参数太高
	C. 陷入局部最小值
	D. 以上都有可能
</code></pre></div></div>

<p>正确答案：D</p>

<p>105.【单选】下列哪个不是自适应学习率优化器？()</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. AdamGrad优化器
	B. Adam 优化器
	C. 梯度下降优化器
	D. RMSDrop优化器
</code></pre></div></div>

<p>正确答案：C</p>

<p>106.【单选】如果我们用了一个过大的学习速率会发生什么？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 神经网络会收敛
	B. 不好说
	C. 都不对
	D. 神经网络不会收敛
</code></pre></div></div>

<p>正确答案：D</p>

<p>107.【单选】当训练一个神经网络来作图像识别任务时，通常会绘制一张训练集误差和交叉训练集误差图来进行调试。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/19.png" alt="19.png" />
    </div>
    
</div>

<p>在上图中，最好在哪个时间停止训练？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. A
	B. B
	C. C
	D. D
</code></pre></div></div>

<p>正确答案：C</p>

<p>108.【单选】当数据太大而不能同时在RAM中处理时，哪种梯度技术更有优势？（ ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 全批量梯度下降(Full Batch Gradient Descent )
	B. 随机梯度下降(Stochastic Gradient Descent)
</code></pre></div></div>

<p>正确答案：B</p>

<p>109.【单选】过拟合和欠拟合的优化不包括以下哪种方法？（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. Dropout
	B. Bagging
	C. 梯度下降法
	D. 正则化
</code></pre></div></div>

<p>正确答案：C</p>

<p>110.【单选】下列的哪种方法可以用来降低深度学习模型的过拟合问题？（  ）</p>

<p>1 增加更多的数据</p>

<p>2 使用数据扩增技术(data augmentation)</p>

<p>3 使用归纳性更好的架构</p>

<p>4 正规化数据</p>

<p>5 降低架构的复杂度</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1,4,5
	B. 1,2,3
	C. 1,3,4,5
	D. 所有都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>111.【单选】在一个神经网络中，下面哪种方法可以用来处理过拟合？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. dropout
	B. 分批归一化
	C. 正则化
	D. 以上都可以
</code></pre></div></div>

<p>正确答案：D</p>

<p>112.【多选】优化神经网络可以从哪些方面入手？（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 学习率的优化
	B. 梯度下降的优化
	C. 过拟合和欠拟合的优化
	D. 梯度的优化
</code></pre></div></div>

<p>正确答案：A,B,C</p>

<p>113.【多选】神经网络中优化方法有（）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 梯度下降法
	B. 随机梯度下降法
	C. Adam
	D. 随机下降法
</code></pre></div></div>

<p>正确答案：A,B,C</p>

<p>114.【单选】如图所示，当开始训练时，误差一直很高，这是因为神经网络在往全局最小值前进之前一直被卡在局部最小值里。为了避免这种情况，我们可以采取下面哪种策略？（  ）</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/artificialNetwork/20.png" alt="20.png" />
    </div>
    
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 改变学习速率，比如一开始的几个训练周期不断更改学习率速率
	B. 一开始将学习速率减小10倍，然后用动量项(momentum)
	C. 增加参数数目，这样神经网络就不会卡在局部最优处
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>115.【单选】在深度学习网络中，反向传播算法用于寻求最优参数，在反向传播算法中使用的什么法则进行逐层求导的?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 链式法则
	B. 累加法则
	C. 对等法则
	D. 归一法则
</code></pre></div></div>

<p>正确答案：A</p>

<p>116.【单选】前馈神经网络是指网络只能前向传播，不能后向传播，这句话是否正确（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确的
	B. 错误的
</code></pre></div></div>

<p>正确答案：B</p>

<p>117.【单选】反向传播算法一开始计算什么内容的梯度，之后将其反向传播？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 预测结果与样本标签之间的误差
	B. 各个输入样本的平方差之和
	C. 各个网络权重的平方差之和
	D. 以上都不对
</code></pre></div></div>

<p>正确答案：A</p>

<p>118.【单选】单层的神经网络反向传播算法也适用多层神经网络的反向传播，这句话正确吗？（  ）</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 正确
	B. 不正确
</code></pre></div></div>

<p>正确答案：B</p>

<p>119.【单选】一个完成的反向传播的步骤是（  ）</p>

<p>1 将隐藏层误差反向传播给输入层，调节隐藏层到输入层的权值和阈值</p>

<p>2 将输出层的误差反向传播给隐藏层，调整隐藏层到输出层的权值和阈值</p>

<p>3 将隐藏层的误差反向传播给隐藏层，调节隐藏层到隐藏层的权值和阈值</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	A. 1 2 3
	B. 2 1 3
	C. 1 3 2
	D. 2 3 1
</code></pre></div></div>

<p>正确答案：D</p>]]></content><author><name>Ranok</name></author><category term="python" /><category term="人工智能" /><category term="期末考试" /><summary type="html"><![CDATA[  人工神经网络（Artificial Neural Networks，简写为ANNs）也简称为神经网络（NNs）或称作连接模型（Connection Model），它是一种模仿动物神经网络行为特征，进行分布式并行信息处理的算法数学模型。这种网络依靠系统的复杂程度，通过调整内部大量节点之间相互连接的关系，从而达到处理信息的目的。]]></summary></entry><entry><title type="html">网络爬虫</title><link href="http://localhost:4000/crawler" rel="alternate" type="text/html" title="网络爬虫" /><published>2023-06-20T00:00:00+08:00</published><updated>2023-06-20T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-spider</id><content type="html" xml:base="http://localhost:4000/crawler"><![CDATA[<p>网络爬虫（Web Crawler）是一种自动化程序，它可以在互联网上浏览和收集信息。它们可以发现和抓取网站上的所有内容，包括文本、图片、视频、音频等，并将这些数据保存到数据库或文件中。</p>

<hr />

<h1 id="目录">目录</h1>

<ul>
  <li><a href="#目录">目录</a></li>
  <li><a href="#前言">前言</a></li>
  <li><a href="#正文">正文</a>
    <ul>
      <li><a href="#选择题部分">选择题部分</a>
        <ul>
          <li><a href="#1-下列选项中不能用于解析网页数据的是">1 下列选项中，不能用于解析网页数据的是（）</a></li>
          <li><a href="#2-下列选项中用于匹配任意字符数字的是">2 下列选项中，用于匹配任意字符数字的是（）</a></li>
          <li><a href="#3-下列选项中用于在xpath中选取属性节点的是">3 下列选项中，用于在Xpath中选取属性节点的是（）</a></li>
          <li><a href="#4-列选项中关于re模块的说法错误的是">4 列选项中，关于re模块的说法错误的是（）</a></li>
          <li><a href="#5-下列选项中关于lxml说法错误的是">5 下列选项中，关于lxml说法错误的是（）</a></li>
          <li><a href="#6-下列选项中关于selenium描述错误的是">6 下列选项中，关于Selenium描述错误的是（）</a></li>
          <li><a href="#7-下列选项中属于chrome浏览器驱动程序的是">7 下列选项中，属于Chrome浏览器驱动程序的是（）</a></li>
          <li><a href="#8-下列选项中用于根据指定url地址访问页面的方法是">8 下列选项中，用于根据指定URL地址访问页面的方法是（）</a></li>
          <li><a href="#9-下列选项中通过类名定位元素的方法是">9 下列选项中，通过类名定位元素的方法是（）</a></li>
          <li><a href="#10-下列选项中关于显式等待和隐式等待描述错误的是">10 下列选项中，关于显式等待和隐式等待描述错误的是（）</a></li>
        </ul>
      </li>
      <li><a href="#简答题--论述题">简答题 \&amp; 论述题</a>
        <ul>
          <li><a href="#1-什么是网络爬虫">1 什么是网络爬虫？</a>
            <ul>
              <li><a href="#理论定义">理论定义：</a></li>
              <li><a href="#分类">分类：</a></li>
            </ul>
          </li>
          <li><a href="#2-网页的分类简答题问法">2 网页的分类（简答题问法）</a></li>
          <li><a href="#3-网络爬虫的应用场景有哪些">3 网络爬虫的应用场景有哪些？</a></li>
          <li><a href="#4-网络爬虫合法性研究">4 网络爬虫合法性研究</a>
            <ul>
              <li><a href="#41论述题的考法">4.1论述题的考法</a>
                <ul>
                  <li><a href="#网络爬虫是否合法">网络爬虫是否合法？</a></li>
                  <li><a href="#合法合规的爬虫是什么样的">合法合规的爬虫是什么样的？</a></li>
                  <li><a href="#你认为不合法合规的爬虫是什么样的">你认为不合法合规的爬虫是什么样的？</a></li>
                </ul>
              </li>
              <li><a href="#42简答题的问法">4.2简答题的问法</a>
                <ul>
                  <li><a href="#什么是robotstxt协议">什么是robots.txt协议？</a></li>
                </ul>
              </li>
            </ul>
          </li>
          <li><a href="#5-防爬虫的应对策略有哪些">5 防爬虫的应对策略有哪些？</a></li>
          <li><a href="#6-http和https-的区别">6 http和https 的区别？</a></li>
          <li><a href="#7-网页的分类论述题问法">7 网页的分类（论述题问法）</a>
            <ul>
              <li><a href="#71静态网页动态网页是什么">7.1静态网页，动态网页是什么？</a></li>
              <li><a href="#72静态网页的特点">7.2静态网页的特点</a></li>
              <li><a href="#73动态网页的特点">7.3动态网页的特点</a></li>
              <li><a href="#74动态网页采集技术类型有哪些你最喜欢用哪一个">7.4动态网页采集技术类型有哪些？你最喜欢用哪一个</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#综合应用题">综合应用题</a>
        <ul>
          <li><a href="#1-scrapy-redis架构">1 Scrapy-Redis架构</a></li>
          <li><a href="#2-scrapyspider类的常用属性和方法">2 scrapy.Spider类的常用属性和方法</a></li>
        </ul>
      </li>
      <li><a href="#程序题部分">程序题部分</a>
        <ul>
          <li><a href="#程序填空">程序填空</a></li>
          <li><a href="#程序解释题">程序解释题</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="前言">前言</h1>

<p>  本博客针对，网络爬虫期末考试进行整理。部分整理针对题型进行整理。祝你取得一个<strong>好成绩</strong>！。</p>

<hr />

<h1 id="正文">正文</h1>

<h2 id="选择题部分">选择题部分</h2>

<blockquote>
  <p>针对平时测试所整理，有概率考到</p>
</blockquote>

<h3 id="1-下列选项中不能用于解析网页数据的是">1 下列选项中，不能用于解析网页数据的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. LXML     
B. Beautiful Soup  
C. JSONPath   
D. Requests
</code></pre></div></div>

<p>  正确答案：D</p>

<h3 id="2-下列选项中用于匹配任意字符数字的是">2 下列选项中，用于匹配任意字符数字的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. \w    
B. \d   
C. \D    
D. \W
</code></pre></div></div>

<p>  正确答案：B</p>

<h3 id="3-下列选项中用于在xpath中选取属性节点的是">3 下列选项中，用于在Xpath中选取属性节点的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. /     
B. //    
C. @   
D. #
</code></pre></div></div>

<p>  正确答案：C</p>

<h3 id="4-列选项中关于re模块的说法错误的是">4 列选项中，关于re模块的说法错误的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. re模块是Python中可操作正则表达式的模块
B. re模块中的compile( )函数用于对正则表达式进行编译
C. 使用findall( )方法或finditer( )方法可以获取所有与正则表达式匹配的内容
D. 使用finditer( )方法返回的是列表，使用findall( )方法返回的是迭代器
</code></pre></div></div>

<p>  正确答案：D</p>

<h3 id="5-下列选项中关于lxml说法错误的是">5 下列选项中，关于lxml说法错误的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. Element类的find( )方法用于从根节点开始查找，并以列表形式返回匹配的节点
B. 使用lxml库可以对HTML文档或XML文档中的节点进行定位和提取
C. ElementTree类的对象可以理解为HTML文档或XML文档的树节点
D. 使用lxml库可以对HTML文档缺少的&lt;html&gt;和&lt;body&gt;元素自动补全
</code></pre></div></div>

<p>  正确答案：D</p>

<h3 id="6-下列选项中关于selenium描述错误的是">6 下列选项中，关于Selenium描述错误的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. Selenium是一个开源的便携式自动化测试工具
B. Selenium可以直接在浏览器上运行
C. Selenium自身携带浏览器，并支持浏览器的功能
D. Selenium可以根据指令自动加载网页或判断网页上是否发生动作
</code></pre></div></div>

<p>  正确答案：C</p>

<h3 id="7-下列选项中属于chrome浏览器驱动程序的是">7 下列选项中，属于Chrome浏览器驱动程序的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. ChromeDriver
B. geckodriver
C. operachromiumdriver
D. IEDriverServer
</code></pre></div></div>

<p>  正确答案：A</p>

<h3 id="8-下列选项中用于根据指定url地址访问页面的方法是">8 下列选项中，用于根据指定URL地址访问页面的方法是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. get()
B. Post()
C. head()
D. put()
</code></pre></div></div>

<p>  正确答案：A</p>

<h3 id="9-下列选项中通过类名定位元素的方法是">9 下列选项中，通过类名定位元素的方法是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. find_element_by_name()
B. find_element_by_class_name()
C. find_element_by_id()
D. find_element_by_tag_name()
</code></pre></div></div>

<p>  正确答案：B</p>

<h3 id="10-下列选项中关于显式等待和隐式等待描述错误的是">10 下列选项中，关于显式等待和隐式等待描述错误的是（）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A. 隐式等待就是设置一个全局的最大等待时间
B. 显式等待会先指定某个条件，再设置最长等待时间
C. 隐式等待可作用于单个元素
D. 显式等待只能作用于单个元素
</code></pre></div></div>

<p>  正确答案：C</p>

<hr />

<h2 id="简答题--论述题">简答题 &amp; 论述题</h2>

<h3 id="1-什么是网络爬虫">1 什么是网络爬虫？</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察简答题 5'
</code></pre></div></div>

<h4 id="理论定义">理论定义：</h4>

<p>  网络爬虫就是一个模拟真人浏览万维网行为的程序，这个程序可以代替真人自动请求万维网，并接收从万维网返回的数据。与真人浏览万维网相比，网络爬虫能够浏览的信息量更大，效率也更高。（重点）</p>

<h4 id="分类">分类：</h4>

<p>  通用网络爬虫、聚焦网络爬虫、增量式网络爬虫、深层网络爬虫。</p>

<p>  通用网络爬虫:是指访问全互联网资源的网络爬虫。它是搜索引擎（如百度、谷歌、雅虎等）抓取系统的重要组成部分，主要用于将互联网中的网页下载到本地，形成一个互联网内容的镜像备份。（重点）</p>

<p>  聚焦网络爬虫:是指有选择性地访问那些与预定主题相关网页的网络爬虫，它根据预先定义好的目标，有选择性地访问与目标主题相关的网页，获取所需要的数据。</p>

<p>  增量式网络爬虫:是指对已下载的网页采取增量式更新，只抓取新产生或者已经发生变化的网页的网络爬虫。</p>

<p>  深层网络爬虫:是指抓取深层网页的网络爬虫，它要抓取的网页层次比较深，需要通过一定的附加策略才能够自动抓取，实现难度较大。</p>

<hr />

<h3 id="2-网页的分类简答题问法">2 网页的分类（简答题问法）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察简答题 5'
</code></pre></div></div>

<p>  主要分为表层网页，深层网页。</p>

<p>  表层网页是指传统搜索引擎可以索引的页面，主要以超链接可以到达的静态网页构成的网页。<br />
  深层网页是指大部分内容无法通过静态链接获取的，只能通过用户提交一些关键词才能获取的网页，如用户注册后内容才可见的网页。</p>

<hr />

<h3 id="3-网络爬虫的应用场景有哪些">3 网络爬虫的应用场景有哪些？</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察简答题 5'
</code></pre></div></div>

<p>  搜索引擎、舆情分析与监测、聚合平台、出行类软件等。</p>

<p>  搜索引擎：如百度、谷歌、雅虎等。</p>

<p>  舆情分析与监测：例如用于过滤敏感词汇。发掘舆情热点，跟踪目标话题。</p>

<p>  运用网络爬虫技术对一些电商平台上的商品信息进行采集，将所有的商品信息放到自己的平台上展示，并提供横向数据的比较。</p>

<p>  出行类软件，比如飞猪、携程、去哪儿等，也是网络爬虫应用比较多的场景。</p>

<hr />

<h3 id="4-网络爬虫合法性研究">4 网络爬虫合法性研究</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察简答题 5' &amp; 论述题 16'
</code></pre></div></div>

<h4 id="41论述题的考法">4.1论述题的考法</h4>

<h5 id="网络爬虫是否合法">网络爬虫是否合法？</h5>
<p>  （1）爬虫本身不违法。<br />
  （2）如果爬虫程序采集到会侵犯到有关公民信息，以及商业机密等内容，并将之用于非法途径的，则肯定构成非法获取公民个人信息的违法行为。<br />
  （3）部分公司提供公开API接口允许爬取其数据。爬取这样的数据并不违法。<br />
  （4）网络爬虫在遵守法律政策和网站协议的情况下是合法的。<br /></p>

<h5 id="合法合规的爬虫是什么样的">合法合规的爬虫是什么样的？</h5>

<p>  （1）遵守robots.txt协议<br />
  （2）不断请求而不会影响网站的正常运行<br />
  （3）不获取敏感信息<br />
  （4）不会对目标网站造成安全隐患<br />
  （5）网站公开数据允许收集<br />
  （6）爬虫有明确用户使用场景<br /></p>

<h5 id="你认为不合法合规的爬虫是什么样的">你认为不合法合规的爬虫是什么样的？</h5>

<p>  （1）爬取未公开、未经许可、且带有敏感信息的数据。<br />
  （2）使用技术手段不克制，造成提供信息的平台的服务资源损失。<br />
  （3）出售个人信息，将爬取的信息用在了不正当商业行为中。<br />
  （4）不遵循数据许可协议，超出约定的使用。<br />
  （5）无限制地抓取网页。<br />
  （6）使用爬虫，模拟用户行为欺瞒网站。</p>

<h4 id="42简答题的问法">4.2简答题的问法</h4>

<h5 id="什么是robotstxt协议">什么是robots.txt协议？</h5>

<p>  Robots协议又称爬虫协议，它是国际互联网界通行的道德规范，用于保护网站数据和信息不受侵犯。网站管理员通常会在网页根目录下放置一个符合Robots协议的robots.txt文件，用于告知哪些数据允许爬取，哪些数据不允许爬取。</p>

<hr />

<h3 id="5-防爬虫的应对策略有哪些">5 防爬虫的应对策略有哪些？</h3>

<p>  添加User-Agent字段、降低访问频率、设置代理服务、识别验证码。<br /></p>

<p>  1. 添加User-Agent字段:浏览器在访问网站时会携带固定的User-Agent，向网站表明自己的真实身份。所以可以在请求网页时携带User-Agent，将自己伪装成一个浏览器。</p>

<p>  2. 降低访问频率:同一账户在较短的时间内多次访问了网页可能会被封禁。所以可以每抓取一次页面数据就休息几秒钟，或者限制每天抓取的页面数据的数量。</p>

<p>  3. 设置代理服务:反复使用同一IP地址进行访问，则极易被网站认出是爬虫。所以可以在网络爬虫和Web服务器之间设置代理服务器。</p>

<p>  4. 识别验证码:有些网站可能会要求该客户端进行登录验证，并随机提供一个验证码，为了应对这种发情况可以将爬虫像人类一样通过滑动或点击行为识别验证码。</p>

<hr />

<h3 id="6-http和https-的区别">6 http和https 的区别？</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察简答题 5'
</code></pre></div></div>

<p>  HTTP协议全称为超文本传输协议，它用于将Web服务器的超文本资源传送到浏览器中。</p>

<p>  HTTPS协议是一种超文本传输安全协议。</p>

<p>  两者的不同：<br />
  HTTP中浏览器与Web服务器的连接是一种一次性连接，它限制每次连接只能处理一个请求。<br />
  HTTPS在HTTP协议基础上添加了安全套接字协议，完成互联网数据传输加密，实现互联网传输安全保护。</p>

<hr />

<h3 id="7-网页的分类论述题问法">7 网页的分类（论述题问法）</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>本题考察论述题 16'
</code></pre></div></div>

<h4 id="71静态网页动态网页是什么">7.1静态网页，动态网页是什么？</h4>

<p>  静态网页中包含的诸如文本、图像、FLASH动画、超链接等内容，在编写网页源代码时已经确定，基本上不会发生变化，除非更改源码。</p>

<p>  动态网页有数据库支撑、包含程序以及提供与用户交互功能，如用户登录、用户注册、信息查询等功能，这些功能根据用户传入不同参数网页会显示不同数据。</p>

<h4 id="72静态网页的特点">7.2静态网页的特点</h4>

<p>  1. 静态网页的内容相对稳定，一经上传至网站服务器，无论是否有用户访问内容都会一直保存在网站服务器上。<br />
  2. 静态网页的访问速度快，访问过程中无须连接数据库。<br />
  3. 静态网页没有数据库的支持，内容更新与维护比较复杂。<br />
  4. 静态网页的交互性较差，在功能方面有较大的限制。</p>

<h4 id="73动态网页的特点">7.3动态网页的特点</h4>

<p>  1. 动态网页一般以数据库技术为基础。<br />
  2. 动态网页并不是独立存在于服务器上的网页文件，只有当用户请求时服务器才会返回一个完整的网页。<br />
  3. 采用动态网页技术的网站可以实现更多的功能，如用户注册、用户登录、在线调查、用户管理、订单管理等。</p>

<h4 id="74动态网页采集技术类型有哪些你最喜欢用哪一个">7.4动态网页采集技术类型有哪些？你最喜欢用哪一个</h4>

<p>  1. 基于浏览器自动化工具（如Selenium）的采集技术。
  2. 基于HTML请求模拟采集技术。
  3. 基于无界面浏览器的采集技术。
  4. 基于API接口调用的采集技术。</p>

<p>  我最喜欢用浏览器自动化工具Selenium，因为使用Selenium，对于动态网页的数据可以直接使用模拟浏览器运行的方式进行实现，这样做就可以不用管网页内部是如何使用JavaScript渲染页面的，在浏览器中看到是什么样的内容，抓取的结果便是什么样的内容。</p>

<hr />

<h2 id="综合应用题">综合应用题</h2>

<blockquote>
  <p>本题型一张试卷只有一题，16分，一题分多个小点</p>
</blockquote>

<h3 id="1-scrapy-redis架构">1 Scrapy-Redis架构</h3>

<p>  绘制以下一张完整的图像。统一要求对关键名称写中文。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/spider/1.jpg" alt="1.jpg" />
    </div>
    
</div>

<p>  注意这里A卷中，与画图题一起考的还有一个多选题，请排除<strong>第二个选项</strong></p>

<hr />

<h3 id="2-scrapyspider类的常用属性和方法">2 scrapy.Spider类的常用属性和方法</h3>

<p>  1. name属性：设置爬虫文件的名称。<br />
  2. allowed_domains属性：设置爬虫允许抓取的域名范围。<br />
  3. start_urls属性：表示需要提交的初始URL地址。<br />
  4. <strong>init</strong>()方法：负责初始化爬虫名称和初始URL列表。<br />
  5. start_requests()方法：负责生成Requests对象，交给Scrapy下载。<br />
  6. parse(response)方法：负责解析Response，并返回Item或Requests。<br />
  7. log(message[level, component])方法：负责发送日志信息。</p>

<p>这个大题下面有关知识点的整理（不用背）（会考多选题和判断题）：</p>

<p>  该文件中可以定义多个管道，这些管道会按照定义的顺序<strong>依次处理</strong>Item对象。（✔）</p>

<p>  CrawlSpider类由于继承了Spider类，所以继承了Spider类的所有公有成员。此外，CrawlSpider类自身也定义了一些属性。在这里，我们着重了解一下rules属性。<br />rules属性是一个包含一个或多个Rule对象给续会介绍的列表。每个Rule对象对抓取网站的动作定义了特定表现。如果多个Rule对象匹配了同一个链接，则根据它们在本属性中定义的顺序，使用第一个Rule对象。</p>

<hr />

<h2 id="程序题部分">程序题部分</h2>

<h3 id="程序填空">程序填空</h3>

<p>以下代码要求掌握，共计13点</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">text</span> <span class="o">=</span> <span class="n">etree</span><span class="p">.</span><span class="n">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># 文章标题
</span>  <span class="n">title</span> <span class="o">=</span> <span class="n">node</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'./a[1]/text()'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
  <span class="c1"># 文章链接
</span>  <span class="n">url</span> <span class="o">=</span> <span class="n">node</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'./a[1]/@href'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
  <span class="c1"># 文章作者
</span>  <span class="n">author</span> <span class="o">=</span> <span class="n">node</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'./div[@class="foruminfo"]//a/span/text()'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">item</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"文章标题"</span><span class="p">:</span> <span class="n">title</span><span class="p">,</span>
    <span class="s">"文章链接"</span><span class="p">:</span> <span class="n">url</span><span class="p">,</span>
    <span class="s">"文章作者"</span><span class="p">:</span> <span class="n">author</span><span class="p">,</span>
    <span class="s">'发布时间'</span><span class="p">:</span> <span class="n">release_time</span><span class="p">,</span>
  <span class="p">}</span>
  <span class="n">items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">ChromeOptions</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># text属性 : 获取当前dd节点以及它的子节点和后代节点的文本内容
</span>  <span class="n">one_film_info_list</span> <span class="o">=</span> <span class="n">dd</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">item</span><span class="p">[</span><span class="s">'name'</span><span class="p">]</span> <span class="o">=</span> <span class="n">one_film_info_list</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'star'</span><span class="p">]</span> <span class="o">=</span> <span class="n">one_film_info_list</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'time'</span><span class="p">]</span> <span class="o">=</span> <span class="n">one_film_info_list</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'score'</span><span class="p">]</span> <span class="o">=</span> <span class="n">one_film_info_list</span><span class="p">[</span><span class="mi">4</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">def</span> <span class="nf">get_html</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">):</span>
    <span class="n">html</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">headers</span><span class="p">).</span><span class="n">text</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">p</span> <span class="o">=</span> <span class="n">etree</span><span class="p">.</span><span class="n">HTML</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">item</span><span class="p">[</span><span class="s">'name'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dd</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'.//p[@class="name"]/a/@title'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'star'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dd</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'.//p[@class="star"]/text()'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'time'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dd</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'.//p[@class="releasetime"]/text()'</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">item</span><span class="p">[</span><span class="s">'score'</span><span class="p">]</span> <span class="o">=</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">dd</span><span class="p">.</span><span class="n">xpath</span><span class="p">(</span><span class="s">'.//p[@class="score"]/i/text()'</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">name</span> <span class="o">=</span> <span class="s">'itcast'</span>		<span class="c1"># 这个是试卷上会给的
</span>  <span class="n">allowed_domains</span> <span class="o">=</span> <span class="p">[</span><span class="s">'itcast.cn'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># 创建MyspiderItem类的对象
</span>  <span class="n">item</span> <span class="o">=</span> <span class="n">MyspiderItem</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># 将每个讲师的信息封装成MyspiderItem类的对象
</span>  <span class="n">item</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span> <span class="o">=</span> <span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">"level"</span><span class="p">]</span> <span class="o">=</span> <span class="n">level</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="n">在浏览器中看到是什么样的内容</span><span class="err">，</span><span class="n">抓取的结果便是什么样的内容</span>
  <span class="n">item</span><span class="p">[</span><span class="s">"resume"</span><span class="p">]</span> <span class="o">=</span> <span class="n">resume</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<h3 id="程序解释题">程序解释题</h3>

<p>这里可能会有干扰项</p>
<blockquote>
  <p>以下为我个人作答并不一定是参考答案</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">load_page</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="s">'''
    作用:根据url发送请求，获取服务器响应文件
    url：需要爬取的url地址
    '''</span>
    <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"User-Agent"</span><span class="p">:</span> <span class="s">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident / 5.0;"</span><span class="p">}</span>
    <span class="n">request</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">request</span><span class="p">.</span><span class="n">text</span>
</code></pre></div></div>

<p>答：根据url，封装请求头，使用get方法发送请求。获取服务器响应文件，并返回文件内容。</p>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">print</span><span class="p">(</span><span class="s">"正在保存"</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="nb">file</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</code></pre></div></div>

<p>答：以打印需要保存的文件名信息；将以读的形式打开（如果不存在就创建）文件，并写入对应的内容</p>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">'http://bbs.itheima.com/forum-425-</span><span class="si">{</span><span class="n">page</span><span class="si">}</span><span class="s">.html'</span>
  <span class="n">file_name</span> <span class="o">=</span> <span class="s">"第"</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">page</span><span class="p">)</span> <span class="o">+</span> <span class="s">"页.html"</span>
  <span class="n">html</span> <span class="o">=</span> <span class="n">load_page</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
  <span class="n">save_file</span><span class="p">(</span><span class="n">html</span><span class="p">,</span> <span class="n">file_name</span><span class="p">)</span>
</code></pre></div></div>

<p>答：获取<code class="language-plaintext highlighter-rouge">page</code>信息，拼接<code class="language-plaintext highlighter-rouge">url</code>；给获取到的url命名为“第”+page+“页.html”；传递url参数，调用load_page函数获取网页信息，调用save_file函数保存获取到的信息。</p>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">html</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
  <span class="n">count</span> <span class="o">=</span> <span class="n">html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'Count'</span><span class="p">]</span>
  <span class="n">total</span> <span class="o">=</span> <span class="n">count</span> <span class="o">//</span> <span class="mi">10</span> <span class="k">if</span> <span class="n">count</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">count</span> <span class="o">//</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">1</span>
</code></pre></div></div>

<p>答：<code class="language-plaintext highlighter-rouge">json.loads</code>是将响应内容中的<code class="language-plaintext highlighter-rouge">json</code>数据转为字典；<code class="language-plaintext highlighter-rouge">count</code>是从字典中获取职位总条数，<code class="language-plaintext highlighter-rouge">total</code>是计算得到的所要获取的页数。</p>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">detail_page</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
    <span class="s">"""一级页面解析函数：提取每页中10个职位的postid"""</span>
    <span class="n">one_html</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">one_job_dict</span> <span class="ow">in</span> <span class="n">one_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'Posts'</span><span class="p">]:</span>
      <span class="n">post_id</span> <span class="o">=</span> <span class="n">one_job_dict</span><span class="p">[</span><span class="s">'PostId'</span><span class="p">]</span>
      <span class="c1"># 拼接二级页面URL地址,再次交给调度器入队列
</span>      <span class="n">two_url</span> <span class="o">=</span> <span class="s">'https://careers.tencent.com/tencentcareer/api/post/ByPostId?timestamp=1593656158948&amp;postId={}&amp;language=zh-cn'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">post_id</span><span class="p">)</span>
      <span class="k">yield</span> <span class="n">scrapy</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">two_url</span><span class="p">,</span> <span class="n">callback</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">get_job_info</span><span class="p">)</span>   <span class="c1">#将所有的信息交给自定义函数self.get_job_info处理
</span>
</code></pre></div></div>

<p>答：<code class="language-plaintext highlighter-rouge">two_url</code>拼接二级页面URL地址,再次交给调度器入队列；<code class="language-plaintext highlighter-rouge">yield scrapy.Request</code>将所有的信息交给自定义函数<code class="language-plaintext highlighter-rouge">self.get_job_info</code>处理</p>

<hr />

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_job_info</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response</span><span class="p">):</span>
  <span class="s">"""提取每个职位的具体信息"""</span>
  <span class="n">two_html</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
  <span class="n">item</span> <span class="o">=</span> <span class="n">TencentItem</span><span class="p">()</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_name'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'RecruitPostName'</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_address'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'LocationName'</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_type'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'CategoryName'</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_time'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'LastUpdateTime'</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_responsibility'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'Responsibility'</span><span class="p">]</span>
  <span class="n">item</span><span class="p">[</span><span class="s">'job_requirement'</span><span class="p">]</span> <span class="o">=</span> <span class="n">two_html</span><span class="p">[</span><span class="s">'Data'</span><span class="p">][</span><span class="s">'Requirement'</span><span class="p">]</span>

  <span class="c1"># 至此,一个职位完整信息抓取完成,交给管道文件处理
</span>  <span class="k">yield</span> <span class="n">item</span>
</code></pre></div></div>

<p>答：调用<code class="language-plaintext highlighter-rouge">json.loads</code>方法提取每个职位的具体信息；<code class="language-plaintext highlighter-rouge">yield item</code>至此,一个职位完整信息抓取完成,交给<strong>管道文件处理</strong>。</p>

<hr />

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Chrome</span><span class="p">()</span>   <span class="c1"># 创建一个浏览器对象，并打开
</span><span class="n">driver</span><span class="p">.</span><span class="n">maximize_window</span><span class="p">()</span>    <span class="c1"># 最大化窗口
</span><span class="n">driver</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="s">'https://mail.qq.com/'</span><span class="p">)</span>  <span class="c1"># 调用get方法发起请求
</span>
<span class="n">driver</span><span class="p">.</span><span class="n">switch_to</span><span class="p">.</span><span class="n">frame</span><span class="p">(</span><span class="s">'login_frame'</span><span class="p">)</span><span class="c1"># 切换iframe子页面
</span>

<span class="c1"># 2、用户名、密码、登录
</span><span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">'u'</span><span class="p">).</span><span class="n">send_keys</span><span class="p">(</span><span class="s">'2621470058'</span><span class="p">)</span>  <span class="c1"># 这个不用管
</span><span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">'p'</span><span class="p">).</span><span class="n">send_keys</span><span class="p">(</span><span class="s">'zhanshen001'</span><span class="p">)</span> <span class="c1"># 这个不用管
</span><span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">'login_button'</span><span class="p">).</span><span class="n">click</span><span class="p">()</span>   <span class="c1"># 查找登录按钮的位置，并调用click方法单击此按钮。
</span></code></pre></div></div>

<p>以上注解已写在程序当中</p>]]></content><author><name>Ranok</name></author><category term="python" /><category term="爬虫" /><category term="期末考试" /><summary type="html"><![CDATA[网络爬虫（Web Crawler）是一种自动化程序，它可以在互联网上浏览和收集信息。它们可以发现和抓取网站上的所有内容，包括文本、图片、视频、音频等，并将这些数据保存到数据库或文件中。]]></summary></entry><entry><title type="html">毛概期末整理</title><link href="http://localhost:4000/maogai" rel="alternate" type="text/html" title="毛概期末整理" /><published>2023-06-11T00:00:00+08:00</published><updated>2023-06-11T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-maogai</id><content type="html" xml:base="http://localhost:4000/maogai"><![CDATA[<p>  毛概是毛泽东思想和中国特色社会主义理论体系概论的简称。学习毛概有利于刚进入大学的学生思想的转变，更好的完成大学期间学习任务，提高大学生自我素质，增加应对现实中各种挑战的能力，尽快适应新的学习生活环境，完成大学期间的各项发展任务，成为社会发展的有用之才。</p>

<hr />

<h1 id="前言">前言</h1>
<p>  本次博客整理，针对毛概期末考试，知识点较多，请提前准备。<br />
  其中选择题部分可以在，学习通中找到对应的答案。本博客也对此作出整理</p>

<hr />

<h1 id="目录">目录</h1>

<ul>
  <li><a href="#前言">前言</a></li>
  <li><a href="#目录">目录</a></li>
  <li><a href="#正文">正文</a>
    <ul>
      <li><a href="#选择题">选择题</a>
        <ul>
          <li><a href="#导论部分">导论部分</a></li>
          <li><a href="#第一章">第一章</a></li>
          <li><a href="#第二章">第二章</a></li>
          <li><a href="#第三章">第三章</a></li>
          <li><a href="#第四章">第四章</a></li>
          <li><a href="#第五章">第五章</a></li>
          <li><a href="#第六章">第六章</a></li>
          <li><a href="#第七章">第七章</a></li>
          <li><a href="#第八章">第八章</a></li>
          <li><a href="#新思想第一章">新思想第一章</a></li>
          <li><a href="#新思想第二章">新思想第二章</a></li>
          <li><a href="#新思想第三章">新思想第三章</a></li>
          <li><a href="#新思想第四章">新思想第四章</a></li>
          <li><a href="#新思想第五章">新思想第五章</a></li>
          <li><a href="#新思想第六章">新思想第六章</a></li>
        </ul>
      </li>
      <li><a href="#大题部分">大题部分</a>
        <ul>
          <li><a href="#1马克思主义中国化时代化的科学内涵及其三层意思">1.马克思主义中国化时代化的科学内涵及其三层意思※</a></li>
          <li><a href="#2-马克思主义中国化时代化的原因">2 马克思主义中国化时代化的原因※</a></li>
          <li><a href="#3-马克思主义中国化时代化的理论成果及其关系">3 马克思主义中国化时代化的理论成果及其关系※</a></li>
          <li><a href="#4-近代中国社会的性质主要矛盾">4 近代中国社会的性质、主要矛盾※</a></li>
          <li><a href="#5-过渡时期社会的性质经济成分阶级构成和主要矛盾">5 过渡时期社会的性质、经济成分、阶级构成和主要矛盾※</a></li>
          <li><a href="#6-社会主义改造的历史经验">6 社会主义改造的历史经验※</a></li>
          <li><a href="#7-社会主义改造完成后社会主要矛盾">7 社会主义改造完成后社会主要矛盾※</a></li>
          <li><a href="#8-社会主义建设道路初步探索的意义和经验教训">8 社会主义建设道路初步探索的意义和经验教训※</a></li>
          <li><a href="#9-中国特色社会主义进入新时代的社会主要矛盾">9 中国特色社会主义进入新时代的社会主要矛盾※</a></li>
          <li><a href="#10-邓小平理论首要的基本的理论问题和精髓">10 邓小平理论首要的基本的理论问题和精髓※</a></li>
          <li><a href="#11-4社会主义的本质">11 4.	社会主义的本质※</a></li>
          <li><a href="#12-三个代表重要思想回答的重大问题和核心观点及其关系">12 “三个代表”重要思想回答的重大问题和核心观点及其关系※</a></li>
          <li><a href="#13-科学发展观回答的重大问题和科学内涵">13 科学发展观回答的重大问题和科学内涵※</a></li>
          <li><a href="#14-习近平新时代中国特色社会主义思想回答的重大时代课题">14 习近平新时代中国特色社会主义思想回答的重大时代课题※</a></li>
          <li><a href="#15-习近平新时代中国特色社会主义思想的历史地位">15 习近平新时代中国特色社会主义思想的历史地位※</a></li>
          <li><a href="#16-中国式现代化的内涵中国特色和本质要求">16 中国式现代化的内涵、中国特色和本质要求※</a></li>
          <li><a href="#17-新发展格局的内涵构建新发展格局的意义和重点任务">17 新发展格局的内涵，构建新发展格局的意义和重点任务※</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<h1 id="正文">正文</h1>

<h2 id="选择题">选择题</h2>

<h3 id="导论部分">导论部分</h3>
<p>1
【单选题】马克思主义中国化的第一个理论成果是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、毛泽东思想
B、邓小平理论
C、“三个代表”重要思想
D、科学发展观
</code></pre></div></div>

<p>正确答案： A</p>

<p>2
【单选题】马克思主义中国化的命题是（ ）提出的。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、马克思
B、列宁
C、毛泽东
D、邓小平
</code></pre></div></div>

<p>正确答案： C</p>

<p>3
【单选题】在毛泽东思想的指导下，党领导人民完成了新民主主义革命，建立了中华人民共和国，中华民族从此（ ）了。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、站起来
B、富起来
C、强起来
D、大起来
</code></pre></div></div>

<p>正确答案： A</p>

<p>4
【单选题】100年来，中国共产党团结带领中国人民进行的一切奋斗、一切牺牲、一切创造，归结起来就是一个主题（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实现民族独立、人民解放
B、实现中华民族伟大复兴
C、实现现代化
D、实现共同富裕
</code></pre></div></div>

<p>正确答案： B</p>

<p>5
【单选题】马克思主义中国化最新成果是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平理论
B、“三个代表”重要思想
C、科学发展观
D、习近平新时代中国特色社会主义思想
</code></pre></div></div>

<p>正确答案： D</p>

<p>1
【多选题】马克思主义中国化的原因包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、解决中国实际问题的客观需要
B、马克思主义理论发展的内在要求
C、马克思主义理论提供了解决中国问题的现成答案
D、马克思主义只能在中国发展
</code></pre></div></div>

<p>正确答案： AB</p>

<p>2
【多选题】马克思主义中国化的两大理论成果是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、毛泽东思想
B、邓小平理论
C、中国特色社会主义理论体系
D、习近平新时代中国特色社会主义思想
</code></pre></div></div>

<p>正确答案： AC</p>

<p>3
【多选题】中国特色社会主义理论体系包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平理论
B、“三个代表”重要思想
C、科学发展观
D、习近平新时代中国特色社会主义思想
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>4
【多选题】中国共产党百年创造的伟大成就是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、创造了新民主主义革命的伟大成就
B、创造了社会主义革命和建设的伟大成就
C、创造了改革开放和社会主义现代化建设的伟大成就
D、创造了新时代中国特色社会主义的伟大成就
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>5
【多选题】学习本课程的目的是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、准确把握马克思主义中国化进程中形成的理论成果
B、深刻认识中国共产党领导人民进行的革命、建设、改革的历史进程、历史变革、历史成就
C、透彻理解中国共产党在新时代坚持的基本理论、基本路线、基本方略
D、切实提升运用马克思主义立场、观点和方法认识问题、分析问题和解决问题能力
</code></pre></div></div>

<p>正确答案： ABCD</p>

<hr />

<h3 id="第一章">第一章</h3>

<p>1
【单选题】毛泽东思想形成的时代背景是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、和平与发展
B、战争与革命
C、改革开放
D、信息革命
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】毛泽东思想形成的实践基础是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党领导的革命和建设的实践
B、党领导的改革开放
C、党领导的新民主主义革命
D、党领导的社会主义建设
</code></pre></div></div>

<p>正确答案： A</p>

<p>3
【单选题】把毛泽东思想确立为党的指导思想并写入党章是在（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中共六大
B、中共七大
C、中共八大
D、中共九大
</code></pre></div></div>

<p>正确答案： B</p>

<p>4
【单选题】毛泽东思想围绕的主题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中国革命和建设
B、中国改革开放
C、中国特色社会主义建设
D、中华民族伟大复兴
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】党的根本工作路线是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实事求是
B、群众路线
C、独立自主
D、为人民服务
</code></pre></div></div>

<p>正确答案： B</p>

<p>1
【多选题】毛泽东思想是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、马克思主义中国化的第一个理论成果
B、马克思列宁主义在中国的运用和发展
C、关于中国革命和建设的正确理论原则和经验总结
D、中国共产党集体智慧的结晶
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>2
【多选题】毛泽东思想的主要内容包括新民主主义革命理论、社会主义革命和社会主义建设理论，还有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、革命军队建设和军事战略的理论
B、政策和策略的理论
C、思想政治工作和文化工作的理论
D、党的建设理论
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>3
【多选题】毛泽东的哲学著作有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、《反对本本主义》
B、《实践论》
C、《矛盾论》
D、《人的正确思想是从哪里来的？》
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>4
【多选题】毛泽东思想活的灵魂包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实事求是
B、群众路线
C、独立自主
D、与时俱进
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>5
【多选题】关于毛泽东的评价正确的是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、毛泽东是伟大的马克思主义者，伟大的无产阶级革命家、战略家和理论家
B、毛泽东晚年犯了严重错误，他的错误是第一位的，功绩是第二位的
C、他为中国共产党和中国人民解放军的创立和发展做出了不可磨灭的贡献
D、他对中国革命的功绩远远大于他的过失
</code></pre></div></div>

<p>正确答案： ACD</p>

<hr />

<h3 id="第二章">第二章</h3>

<p>1
【单选题】新民主主义革命的性质是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、无产阶级社会主义革命
B、资产阶级民主主义革命
C、农民革命
D、土地革命
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】新民主主义国家的国体是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、资产阶级专政
B、无产阶级专政
C、人民民主专政
D、各革命阶级联合专政
</code></pre></div></div>

<p>正确答案： D</p>

<p>3
【单选题】近代中国革命斗争的主要形式是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、工人罢工
B、商人罢市
C、学生罢课
D、武装斗争
</code></pre></div></div>

<p>正确答案： D</p>

<p>4
【单选题】新民主主义革命时期加强党的建设，必须把（ ）放在首位。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、思想建设
B、组织建设
C、作风建设
D、制度建设
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】新民主主义革命的道路是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、城市包围农村，武装夺取政权
B、农村包围城市，武装夺取政权
C、城市包围农村，和平夺取政权
D、农村包围城市，和平夺取政权
</code></pre></div></div>

<p>正确答案： B</p>

<p>1
【多选题】新民主主义革命的对象包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、帝国主义
B、封建主义
C、民族资本主义
D、官僚资本主义
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>2
【多选题】新民主主义革命的动力包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、无产阶级
B、农民阶级
C、城市小资产阶级
D、民族资产阶级
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>3
【多选题】近代中国无产阶级的特殊优点有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、富于组织纪律性
B、革命最坚决最彻底
C、分布集中，便于组织和团结
D、和农民有天然联系，便于结成工农联盟
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>4
【多选题】新民主主义的经济纲领是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、没收封建地主阶级的土地归农民所有
B、没收官僚资产阶级的垄断资本归新民主主义的国家所有
C、没收民族工商业
D、保护民族工商业
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>5
【多选题】新民主主义革命的三大法宝是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、统一战线
B、武装斗争
C、党的建设
D、土地革命
</code></pre></div></div>

<p>正确答案： ABC</p>

<hr />

<h3 id="第三章">第三章</h3>

<p>1
【单选题】过渡时期我国社会的性质是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、半殖民地半封建社会
B、新民主主义社会
C、资本主义社会
D、社会主义社会
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】新民主主义社会的主要矛盾是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、地主阶级和农民阶级矛盾
B、资产阶级和无产阶级矛盾
C、无产阶级和小资产阶级矛盾
D、农民阶级和小资产阶级矛盾
</code></pre></div></div>

<p>正确答案： B</p>

<p>3
【单选题】中国共产党在过渡时期总路线的主体是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实现国家的社会主义工业化
B、实现国家对农业的社会主义改造
C、实现国家对手工业的社会主义改造
D、实现国家对资本主义工商业的社会主义改造
</code></pre></div></div>

<p>正确答案： A</p>

<p>4
【单选题】我国农业社会主义改造的道路是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、直接没收
B、和平赎买
C、互助合作
D、自愿上交
</code></pre></div></div>

<p>正确答案： C</p>

<p>5
【单选题】社会主义制度在中国确立的标志是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、1949年新中国成立
B、1952年民主革命任务完成
C、1954年《中华人民共和国宪法》颁布
D、1956年底社会主义改造基本完成
</code></pre></div></div>

<p>正确答案： D</p>

<p>1
【多选题】新民主主义社会的阶级构成是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、工人阶级
B、农民阶级
C、小资产阶级
D、民族资产阶级
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>2
【多选题】我国农业社会主义改造步骤有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、农业生产互助组
B、初级农业生产合作社
C、高级农业生产合作社
D、社会主义集体农庄
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>3
【多选题】我国能够采取赎买的方式对资本主义工商业进行和平改造的原因有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、在社会主义革命阶段，民族资产阶级既有剥削工人取得利润的一面，又有拥护宪法、愿意接受社会主义改造的一面
B、中国共产党与民族资产阶级长期保持着统一战线的关系
C、我国已经有了以工人阶级为领导、工农联盟为基础的人民民主专政的国家政权
D、建立了强大的社会主义国营经济并掌握了国家的经济命脉
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>4
【多选题】我国社会主义改造的历史经验有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、社会主义工业化建设与社会主义改造同时并举
B、采取积极引导、逐步过渡的方式
C、用和平方法进行改造
D、走互助合作的道路
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>5
【多选题】1956年底，我国社会主义改造基本完成，标志着（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、社会主义制度在我国已经确立
B、我国进入了社会主义初级阶段
C、我国步入了社会主义改革时期
D、我国实现了新民主主义向社会主义过渡
</code></pre></div></div>

<p>正确答案： ABD</p>

<hr />

<h3 id="第四章">第四章</h3>
<p>1
【单选题】毛泽东在《论十大关系》中提出社会主义建设的基本方针是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、多快好省地建设社会主义
B、以经济建设为中心
C、以阶级斗争为纲
D、调动一切积极因素为社会主义事业服务
</code></pre></div></div>

<p>正确答案：D</p>

<p>2
【单选题】我国社会主义社会基本矛盾性质是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、对抗性的矛盾
B、非对抗性的矛盾
C、适应性的矛盾
D、非适应性的矛盾
</code></pre></div></div>

<p>正确答案：B</p>

<p>3
【单选题】毛泽东指出，解决人民内部矛盾的方法是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、民主方法
B、专政方法
C、法律制裁方法
D、劳动改造方法
</code></pre></div></div>

<p>正确答案：A</p>

<p>4
【单选题】毛泽东强调，社会主义国家政治生活的主题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、阶级斗争
B、革命
C、正确处理人民内部矛盾
D、经济建设
</code></pre></div></div>

<p>正确答案：C</p>

<p>5
【单选题】中国共产党强调，我国实现四个现代化关键在于（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、农业现代化
B、工业现代化
C、国防现代化
D、科学技术现代化
</code></pre></div></div>

<p>正确答案：D</p>

<p>1
【多选题】我国社会主义社会存在两类不同性质矛盾是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、主要矛盾
B、基本矛盾
C、敌我矛盾
D、人民内部矛盾
</code></pre></div></div>

<p>正确答案：CD</p>

<p>2
【多选题】处理人民内部矛盾的民主方法有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、讨论的方法
B、批评的方法
C、说服教育的方法
D、强迫劳动的方法
</code></pre></div></div>

<p>正确答案：ABC</p>

<p>3
【多选题】毛泽东关于走中国工业化道路的思想包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、把重工业作为我国经济建设的重点
B、必须充分注意发展农业和轻工业
C、以农业为基础，以工业为主导，以农轻重为序发展国民经济的总方针
D、一整套“两条腿走路”的工业化发展思路
</code></pre></div></div>

<p>正确答案：ABCD</p>

<p>4
【多选题】毛泽东提出，社会主义可以分为两个阶段（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、不发达的社会主义
B、比较发达的社会主义
C、社会主义初级阶段
D、社会主义高级阶段
</code></pre></div></div>

<p>正确答案：AB</p>

<p>5
【多选题】我国社会主义建设道路初步探索的意义有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、巩固和发展了我国的社会主义制度
B、为开创中国特色社会主义提供了宝贵经验、理论准备、物质基础
C、丰富了科学社会主义的理论和实践
D、为其他国家的社会主义建设提供了经验和借鉴
</code></pre></div></div>

<p>正确答案：ABCD</p>

<hr />

<h3 id="第五章">第五章</h3>

<p>1
【单选题】当今时代主题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、和平与发展
B、战争与革命
C、改革与开放
D、创新与变革
</code></pre></div></div>

<p>正确答案：A</p>

<p>2
【单选题】我国发展新的历史方位是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中国特色社会主义进入了新时代
B、中国特色社会主义进入了新阶段
C、中国特色社会主义进入了新时期
D、中国特色社会主义进入了新征程
</code></pre></div></div>

<p>正确答案：A</p>

<p>3
【单选题】中国特色社会主义理论体系形成发展的实践基础是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党领导的新民主主义革命
B、党领导的社会主义改造
C、党领导的社会主义建设
D、党领导的改革开放和社会主义现代化建设
</code></pre></div></div>

<p>正确答案：D</p>

<p>4
【单选题】提出了“建设有中国特色的社会主义”的重大命题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、毛泽东
B、邓小平
C、江泽民
D、胡锦涛
</code></pre></div></div>

<p>正确答案：B</p>

<p>5
【单选题】（ ）把习近平新时代中国特色社会主义思想确立为党的指导思想。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党的十七大
B、党的十八大
C、党的十九大
D、党的二十大
</code></pre></div></div>

<p>正确答案：C</p>

<p>1
【多选题】百年未有之大变局是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、当前国际格局和国际体系正在发生深刻调整
B、全球治理体系正在发生深刻变革
C、国际力量对比正在发生近代以来最具革命性的变化
D、世界范围呈现出影响人类历史进程和趋向的重大态势
</code></pre></div></div>

<p>正确答案：ABCD</p>

<p>2
【多选题】习近平新时代中国特色社会主义思想回答的时代课题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、什么是马克思主义中国化时代化，怎样推进马克思主义中国化时代化
B、新时代坚持和发展什么样的中国特色社会主义、怎样坚持和发展中国特色社会主义
C、建设什么样的社会主义现代化强国、怎样建设社会主义现代化强国
D、建设什么样的长期执政的马克思主义政党、怎样建设长期执政的马克思主义政党
</code></pre></div></div>

<p>正确答案：BCD</p>

<p>3
【多选题】习近平新时代中国特色社会主义思想的主要内容是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、“十个明确”
B、“十四个坚持”
C、“十三个方面成就”
D、“十个结合”
</code></pre></div></div>

<p>正确答案：ABC</p>

<p>4
【多选题】习近平新时代中国特色社会主义思想的历史地位是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、当代中国马克思主义、21世纪马克思主义
B、中华文化和中国精神的时代精华
C、中国特色社会主义理论体系的重要组成部分
D、实现中华民族伟大复兴的行动指南
</code></pre></div></div>

<p>正确答案：ABCD</p>

<p>5
【多选题】中国特色社会主义理论体系是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、马克思主义中国化时代化的重大理论成果
B、全党全国各族人民团结奋斗的共同思想基础
C、坚持和发展中国特色社会主义的行动指南
D、全面推进中华民族伟大复兴的根本指针
</code></pre></div></div>

<p>正确答案：ABCD</p>

<hr />

<h3 id="第六章">第六章</h3>

<p>1
【单选题】邓小平理论回答的首要的基本理论问题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、什么是马克思主义中国化，怎样马克思主义中国化
B、什么是社会主义，怎样建设社会主义
C、建设什么样的党，怎样建设党
D、实现什么样的发展，怎样发展
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】邓小平理论的精髓是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、解放思想、实事求是
B、与时俱进、求真务实
C、改革开放、自力更生
D、发展生产、共同富裕
</code></pre></div></div>

<p>正确答案： A</p>

<p>3
【单选题】社会主义的根本任务是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、消灭剥削
B、改革开放
C、发展生产力
D、实现共同富裕
</code></pre></div></div>

<p>正确答案： C</p>

<p>4
【单选题】社会主义社会发展的直接动力是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、革命
B、创新
C、开放
D、改革
</code></pre></div></div>

<p>正确答案： D</p>

<p>5
【单选题】中国特色社会主义理论体系的开篇之作是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平理论
B、“三个代表”重要思想
C、科学发展观
D、习近平新时代中国特色社会主义思想
</code></pre></div></div>

<p>正确答案： A</p>

<p>1
【多选题】社会主义的本质是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、解放生产力，发展生产力
B、消灭剥削，消除两极分化
C、最终达到共同富裕
D、按劳分配
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>2
【多选题】党在社会主义初级阶段的基本路线中“两个基本点”是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、坚持党的领导
B、坚持四项基本原则
C、坚持改革开放
D、坚持独立自主，自力更生
</code></pre></div></div>

<p>正确答案： BC</p>

<p>3
【多选题】邓小平提出的“三步走”发展战略是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、从1981年到1990年实现国民生产总值比1980年翻一番，解决人民的温饱问题
B、从1991年到20世纪末，使国民生产总值再翻一番，达到小康水平
C、到建党一百周年时，全面建成小康社会
D、到21世纪中叶，国民生产总值再翻两番，达到中等发达国家水平，基本实现现代化
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>4
【多选题】社会主义市场经济理论的要点有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、计划经济和市场经济不是划分社会制度的标志，计划经济不等于社会主义，市场经济也不等于资本主义
B、计划和市场都是经济手段，对经济活动的调节各有优势和长处，社会主义实行市场经济要把两者结合起来
C、市场经济作为资源配置的一种方式本身不具有制度属性，可以和不同的社会制度结合，但它和不同社会制度结合具有不同的性质
D、计划经济是社会主义的基本特征，市场经济是资本主义特有的东西
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>5
【多选题】邓小平提出的“两手抓”的思想有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、一手抓工业，一手抓农业
B、一手抓物质文明，一手抓精神文明
C、一手抓建设，一手抓法制
D、一手抓改革开放，一手抓惩治腐败
</code></pre></div></div>

<p>正确答案： BCD</p>

<hr />

<h3 id="第七章">第七章</h3>

<p>1
【单选题】“三个代表”重要思想回答的重大问题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、什么是马克思主义中国化，怎样马克思主义中国化
B、什么是社会主义，怎样建设社会主义
C、建设什么样的党，怎样建设党
D、实现什么样的发展，怎样发展
</code></pre></div></div>

<p>正确答案： C</p>

<p>2
【单选题】党执政兴国的第一要务是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、发展
B、改革
C、开放
D、创新
</code></pre></div></div>

<p>正确答案： A</p>

<p>3
【单选题】党的十四大确立了我国经济体制改革的目标是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、建立公有制为主体，多种所有制经济共同发展的经济制度
B、实行按劳分配为主体，多种分配方式并存的收入分配制度
C、建立完善的社会保障体系
D、建立社会主义市场经济体制
</code></pre></div></div>

<p>正确答案： D</p>

<p>4
【单选题】党领导人民治理国家的基本方略是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、依法治国
B、以德治国
C、依人治国
D、以仁治国
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】标志着我国对外开放进入了一个新的阶段是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、创办经济特区
B、加入世界贸易组织
C、建立自贸区
D、建立自由港
</code></pre></div></div>

<p>正确答案： B</p>

<p>1
【多选题】“三个代表”重要思想的核心观点是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、始终代表中国先进生产力的发展要求
B、始终代表中国先进文化的前进方向
C、始终代表中国最广大人民的根本利益
D、始终代表发展中国家利益
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>2
【多选题】正确认识和处理改革、发展、稳定的关系，要（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、把改革的力度、发展的速度和社会可承受的程度统一起来
B、把不断改善人民生活作为处理改革发展稳定关系的重要结合点
C、在社会稳定中推进改革发展，通过改革发展促进社会稳定
D、坚持发展是第一要务，为了发展可以牺牲稳定
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>3
【多选题】党的十五大把“三步走”战略的第三步进一步具体化，提出了三个阶段性目标是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、21世纪第一个10年，实现国民生产总值比2000年翻一番，使人民的小康生活更加富裕，形成比较完善的社会主义市场经济体制
B、到建党100周年时，全面建成小康社会
C、到建党100周年时，使国民经济更加发展，各项制度更加完善
D、到21世纪中叶新中国成立100周年时，基本实现现代化，建成富强民主文明的社会主义国家
</code></pre></div></div>

<p>正确答案： ACD</p>

<p>4
【多选题】在党的十六大报告中，江泽民把社会主义（ ）一起确立为社会主义现代化全面发展的三大基本目标。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、物质文明
B、政治文明
C、社会文明
D、精神文明
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>5
【多选题】江泽民提出领导干部要“三讲”，是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、讲纪律
B、讲学习
C、讲政治
D、讲正气
</code></pre></div></div>

<p>正确答案： BCD</p>

<hr />

<h3 id="第八章">第八章</h3>

<p>1
【单选题】科学发展观回答的重大问题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、什么是马克思主义中国化，怎样马克思主义中国化
B、什么是社会主义，怎样建设社会主义
C、建设什么样的党，怎样建设党
D、实现什么样的发展，怎样发展
</code></pre></div></div>

<p>正确答案： D</p>

<p>2
【单选题】科学发展观的核心立场是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、发展
B、以人为本
C、全面协调可持续
D、统筹兼顾
</code></pre></div></div>

<p>正确答案： B</p>

<p>3
【单选题】转变经济发展方式的重大战略决策（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实施创新驱动发展战略
B、全面深化经济体制改革
C、促进区域协调发展
D、推动城乡发展一体化
</code></pre></div></div>

<p>正确答案： A</p>

<p>4
【单选题】社会主义民主政治的本质和核心要求（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党的领导
B、人民当家作主
C、依法治国
D、自由人权
</code></pre></div></div>

<p>正确答案： B</p>

<p>5
【单选题】（ ）是中国特色社会主义的本质属性。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、繁荣富强
B、民主法治
C、社会和谐
D、生态优美
</code></pre></div></div>

<p>正确答案： C</p>

<p>1
【多选题】科学发展观的基本要求是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、全面
B、共享
C、协调
D、可持续
</code></pre></div></div>

<p>正确答案： ACD</p>

<p>2
【多选题】社会主义核心价值体系的基本内容包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、马克思主义指导思想
B、中国特色社会主义共同理想
C、以爱国主义为核心的民族精神和以改革创新为核心的时代精神
D、社会主义荣辱观
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>3
【多选题】构建社会主义和谐社会的总要求是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、民主法治、公平正义
B、诚信友爱、充满活力
C、安定有序、人与自然和谐相处
D、共建共享
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>4
【多选题】建设社会主义生态文明必须树立的生态文明理念有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、改造自然
B、尊重自然
C、顺应自然
D、保护自然
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>5
【多选题】新形势下，党面临的考验有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、执政考验
B、改革开放考验
C、市场经济考验
D、外部环境考验
</code></pre></div></div>

<p>正确答案： ABCD</p>

<hr />

<h3 id="新思想第一章">新思想第一章</h3>

<p>1
【单选题】马克思主义中国化时代化的最新理论成果是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平理论
B、“三个代表”重要思想
C、科学发展观
D、习近平新时代中国特色社会主义思想
</code></pre></div></div>

<p>正确答案： D</p>

<p>2
【单选题】新时代我国社会主要矛盾是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、人民对于建立先进的工业国的要求同落后的农业国的现实之间的矛盾
B、人民对于经济文化迅速发展的需要同当前经济文化不能满足人民需要的状况之间的矛盾
C、人民日益增长的物质文化需要同落后的社会生产之间的矛盾
D、人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾
</code></pre></div></div>

<p>正确答案： D</p>

<p>3
【单选题】习近平新时代中国特色社会主义思想始终坚持以（ ）为中心。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、经济
B、人民
C、发展
D、改革
</code></pre></div></div>

<p>正确答案： B</p>

<p>4
【单选题】习近平新时代中国特色社会主义思想的主要创立者是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、习近平
B、江泽民
C、胡锦涛
D、邓小平
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】（ ）把习近平新时代中国特色社会主义思想确立为党的指导思想。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党的十七大
B、党的十八大
C、党的十九大
D、党的二十大
</code></pre></div></div>

<p>正确答案： C</p>

<p>1
【多选题】坚持和发展中国特色社会主义的总任务是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实现社会主义现代化
B、实现中华民族伟大复兴
C、实现共同富裕
D、实现全面小康
</code></pre></div></div>

<p>正确答案： AB</p>

<p>2
【多选题】习近平新时代中国特色社会主义思想回答的时代课题是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、什么是马克思主义中国化时代化，怎样推进马克思主义中国化时代化
B、新时代坚持和发展什么样的中国特色社会主义、怎样坚持和发展中国特色社会主义
C、建设什么样的社会主义现代化强国、怎样建设社会主义现代化强国
D、建设什么样的长期执政的马克思主义政党、怎样建设长期执政的马克思主义政党
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>3
【多选题】习近平新时代中国特色社会主义思想的主要内容包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、“十个明确”
B、“十四个坚持”
C、“十三个方面成就”
D、“三个务必”
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>4
【多选题】习近平新时代中国特色社会主义思想的世界观和方法论是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、必须坚持人民至上和自信自立
B、必须坚持守正创新和问题导向
C、必须坚持改革开放和独立自主
D、必须坚持系统观念和胸怀天下
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>5
【多选题】习近平新时代中国特色社会主义思想的历史地位是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、当代中国马克思主义、21世纪马克思主义
B、中国特色社会主义理论体系的开篇之作
C、中华文化和中国精神的时代精华
D、实现中华民族伟大复兴的行动指南
</code></pre></div></div>

<p>正确答案： ACD</p>

<hr />

<h3 id="新思想第二章">新思想第二章</h3>

<p>1
【单选题】从2020年到2035年，我国发展目标是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、解决温饱问题
B、全面建成小康社会
C、基本实现现代化
D、建成社会主义现代化强国
</code></pre></div></div>

<p>正确答案： C</p>

<p>2
【单选题】决定当代中国命运的关键一招是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、实现国家统一
B、党的自我革命
C、改革开放
D、全面依法治国
</code></pre></div></div>

<p>正确答案： C</p>

<p>3
【单选题】全面深化改革要坚持的原则是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、坚持和完善中国特色社会主义制度
B、坚持党对改革的集中统一领导
C、坚持人民立场
D、坚持社会主义市场经济改革方向
</code></pre></div></div>

<p>正确答案： B</p>

<p>4
【单选题】（ ）是伟大的自我革命。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、全面建设社会主义现代化国家
B、全面深化改革
C、全面依法治国
D、全面从严治党
</code></pre></div></div>

<p>正确答案： D</p>

<p>5
【单选题】全面从严治党，要把（ ）摆在首位。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、政治建设
B、思想建设
C、组织建设
D、作风建设
</code></pre></div></div>

<p>正确答案： A</p>

<p>1
【多选题】“四个全面”战略布局中战略举措是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、全面深化改革
B、全面依法治国
C、全面从严治党
D、全面建设社会主义现代化国家
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>2
【多选题】全面深化改革的总目标是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、完善和发展中国特色社会主义制度
B、推进国家治理体系和治理能力现代化
C、建立完善的社会主义市场经济体制
D、建立完善的社会治理体制
</code></pre></div></div>

<p>正确答案： AB</p>

<p>3
【多选题】全面依法治国的总目标是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、完善和发展中国特色社会主义制度
B、推进国家治理体系和治理能力现代化
C、建设中国特色社会主义法治体系
D、建设社会主义法治国家
</code></pre></div></div>

<p>正确答案： CD</p>

<p>4
【多选题】走中国特色社会主义法治道路（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、是学习西方先进法治经验的必然结果
B、是历史的必然结论
C、是由我国社会主义国家性质所决定的
D、是立足我国基本国情的必然选择
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>5
【多选题】中国特色社会主义法治道路的核心要义是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、坚持党的领导
B、坚持中国特色社会主义制度
C、维护公平正义
D、贯彻中国特色社会主义法治理论
</code></pre></div></div>

<p>正确答案： ABD</p>

<hr />

<h3 id="新思想第三章">新思想第三章</h3>

<p>1
【单选题】新发展格局是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、以国内大循环为主体、以国际大双循环为辅助
B、以国际大循环为主体、以国内大双循环为辅助
C、以国内大循环为主体、国内国际双循环相互促进
D、以国际大循环为主体、国内国际双循环相互促进
</code></pre></div></div>

<p>正确答案： C</p>

<p>2
【单选题】我国的根本政治制度是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、人民代表大会制度
B、中国共产党领导的多党合作和政治协商制度
C、民族区域自治制度
D、基层群众自治制度
</code></pre></div></div>

<p>正确答案： A</p>

<p>3
【单选题】（ ）是中国社会主义民主政治中独特的、独有的、独到的民主形式。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、选举民主
B、协商民主
C、人民民主
D、全面民主
</code></pre></div></div>

<p>正确答案： B</p>

<p>4
【单选题】（ ）是一个国家、一个民族发展中更基本、更深沉、更持久的力量。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、道路自信
B、理论自信
C、制度自信
D、文化自信
</code></pre></div></div>

<p>正确答案： D</p>

<p>5
【单选题】我国社会建设的重点是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、保障和改善民生
B、创新社会管理
C、建设平安中国
D、建设美丽中国
</code></pre></div></div>

<p>正确答案： A</p>

<p>1
【多选题】我国进入了新发展阶段的依据是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、从理论依据来看，新发展阶段是社会主义初级阶段中的一个阶段
B、从历史依据来看，新发展阶段是我们党带领人民迎来从站起来、富起来到强起来历史性跨越的新阶段
C、从现实依据来看，我们已经拥有开启新征程、实现新的更高目标的雄厚物质基础
D、从国际比较来看，我国已经进入世界发达国家行列
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>2
【多选题】新时代爱国统一战线的组成包括（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、全体社会主义劳动者
B、社会主义事业的建设者
C、拥护社会主义的爱国者
D、拥护祖国统一和致力于中华民族伟大复兴的爱国者
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>3
【多选题】社会主义核心价值观的基本内容是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、富强、民主、文明、和谐
B、自由、平等、公正、法治
C、自强、弘毅、求是、拓新
D、爱国、敬业、诚信、友善
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>4
【多选题】经济发展与改善民生的关系是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、经济发展是改善民生的前提
B、抓民生可以促进经济发展
C、经济发展为改善民生提供物质基础
D、改善民生是经济发展的目的
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>5
【多选题】关于绿水青山就是金山银山理解正确的是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、阐述了经济发展和生态环境保护的关系
B、揭示了保护生态环境就是保护生产力、改善生态环境就是发展生产力的道理
C、绿水青山既是自然财富、生态财富，又是社会财富、经济财富
D、保护生态环境就是保护自然价值和增值自然资本，就是保护经济社会发展潜力和后劲，使绿水青山持续发挥生态效益和经济社会效益
</code></pre></div></div>

<p>正确答案： ABCD</p>

<hr />

<h3 id="新思想第四章">新思想第四章</h3>

<p>1
【单选题】（ ）是安邦定国的重要基石。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、社会和谐
B、国家安全
C、民族团结
D、国家统一
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】总体国家安全观是（ ）提出的。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平
B、江泽民
C、胡锦涛
D、习近平
</code></pre></div></div>

<p>正确答案： D</p>

<p>3
【单选题】维护国家安全和社会安定的根本保证是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、坚持推进国家安全体系和能力现代化
B、坚持统筹发展和安全
C、坚持党对国家安全工作的绝对领导
D、坚持中国特色国家安全道路
</code></pre></div></div>

<p>正确答案： C</p>

<p>4
【单选题】坚持总体国家安全观，要以（ ）为宗旨。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、人民安全
B、政治安全
C、经济安全
D、文化安全
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】坚持总体国家安全观，把（ ）放在首要位置。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、人民安全
B、政治安全
C、经济安全
D、文化安全
</code></pre></div></div>

<p>正确答案： B</p>

<p>1
【多选题】关于总体国家安全观理解正确的是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、关键在“总体”
B、强调打总体战
C、突出的是大安全理念
D、强调科学统筹
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>2
【多选题】中华优秀传统文化中蕴含着丰富的国家安全战略思想有（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、安而不忘危，存而不忘亡，治而不忘乱
B、民为邦本，本固邦宁
C、内事文而和，外事武而义
D、亲人善邻，国之宝也
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>3
【多选题】做好国家安全工作要加强科学统筹，做到（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、统筹发展和安全
B、统筹开放和安全
C、统筹传统安全和非传统安全
D、统筹自身安全和共同安全
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>4
【多选题】政治安全的核心是政权安全和制度安全，最根本的就是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、维护中国共产党的领导和执政地位
B、维护中国特色社会主义制度
C、维护国家主权和安全
D、维护最广大人民的根本利益
</code></pre></div></div>

<p>正确答案： AB</p>

<p>5
【多选题】总体国家安全观是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党历史上第一个被确立为国家安全工作指导思想的重大战略思想
B、马克思主义国家安全理论中国化的最新成果
C、习近平新时代中国特色社会主义思想的重要组成部分
D、新时代国家安全工作的根本遵循和行动指南
</code></pre></div></div>

<p>正确答案： ABCD</p>

<hr />
<h3 id="新思想第五章">新思想第五章</h3>

<p>1
【单选题】中国坚持以（ ）为底线维护国家主权、安全、发展利益。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、国际责任
B、国家核心利益
C、世界和平
D、独立自主
</code></pre></div></div>

<p>正确答案： B</p>

<p>2
【单选题】中国坚持以（ ）为理念引领全球治理体系改革。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、平等互信
B、合作共赢
C、公平正义
D、相互尊重
</code></pre></div></div>

<p>正确答案： C</p>

<p>3
【单选题】中国坚持以（ ）为原则推动“一带一路”建设。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、共商共建共享
B、互利共赢
C、公平正义
D、独立自主
</code></pre></div></div>

<p>正确答案： A</p>

<p>4
【单选题】中国外交政策的宗旨是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、维护世界和平和促进共同发展
B、维护国家主权和利益
C、建立国际政治经济新秩序
D、反对霸权主义和强权政治
</code></pre></div></div>

<p>正确答案： A</p>

<p>5
【单选题】“一带一路”倡议是（ ）提出的。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、邓小平
B、江泽民
C、胡锦涛
D、习近平
</code></pre></div></div>

<p>正确答案： D</p>

<p>1
【多选题】习近平外交思想是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、习近平新时代中国特色社会主义思想的重要组成部分
B、马克思主义基本原理同中国特色大国外交实践相结合的重大理论结晶
C、以习近平同志为核心的党中央治国理政思想在外交领域的集中体现
D、新时代我国对外工作的根本遵循和行动指南
</code></pre></div></div>

<p>正确答案： ABCD</p>

<p>2
【多选题】新型国际关系“新”在（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、共建共享
B、相互尊重
C、公平正义
D、合作共赢
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>3
【多选题】构建人类命运共同体的核心是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、政治上，要相互尊重、平等协商，坚决摒弃冷战思维和强权政治，走对话而不对抗、结伴而不结盟的国与国交往新路
B、安全上，要坚持以对话解决争端、以协商化解分歧，统筹应对传统和非传统安全威胁，反对一切形式的恐怖主义
C、经济上，要同舟共济，促进贸易和投资自由化便利化，推动经济全球化朝着更加开放、包容、普惠、平衡、共赢的方向发展
D、文化上，要尊重世界文明多样性，以文明交流超越文明隔阂、文明互鉴超越文明冲突、文明共存超越文明优越
E、生态上，要坚持环境友好，合作应对气候变化，保护好人类赖以生存的地球家园
</code></pre></div></div>

<p>正确答案： ABCDE</p>

<p>4
【多选题】“一带一路”是指（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、“丝绸之路经济带”
B、“21世纪海上丝绸之路”
C、长江经济带
D、中欧铁路
</code></pre></div></div>

<p>正确答案： AB</p>

<p>5
【多选题】丝绸之路精神的核心是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、和平合作
B、开放包容
C、互学互鉴
D、互利共赢
</code></pre></div></div>

<p>正确答案： ABCD</p>

<hr />

<h3 id="新思想第六章">新思想第六章</h3>

<p>1
【单选题】中国特色社会主义最本质的特征是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党的领导
B、人民当家作主
C、依法治国
D、社会和谐
</code></pre></div></div>

<p>正确答案： A</p>

<p>2
【单选题】中国特色社会主义制度的最大优势是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、人民当家作主
B、协商民主
C、党的领导
D、法律面前人人平等
</code></pre></div></div>

<p>正确答案： C</p>

<p>3
【单选题】我国最高政治领导力量是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、全国人民代表大会
B、中国共产党
C、国务院
D、中国人民政治协商会议
</code></pre></div></div>

<p>正确答案： B</p>

<p>4
【单选题】实现中华民族伟大复兴关键在（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、改革开放
B、依法治国
C、以人民为中心
D、党
</code></pre></div></div>

<p>正确答案： D</p>

<p>5
【单选题】我国的根本领导制度是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、党的领导制度
B、人民代表大会制度
C、民族区域自治制度
D、基层群众自治制度
</code></pre></div></div>

<p>正确答案： A</p>

<p>1
【多选题】中国共产党的性质是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中国工人阶级的先锋队
B、中国人民先锋队
C、中华民族的先锋队
D、全体中国人的先锋队
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>2
【多选题】党的领导是中国特色社会主义制度的最大优势，是因为（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中国特色社会主义制度是党领导人民创建的
B、党的领导是充分发挥中国特色社会主义制度优势的根本保障
C、中国特色社会主义制度本身固有的
D、党的自身优势是中国特色社会主义制度优势的主要来源
</code></pre></div></div>

<p>正确答案： ABD</p>

<p>3
【多选题】党的领导决策核心是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、中央委员会
B、中央政治局
C、中央政治局常委会
D、全国代表大会
</code></pre></div></div>

<p>正确答案： ABC</p>

<p>4
【多选题】党是最高政治领导力量，原因是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、与生俱来的
B、由国家性质所决定的
C、由国家宪法所确立的
D、被中国革命、建设、改革伟大实践所证明的
</code></pre></div></div>

<p>正确答案： BCD</p>

<p>5
【多选题】民主和集中的关系是（ ）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A、两者互为条件、相辅相成、缺一不可
B、两者互为前提、相互促进
C、民主是正确集中的前提和基础
D、集中是民主的必然要求和归宿
</code></pre></div></div>

<p>正确答案： ACD</p>

<hr />

<h2 id="大题部分">大题部分</h2>

<h3 id="1马克思主义中国化时代化的科学内涵及其三层意思">1.马克思主义中国化时代化的科学内涵及其三层意思※</h3>

<p>  （1）内涵：<br />
  马克思主义中国化时代化就是立足中国国情和时代特点，坚持把马克思主义基本原理同中国具体实际相结合、同中华优秀传统文化相结合，深入研究和解决中国革命、建设、改革不同历史时期的实际问题，真正搞懂面临的时代课题，不断吸收新的时代内容，科学回答时代提出的重大理论和实践课题，创造新的理论成果。</p>

<p>  （2）三层意思：<br />
  ①运用马克思主义的立场、观点和方法，观察时代、把握时代、引领时代，解决中国革命、建设、改革中的实际问题。<br />
  ②总结和提炼中国革命、建设、改革的实践经验并将其上升为理论，不断丰富和发展马克思主义的理论宝库，赋予马克思主义以新的时代内涵。<br />
  ③运用中国人民喜闻乐见的民族语言来阐述马克思主义，使其植根于中华优秀.<br />
  传统文化的土壤之中，具有中国特色、中国风格、中国气派。</p>

<h3 id="2-马克思主义中国化时代化的原因">2 马克思主义中国化时代化的原因※</h3>

<p>  一是马克思主义理论本身发展的内在要求<br />
  二是解决中国实际问题的客观需要。</p>

<hr />

<h3 id="3-马克思主义中国化时代化的理论成果及其关系">3 马克思主义中国化时代化的理论成果及其关系※</h3>

<p>  （1）理论成果：毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想。</p>

<p>  （2）关系：一脉相承又与时俱进的关系：<br />
①一方面，毛泽东思想所蕴含的马克思主义的立场、观点和方法，为中国特色社会主义理论体系提供了基本遵循。<br />
②另一方面，中国特色社会主义理论体系在新的历史条件下进一步丰富和发展了毛泽东思想。<br />
③毛泽东思想和中国特色社会主义理论体系都是马克思列宁主义在中国的发展和运用，都以独创性的理论成果丰富和发展了马克思主义的理论宝库<br /></p>

<hr />

<h3 id="4-近代中国社会的性质主要矛盾">4 近代中国社会的性质、主要矛盾※</h3>
<p>  ①近代中国社会的性质：半殖民地半封建社会<br />
  ②主要矛盾：帝国主义和中华民族的矛盾，封建主义和人民大众的矛盾。</p>

<hr />

<h3 id="5-过渡时期社会的性质经济成分阶级构成和主要矛盾">5 过渡时期社会的性质、经济成分、阶级构成和主要矛盾※</h3>
<p>  ①社会性质：新民主主义社会<br />
  ②经济成分：社会主义性质的国营经济、半社会主义性质的合作社经济、农民和手工业者的个体经济、私人资本主义经济、国家资本主义经济<br />
  ③阶级构成：工人阶级、农民阶级、其他小资产阶级、民族资产阶级。<br />
  ④主要矛盾：三种基本经济成分及与之相联系的三种基本的阶级力量之间的矛盾集中表现为社会主义和资本主义两条道路，工人阶级和资产阶级两个阶级的矛盾</p>

<hr />

<h3 id="6-社会主义改造的历史经验">6 社会主义改造的历史经验※</h3>
<p>  第一，坚持社会主义工业化建设与社会主义改造同时并举<br />
  第二，采取积极引导，逐步过渡的方式<br />
  第三，用和平方法进行改造</p>

<hr />

<h3 id="7-社会主义改造完成后社会主要矛盾">7 社会主义改造完成后社会主要矛盾※</h3>
<p>  人民对于经济文化迅速发展的需要，同当前经济文化不能满足人民需要的状况之间的矛盾</p>

<hr />

<h3 id="8-社会主义建设道路初步探索的意义和经验教训">8 社会主义建设道路初步探索的意义和经验教训※</h3>

<p>  （1）初步探索的意义:<br />
  ①巩固和发展了我国的社会主义制度。<br />
  ②为开创中国特色社会主义提供了宝贵经验、理论准备、物质基础。<br />
  ③丰富了科学社会主义的理论和实践。</p>

<p>  （2）经验教训:<br />
  ①必须把马克思主义与中国实际相结合，探索符合中国特点的社会主义建设道路。<br />
  ②必须正确认识社会主义社会的主要矛盾和根本任务，集中力量发展生产力。<br />
  ③必须从实际出发进行社会主义建设，建设规模和速度要与国力相适应，不能急于求成。<br />
  ④必须发展社会主义民主，健全社会主义法制。<br />
  ⑤必须坚持党的民主集中制和集体领导制度，加强执政党建设。<br />
  ⑥必须坚持对外开放，借鉴和吸收人类文明成果建设社会主义，不能关起门来搞建设。</p>

<hr />

<h3 id="9-中国特色社会主义进入新时代的社会主要矛盾">9 中国特色社会主义进入新时代的社会主要矛盾※</h3>

<p>  人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾。</p>

<hr />

<h3 id="10-邓小平理论首要的基本的理论问题和精髓">10 邓小平理论首要的基本的理论问题和精髓※</h3>

<p>  首要的基本的理论问题：建设什么样的社会主义，怎样建设社会主义<br />
  精髓：解放思想，实事求是，是邓小平理论的精髓</p>

<hr />

<h3 id="11-4-社会主义的本质">11 4.	社会主义的本质※</h3>
<p>  社会主义的本质是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕<br /></p>

<hr />

<h3 id="12-三个代表重要思想回答的重大问题和核心观点及其关系">12 “三个代表”重要思想回答的重大问题和核心观点及其关系※</h3>

<p>  ①三个代表重要思想回答的重大问题是建设什么样的党？怎样建设党的问题</p>

<p>  ②核心观点：我们党始终代表中国先进生产力的发展要求，代表中国先进文化的前进方向，代表中国最广大人民的根本利益</p>

<p>  ③关系：代表中国先进生产力的发展要求，代表中国先进文化的前进方向，代表中国最广大人民的根本利益是统一的，整体相互关系相互促进发展先进生产力是发展先进文化，实现最广大人民根本利益的基础条件，人民群众是先进生产力和先进文化的创造主体，也是实现自身利益的根本力量，不断发展先进生产力和先进文化，归根到底都是为了满足人民日益增长的物质文化生活需要，不断实现最广大人民的根本利益。(不确定)</p>

<hr />

<h3 id="13-科学发展观回答的重大问题和科学内涵">13 科学发展观回答的重大问题和科学内涵※</h3>

<p>  科学发展观回答的重大问题是:实现什么样的发展，怎样进行发展的问题</p>

<p>  科学内涵：<br />
  一，推动经济社会发展是科学发展观的第一要义<br />
  二，以人为本是科学发展观的核心立场<br />
  三，全面协调可持续是科学发展观的基本要求<br />
  四，统筹兼顾是科学发展观的根本方法<br /></p>

<hr />

<h3 id="14-习近平新时代中国特色社会主义思想回答的重大时代课题">14 习近平新时代中国特色社会主义思想回答的重大时代课题※</h3>

<p>  一、新时代坚持和发展什么样的中国特色社会主义、怎样坚持和发展中国特色社会主义<br />
  二、建设什么样的社会主义现代化强国、怎样建设社会主义现代化强国<br />
  三、建设什么样的长期执政的马克思主义政党、怎样建设长期执政的马克思主义政党<br /></p>

<hr />

<h3 id="15-习近平新时代中国特色社会主义思想的历史地位">15 习近平新时代中国特色社会主义思想的历史地位※</h3>
<p>  一、开辟马克思主义中国化时代化的新境界<br />
  二、实现中华民族伟大复兴的行动指南<br />
  三、建设美好世界的中国智慧和中国方案</p>

<hr />

<h3 id="16-中国式现代化的内涵中国特色和本质要求">16 中国式现代化的内涵、中国特色和本质要求※</h3>
<p>  ①内涵：中国式现代化，是中国共产党领导的社会主义现代化，既有各国现代化的共同特征，更有基于自己国情的中国特色。<br />
  ②中国特色：中国式现代化是人口规模巨大的现代化、是全体人民共同富裕的现代化、是物质文明和精神文明相协调的现代化、是人与自然和谐共生的现代化、是走和平发展道路的现代化。<br />
  ③本质要求：坚持中国共产党领导，坚持中国特色社会主义，实现高质量发展，发展全过程人民民主，丰富人民精神世界，实现全体人民共同富裕，促进人与自然和谐共生，推动构建人类命运共同体，创造人类文明新形态<br /></p>

<hr />

<h3 id="17-新发展格局的内涵构建新发展格局的意义和重点任务">17 新发展格局的内涵，构建新发展格局的意义和重点任务※</h3>
<p>  ①内涵：立足新发展阶段，贯彻新发展理念，要致力构建以国内大循环为主体、国内国际双循环相互促进的新发展格局。<br /></p>

<p>  ②意义：构建新发展格局是重塑我国国际合作和竞争新优势的战略抉择是把握未来发展主动权的战略性布局和先手棋。<br /></p>

<p>  ③重点任务：<br />
  构建新发展格局的关键在于经济循环的畅通无阻，必须坚持深化供给侧结构性改革这条主线，继续完成“三去一降一补”的重要任务，实现经济在高水平上的动态平衡。<br />
  构建新发展格局的最本质特征是实现高水平的自立自强，必须更加强调自主创新，集合优势资源，有力有序推进创新攻关的新体制机制。<br />
  构建新发展格局要释放内需潜力，必须充分发挥市场资源优势，以巨大国内市场形成构建新发展格局的雄厚支撑。<br />
  构建新发展格局要实行高水平对外开放，必须具备强大的国内经济循环体系和稳固的基本盘，并以此形成对全球要素资源的强大吸引力、在激烈国际竞争中的强大竞争力、在全球资源配置中的强大推动力。</p>

<hr />]]></content><author><name>Ranok</name></author><category term="毛概" /><category term="期末考试" /><summary type="html"><![CDATA[  毛概是毛泽东思想和中国特色社会主义理论体系概论的简称。学习毛概有利于刚进入大学的学生思想的转变，更好的完成大学期间学习任务，提高大学生自我素质，增加应对现实中各种挑战的能力，尽快适应新的学习生活环境，完成大学期间的各项发展任务，成为社会发展的有用之才。]]></summary></entry><entry><title type="html">大数据技术原理与应用</title><link href="http://localhost:4000/bigdata" rel="alternate" type="text/html" title="大数据技术原理与应用" /><published>2023-06-05T00:00:00+08:00</published><updated>2023-06-05T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-bigData</id><content type="html" xml:base="http://localhost:4000/bigdata"><![CDATA[<p>  “大数据技术原理与应用”是一门介绍大数据技术的课程。通过学习这门课程，学生可以深入了解大数据技术的原理和应用，并学会如何使用各种工具和技术来处理和管理大数据。此外，该课程还涵盖了大数据架构、设计和性能优化等方面的内容，这些知识对于开展大规模数据处理和分析项目非常重要。因此，“大数据技术原理与应用”对于计算机科学和数据科学领域的学生和从业人员，以及对大数据感兴趣的其他人士都有很大的意义。</p>

<hr />
<h1 id="前言">前言</h1>
<p>  本博客是本人反复听了上课的28分钟录音，听了8个小时左右辛苦肝出来的。如果你可以看到这篇博客，说明我对你有足够的信任，请不要辜负这份信任。</p>

<blockquote>
  <p>未经本人允许，请不要分享本博客出去，分享方式包括但不限于分享链接，截图等。</p>
</blockquote>

<hr />
<h1 id="考题整理">考题整理</h1>

<h2 id="客观题部分50分">客观题部分（50分）</h2>

<h3 id="1-hadoop运行模式有哪些">1. Hadoop运行模式有哪些？</h3>

<ol>
  <li>单机模式</li>
  <li>伪分布式模式</li>
  <li>完全分布式模式</li>
</ol>

<hr />

<h3 id="2-单机模式和伪分布式模式的区别">2. 单机模式和伪分布式模式的区别</h3>

<p>  单机模式：Hadoop只在一台机器上运行，存储采用本地文件系统，没有采用分布式文件系统HDFS。<br />
  伪分布式：Hadoop存储采用分布式文件系统HDFS，而且HDFS的名称结点和数据结点位于集群的不同机器上。</p>

<hr />

<h3 id="3-伪分布式的安装">3. 伪分布式的安装</h3>

<h4 id="31-hadoop的开发和运行需要什么环境">3.1 Hadoop的开发和运行需要什么环境？</h4>

<p>  需要Java环境在hadoop-env.sh 中配置</p>

<h4 id="32-伪分布式的安装需要修改哪些配置文件">3.2 伪分布式的安装需要修改哪些配置文件？</h4>

<p>  需要修改文件：core-site.xml hdfs-site.xml</p>

<h4 id="33有关fsdefaultfs的配置的两种问法">3.3有关fs.defaultFS的配置的两种问法</h4>

<h5 id="331问法一fsdefaultfs的参数在哪一个配置文件中进行配置">3.3.1问法一：fs.defaultFS的参数在哪一个配置文件中进行配置？</h5>

<p>  在core-site.xml中配置</p>

<h5 id="333问法二配置namebode地址时由哪一个参数指定的">3.3.3问法二：配置NameBode地址时由哪一个参数指定的</h5>

<p>  由core-site.xml中的dfs.namenode.dir参数指定</p>

<hr />

<h3 id="4-hadoop的核心功能组件">4 Hadoop的核心功能组件</h3>

<blockquote>
  <p>可能会考填空或简答。</p>
</blockquote>

<h4 id="41-填空的问法请列举出两个除hdfs和mapreduce之外的两个文件">4.1 填空的问法：请列举出两个除hdfs和MapReduce之外的两个文件</h4>

<ol>
  <li>HBase</li>
  <li>Hive</li>
  <li>Pig</li>
  <li>Mahout</li>
  <li>ZooKeeper</li>
  <li>Flume</li>
  <li>Sqoop</li>
  <li>Ambari</li>
</ol>

<h4 id="42-简答题的问法请举两个核心组件并说明其作用">4.2 简答题的问法：请举两个核心组件并说明其作用</h4>

<ol>
  <li>HBase：是一个提供高可靠性、高性能、可伸缩、实时读写、分布式的列式数据库</li>
  <li>Hive：是一个基于hadoop数据仓库工具</li>
  <li>Pig：是一种数据流语言和运行环境</li>
  <li>Mahout：是一个开源的项目，它提供了一些可扩展的机器学习领域经典算法的实现</li>
  <li>ZooKeeper：是一个高效和可靠的协同工作系统。</li>
</ol>

<hr />

<h3 id="namenode">Namenode</h3>

<blockquote>
  <p>Datanode会定时的为Namenode发送心跳</p>
</blockquote>

<h4 id="51用于存储数据块信息的目录结构的是哪一个结点">5.1用于存储数据块信息的目录结构的是哪一个结点？</h4>

<p>  Namenode</p>

<h4 id="52-从功能的角度分析namenode主要用于存储什么信息不确定">5.2 从功能的角度分析Namenode主要用于存储什么信息（不确定）</h4>

<p>  NameNode存储着文件系统树以及文件树中所有的文件和文件夹的元数据信息</p>

<h4 id="53在hdfs中保存着两个数据结构请说明这两个数据结构是什么有什么用">5.3在HDFS中保存着两个数据结构，请说明这两个数据结构是什么，有什么用？</h4>

<p>  这两个数据结构分别是FsImage和Editlog。<br />
  FsImage用于维护文件系统树以及文件树中所有的文件和文件夹的元数据。<br />
  EditLog用于操作日志文件以及记录了所有针对文件的创建、删除、重命名等操作。<br /></p>

<hr />

<h4 id="6-datanode的主要功能是什么">6 DataNode的主要功能是什么？</h4>

<p>  负责管理它所在结点上存储的数据的读写,及存储数据（存放数据）<br /></p>

<blockquote>
  <p>DataNode和DataNode之间会进行进程通信</p>
</blockquote>

<hr />

<h3 id="7-hadoop集群主要瓶颈是什么">7 Hadoop集群主要瓶颈是什么？</h3>

<p>  不是CPU，主要瓶颈是<strong>磁盘IO</strong></p>

<hr />

<h3 id="8-ssh免密登录是为了什么目的是什么">8 ssh免密登录是为了什么/目的是什么？</h3>

<ol>
  <li>启动集群不需要输入密码</li>
  <li>进程之间可以免密通信</li>
  <li>免密登录<strong>不是必须的</strong></li>
</ol>

<hr />

<h3 id="9-hadoop的启停命令">9 Hadoop的启停命令</h3>

<ol>
  <li>start-all.sh：启动所有的Hadoop守护进程</li>
  <li>stop-all.sh：停止所有的Hadoop守护进程</li>
  <li>start-dfs.sh：启动Hadoop HDFS守护进程NameNode、SecondaryNameNode和DataNode</li>
  <li>stop-dfs.sh：停止Hadoop HDFS守护进程NameNode、SecondaryNameNode和DataNode</li>
  <li>单独启动某个进程：hadoop-daemons.sh start name</li>
  <li>单独关闭某个进程：hadoop-daemons.sh stop name</li>
  <li>启动YARN命令：start-yarn.sh</li>
  <li>关闭YARN命令：stop-yarn.sh</li>
</ol>

<hr />

<h3 id="10-hadoop是否支持随机读取">10 Hadoop是否支持随机读取</h3>

<p>  <strong>不支持</strong></p>

<hr />

<h3 id="11-指令相关">11 ：指令相关</h3>

<h4 id="111列举两个hdfs常用的shell命令">11.1列举<strong>两个</strong>HDFS常用的shell命令</h4>

<ol>
  <li>Hadoop fs -ls <path> 用于展示在指定目录<path>下的文件详细信息</path></path></li>
  <li>Hadoop fs -cat <path> 将指定文件的内容输出到标准输出</path></li>
  <li>Hadoop fs -mkdir [-p] <path> 创建一个或多个文件夹，-p选型用于递归的创建子文件夹</path></li>
  <li>Hadoop fs -cp <src> <dst> 将文件从源路径<src>复制到目标路径<dst></dst></src></dst></src></li>
</ol>

<h4 id="112-列举两个常用的java-api">11.2 列举两个常用的java API</h4>

<ol>
  <li>org.apache.hadoop.fs.FSDataInputStream：文件输入流，用于读Hadoop文件</li>
  <li>org.apache.hadoop.fs.FSDataOutputStream:文件输出流，用于写Hadoop文件</li>
  <li>org.apache.hadoop.fs.Path：用于表示hadoop文件系统中一个文件或者目录的路径</li>
</ol>

<hr />

<h3 id="12-hadoop的特性">12 Hadoop的特性</h3>

<h4 id="121-简答题的写法写5个不需要解释">12.1 简答题的写法（写5个，不需要解释）：</h4>

<ol>
  <li>高可靠性</li>
  <li>高效性</li>
  <li>高可扩展性</li>
  <li>高容错性</li>
  <li>成本低</li>
  <li>运行的在linux系统上</li>
  <li>支持各种编程语言</li>
</ol>

<h4 id="122-填空题的写法挑两个即可">12.2 填空题的写法（挑两个即可）：</h4>

<ol>
  <li>高可靠性</li>
  <li>高效性</li>
  <li>高可扩展性</li>
  <li>高容错性</li>
  <li>成本低</li>
  <li>运行的在linux系统上</li>
  <li>支持各种编程语言</li>
</ol>

<hr />

<h2 id="综合应用50分">综合应用（50分）</h2>

<h3 id="13-hive">13 Hive</h3>

<p>  大致题面：br</p>

<p>  给你一段数据（两种数据）：</p>

<p>  第一种：100 \t zhansan \t 18<br />
  第二种：100，zhansan，18</p>

<h4 id="131-使用hql语言创建一个数据库并指定路径">13.1 使用HQL语言创建一个数据库,并指定路径</h4>

<p>  create database database_name location ‘path’;</p>

<h4 id="132-在指定的数据库中创建表">13.2 在指定的数据库中创建表</h4>

<p>  use 指定的数据库;<br />
  如果是第一种数据则写：<br />
  create table table_name(hight int, name string,age int) ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘\t’</p>

<p>  如果是第二种数据则写：<br />
  create table table_name(hight int, name string,age int) ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘,’</p>

<h4 id="133-装载数据">13.3 装载数据</h4>

<p>  load data [local] inpath &lt; path路径&gt; into table <这里写刚才创建的数据表名></这里写刚才创建的数据表名></p>

<blockquote>
  <p>这里local表示在本地文件中获取，即如果在本地才需要加上</p>
</blockquote>

<h4 id="134-删除非空数据库">13.4 删除（非空）数据库</h4>

<p>  drop database <数据库名称> cascade</数据库名称></p>

<hr />

<h3 id="14-hbase">14 Hbase</h3>
<h4 id="141-设计逻辑结构">14.1 设计逻辑结构</h4>
<p>  题面：给你一个json串，设计一个逻辑结构</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/bigdata/1.png" alt="1.png" />
    </div>
    
</div>

<p>   答</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/bigdata/2.png" alt="2.png" />
    </div>
    
</div>

<h5 id="142-如何确定一个单元格">14.2 如何确定一个单元格？</h5>

<p>  以下面这个为例。</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/bigdata/3.png" alt="3.png" />
    </div>
    
</div>

<p>   现在以确定一个姓名为LiuJun的人为例：<br />
<strong>行键</strong>“201505002”，<strong>列族</strong>“info”<strong>限定符</strong>“email”和<strong>时间戳</strong>“1230016521”这四个坐标值确定的单元格[“201505002”,”Info”,”email”,”1230016521”]</p>

<h5 id="1422问法二我们的单元格是通过坐标来决定的这四维坐标分别是什么">14.2.2问法二：我们的单元格是通过坐标来决定的，这四维坐标分别是什么？</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="err">“</span><span class="n">行键</span><span class="err">”</span><span class="p">,</span><span class="err">”</span><span class="n">列族</span><span class="err">”</span><span class="p">,</span><span class="err">”</span><span class="n">列限定符</span><span class="err">”</span><span class="p">,</span><span class="err">”</span><span class="n">时间戳</span><span class="err">”</span><span class="p">]</span>
</code></pre></div></div>

<h4 id="143-创建表">14.3 创建表</h4>

<p>以第一题的表格为例：</p>

<pre><code class="language-SQL">create 'myTable', {NAME =&gt; 'personal_info'}, {NAME =&gt; 'office_info'}
</code></pre>
<h4 id="144-插入数据">14.4 插入数据</h4>

<p>  可以使用 put 命令向 HBase 表格中的特定单元格添加数据。以下是向名为 myTable 的表格中，行键为 row1，列族为 cf1，列名为 column1 的单元格添加数据的示例：</p>

<pre><code class="language-SQL">put 'myTable', 'row1', 'cf1:column1', 'value1'
</code></pre>

<p>  其中，myTable 是表格的名称，row1 是行键，cf1 是列族名称，column1 是列名。要将值 value1 添加到该单元格，请将其作为最后一个参数传递给 put 命令。</p>

<hr />

<h3 id="15-mapreduce">15 mapreduce</h3>

<h4 id="151mapreduce的编程规范">15.1MapReduce的编程规范</h4>

<p>用户编写的程序分成三个部分：</p>

<p><strong>1：Mapper</strong></p>
<ol>
  <li>用户自定义的Mapper要继承自己的父类</li>
  <li>Mapper的输入数据是KV对的形式（KV类型可自己定义）</li>
  <li>Mapper中的业务逻辑写在map()方法中</li>
  <li>Mapper的输出数据是KV对的形式（KV类型可自定义）</li>
</ol>

<p><strong>2：Reducer</strong></p>
<ol>
  <li>用户自定义的Reducer要继承自己的父类</li>
  <li>Reducer的输入数据类型对应Mapper输出数据类型</li>
  <li>Reducer中的业务逻辑写在reduce()方法中</li>
  <li>ReduceTask进程对每一组相同K的&lt; k,v&gt;组调用一次reduce()方法</li>
</ol>

<p><strong>3：Driver</strong><br />
相当于Yarn集群的客户端，用于提交我们整个程序到YARN集群，提交的是封装了MapReduce程序相关运行参数的job对象。</p>

<h4 id="152自定义数据类型">15.2自定义数据类型</h4>

<ol>
  <li>实现Writable接口</li>
  <li>空参构造</li>
  <li>重写序列化方法</li>
  <li>重写反序列化方法</li>
  <li>如果需要把结果显示在文件中，则需要重写toString()</li>
  <li>如果需要将自定义的bean放在key中传输，则要实现Comparable接口</li>
</ol>

<h4 id="153代码实现">15.3代码实现</h4>

<h5 id="第一套卷子考点map逻辑实现">第一套卷子考点：map逻辑实现</h5>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/bigdata/4.png" alt="4.png" />
    </div>
    
</div>

<h5 id="1532第二套卷子考点driver逻辑实现">15.3.2第二套卷子考点：Driver逻辑实现</h5>

<p>  7点全要考</p>

<div class="row">
    
    <div style="flex: 100.0%">
        <img class="single" src="/assets/img/blog-img/bigdata/5.png" alt="5.png" />
    </div>
    
</div>]]></content><author><name>Ranok</name></author><category term="big data" /><category term="java" /><category term="期末考试" /><summary type="html"><![CDATA[  “大数据技术原理与应用”是一门介绍大数据技术的课程。通过学习这门课程，学生可以深入了解大数据技术的原理和应用，并学会如何使用各种工具和技术来处理和管理大数据。此外，该课程还涵盖了大数据架构、设计和性能优化等方面的内容，这些知识对于开展大规模数据处理和分析项目非常重要。因此，“大数据技术原理与应用”对于计算机科学和数据科学领域的学生和从业人员，以及对大数据感兴趣的其他人士都有很大的意义。]]></summary></entry><entry><title type="html">xcpc模板积累</title><link href="http://localhost:4000/algorithm" rel="alternate" type="text/html" title="xcpc模板积累" /><published>2023-05-04T00:00:00+08:00</published><updated>2023-05-04T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-algorithm</id><content type="html" xml:base="http://localhost:4000/algorithm"><![CDATA[<p>  这是一个竞赛算法模板博客，用于应对xcpc等算法竞赛。此模板不一定是符合大众的模板，我会带有自己的风格。模板我会不断地更新，内容仅供参考。</p>

<hr />
<h1 id="目录">目录</h1>

<ul>
  <li><a href="#目录">目录</a></li>
  <li><a href="#算法模板积累">算法模板积累</a>
    <ul>
      <li><a href="#图论">图论</a>
        <ul>
          <li><a href="#单源最短路">单源最短路</a>
            <ul>
              <li><a href="#dijiestal">dijiestal</a></li>
              <li><a href="#spfa">SPFA</a></li>
            </ul>
          </li>
          <li><a href="#多源最短路">多源最短路</a>
            <ul>
              <li><a href="#floyd">Floyd</a></li>
            </ul>
          </li>
          <li><a href="#最小生成树">最小生成树</a>
            <ul>
              <li><a href="#prim">prim</a></li>
              <li><a href="#kruskar">Kruskar</a></li>
            </ul>
          </li>
          <li><a href="#spfa负环判断">spfa负环判断</a></li>
          <li><a href="#差分约束">差分约束</a></li>
          <li><a href="#最近公共祖先lca">最近公共祖先lca</a></li>
          <li><a href="#有向图的强连通分量">有向图的强连通分量</a></li>
          <li><a href="#无向图的强连通分量">无向图的强连通分量</a>
            <ul>
              <li><a href="#e-dcc缩点">e-dcc缩点</a></li>
              <li><a href="#v-dcc缩边">v-dcc缩边</a></li>
            </ul>
          </li>
          <li><a href="#二分图">二分图</a>
            <ul>
              <li><a href="#染色法判断二分图是否合理">染色法判断二分图是否合理</a></li>
              <li><a href="#匈牙利算法-解-二分图的最大匹配数">匈牙利算法 解 二分图的最大匹配数</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#dp">dp</a>
        <ul>
          <li><a href="#背包问题">背包问题</a>
            <ul>
              <li><a href="#完全背包">完全背包</a></li>
              <li><a href="#多重背包的二进制优化">多重背包的二进制优化</a></li>
            </ul>
          </li>
          <li><a href="#数位dp">数位dp</a></li>
        </ul>
      </li>
      <li><a href="#数据结构">数据结构</a>
        <ul>
          <li><a href="#树状数组">树状数组</a></li>
          <li><a href="#线段树">线段树</a></li>
        </ul>
      </li>
      <li><a href="#数学">数学</a>
        <ul>
          <li><a href="#pow">pow</a></li>
          <li><a href="#矩阵快速幂">矩阵快速幂</a></li>
          <li><a href="#逆元计算">逆元计算</a></li>
          <li><a href="#欧拉筛">欧拉筛</a></li>
          <li><a href="#博弈论">博弈论</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />
<h1 id="算法模板积累">算法模板积累</h1>

<hr />

<h2 id="图论">图论</h2>

<hr />

<h3 id="单源最短路">单源最短路</h3>

<hr />

<h4 id="dijiestal">dijiestal</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">head</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">edge</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">Next</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">val</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">tt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">,</span><span class="kt">int</span> <span class="n">z</span><span class="p">){</span>
    <span class="n">edge</span><span class="p">[</span><span class="o">++</span><span class="n">tt</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
    <span class="n">val</span><span class="p">[</span><span class="n">tt</span><span class="p">]</span><span class="o">=</span><span class="n">z</span><span class="p">;</span>
    <span class="n">Next</span><span class="p">[</span><span class="n">tt</span><span class="p">]</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
    <span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">tt</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">d</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>

<span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">d</span><span class="p">;</span>
    <span class="n">node</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="n">i</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">d</span><span class="p">(</span><span class="n">d</span><span class="p">){}</span>
    <span class="kt">bool</span> <span class="k">friend</span> <span class="k">operator</span><span class="o">&lt;</span><span class="p">(</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">){</span>
        <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">d</span><span class="o">&gt;</span><span class="n">b</span><span class="p">.</span><span class="n">d</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">dijiestal</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">){</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mh">0x3f</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">d</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>

    <span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">node</span><span class="o">&gt;</span><span class="n">q</span><span class="p">;</span>
    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">node</span><span class="p">(</span><span class="n">u</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
    
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="n">node</span> <span class="n">e</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">();</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">e</span><span class="p">.</span><span class="n">i</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
        <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">y_val</span><span class="o">=</span><span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">y_val</span><span class="p">){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">y_val</span><span class="p">;</span>
                <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">node</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]));</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<hr />
<h4 id="spfa">SPFA</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">val</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
    <span class="n">node</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="kt">int</span> <span class="n">val</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="n">val</span><span class="p">(</span><span class="n">val</span><span class="p">),</span><span class="n">y</span><span class="p">(</span><span class="n">y</span><span class="p">){}</span>
<span class="p">};</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="n">node</span><span class="o">&gt;</span><span class="n">a</span><span class="p">[</span><span class="n">M</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">d</span><span class="p">[</span><span class="n">M</span><span class="p">],</span><span class="n">b</span><span class="p">[</span><span class="n">M</span><span class="p">];</span>   <span class="c1">// b[i]记录在牧场i处有多少只奶牛</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">c</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">spfa</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">){</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mh">0x3f</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">d</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q</span><span class="p">;</span>
    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">u</span><span class="p">);</span>
    <span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">M</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        
        <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
        
        <span class="k">for</span><span class="p">(</span><span class="n">node</span> <span class="o">&amp;</span><span class="n">e</span><span class="o">:</span><span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">]){</span>
            <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">e</span><span class="p">.</span><span class="n">y</span><span class="p">,</span><span class="n">val</span><span class="o">=</span><span class="n">e</span><span class="p">.</span><span class="n">val</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">val</span><span class="p">){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">val</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
                    <span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
                    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">p</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">MAX</span><span class="p">)</span> <span class="k">return</span> <span class="n">MAX</span><span class="p">;</span>
            <span class="n">res</span><span class="o">+=</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h3 id="多源最短路">多源最短路</h3>

<hr />

<h4 id="floyd">Floyd</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">memeset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mh">0x3f</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">x</span><span class="o">&gt;&gt;</span><span class="n">y</span><span class="o">&gt;&gt;</span><span class="n">z</span><span class="p">;</span>
    <span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">],</span><span class="n">z</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">],</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span><span class="n">d</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h3 id="最小生成树">最小生成树</h3>
<hr />

<h4 id="prim">prim</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">d</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">n</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">res</span><span class="p">;</span>    <span class="c1">// 最小生成树的总路程长度</span>
<span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="n">N</span><span class="p">][</span><span class="n">N</span><span class="p">];</span>
<span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">d</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="k">friend</span> <span class="k">operator</span><span class="o">&lt;</span><span class="p">(</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">){</span>
        <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">d</span><span class="o">&gt;</span><span class="n">b</span><span class="p">.</span><span class="n">d</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">prim</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="o">=</span><span class="mi">1</span><span class="p">){</span>
    <span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>

    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">node</span><span class="o">&gt;</span><span class="n">q</span><span class="p">;</span>
    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">u</span><span class="p">,</span><span class="mi">0</span><span class="p">});</span>

    <span class="n">memset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mh">0x3f</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">d</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="n">node</span> <span class="n">e</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">();</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">e</span><span class="p">.</span><span class="n">i</span><span class="p">;</span>

        <span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
        <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
        <span class="n">res</span><span class="o">+=</span><span class="n">e</span><span class="p">.</span><span class="n">d</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">y</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">y</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;</span><span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">];</span>
                <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">({</span><span class="n">y</span><span class="p">,</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]});</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>
<hr />
<h4 id="kruskar">Kruskar</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">edge</span><span class="p">[</span><span class="n">M</span><span class="p">],</span><span class="n">head</span><span class="p">[</span><span class="n">M</span><span class="p">],</span><span class="n">Next</span><span class="p">[</span><span class="n">M</span><span class="p">],</span><span class="n">val</span><span class="p">[</span><span class="n">M</span><span class="p">],</span><span class="n">top</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">d</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>

<span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">Hash</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
<span class="kt">int</span> <span class="n">get</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
    <span class="k">return</span> <span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">==</span><span class="n">x</span><span class="o">?</span><span class="n">x</span><span class="o">:</span><span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">get</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">mange</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
    <span class="n">x</span><span class="o">=</span><span class="n">get</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
    <span class="n">y</span><span class="o">=</span><span class="n">get</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">!=</span><span class="n">y</span><span class="p">){</span>
        <span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
        <span class="n">Hash</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">,</span><span class="kt">int</span> <span class="n">z</span><span class="p">){</span>
    <span class="n">edge</span><span class="p">[</span><span class="o">++</span><span class="n">top</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
    <span class="n">val</span><span class="p">[</span><span class="n">top</span><span class="p">]</span><span class="o">=</span><span class="n">z</span><span class="p">;</span>
    <span class="n">Next</span><span class="p">[</span><span class="n">top</span><span class="p">]</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
    <span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">top</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">d</span><span class="p">;</span>
    <span class="n">node</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="n">i</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">d</span><span class="p">(</span><span class="n">d</span><span class="p">){}</span>
    <span class="k">friend</span> <span class="kt">bool</span> <span class="k">operator</span><span class="o">&lt;</span><span class="p">(</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="k">const</span> <span class="n">node</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">){</span>
        <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">d</span><span class="o">&gt;</span><span class="n">b</span><span class="p">.</span><span class="n">d</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">pirm</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">){</span>
    <span class="kt">bool</span> <span class="n">Hash</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mh">0x3f</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">node</span><span class="o">&gt;</span><span class="n">q</span><span class="p">;</span>
    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">node</span><span class="p">(</span><span class="n">u</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
    <span class="n">d</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">i</span><span class="p">;</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Hash</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
        <span class="n">Hash</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
        <span class="n">sum</span><span class="o">-=</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">z</span><span class="o">=</span><span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">Hash</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="n">z</span><span class="o">&lt;</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">z</span><span class="p">;</span>
                <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">node</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]));</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="spfa负环判断">spfa负环判断</h3>

<p>输入的第一行是两个整数 N,K。
接下来 K 行，表示分配糖果时需要满足的关系，每行 3 个数字 X,A,B。</p>

<ol>
  <li>如果 X=1．表示第 A 个小朋友分到的糖果必须和第 B个小朋友分到的糖果一样多。</li>
  <li>如果 X=2，表示第 A 个小朋友分到的糖果必须少于第 B个小朋友分到的糖果。</li>
  <li>如果 X=3，表示第 A 个小朋友分到的糖果必须不少于第 B个小朋友分到的糖果。</li>
  <li>如果 X=4，表示第 A 个小朋友分到的糖果必须多于第 B个小朋友分到的糖果。</li>
  <li>如果 X=5，表示第 A 个小朋友分到的糖果必须不多于第 B 个小朋友分到的糖果。</li>
</ol>

<p>小朋友编号从1到 N。</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="nf">spfa</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="n">d</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">cnt</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
    <span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="n">q</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">INF</span><span class="p">;</span>
        <span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">()){</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
        <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">ver</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">z</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">z</span><span class="p">){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">z</span><span class="p">;</span>
                <span class="n">cnt</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;=</span><span class="n">n</span><span class="p">)</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
                    <span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
                    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
<hr />
<h3 id="差分约束">差分约束</h3>
<p>实质上也是判断负环</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;cstring&gt;</span><span class="cp">
#include</span><span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">N</span><span class="o">=</span><span class="mf">1e5</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">K</span><span class="o">=</span><span class="mf">3e5</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">head</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">Next</span><span class="p">[</span><span class="n">K</span><span class="p">],</span><span class="n">edge</span><span class="p">[</span><span class="n">K</span><span class="p">],</span><span class="n">ver</span><span class="p">[</span><span class="n">K</span><span class="p">],</span><span class="n">tot</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">,</span><span class="kt">int</span> <span class="n">z</span><span class="p">){</span>
    <span class="n">edge</span><span class="p">[</span><span class="o">++</span><span class="n">tot</span><span class="p">]</span><span class="o">=</span><span class="n">z</span><span class="p">;</span>
    <span class="n">ver</span><span class="p">[</span><span class="n">tot</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
    <span class="n">Next</span><span class="p">[</span><span class="n">tot</span><span class="p">]</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
    <span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">tot</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">ll</span> <span class="n">d</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
<span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">stc</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">},</span><span class="n">top</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">k</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">spfa</span><span class="p">(){</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">stc</span><span class="p">[</span><span class="n">top</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">top</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">stc</span><span class="p">[</span><span class="o">--</span><span class="n">top</span><span class="p">];</span>
        <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">ver</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">z</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&lt;</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">z</span><span class="p">){</span>
                <span class="n">d</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="n">z</span><span class="p">;</span>
                <span class="n">cnt</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&gt;=</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
                    <span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
                    <span class="n">stc</span><span class="p">[</span><span class="n">top</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">t</span><span class="p">;</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="n">k</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">k</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">t</span><span class="p">,</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span><span class="o">&amp;</span><span class="n">y</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
            <span class="n">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
            <span class="n">add</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span>
            <span class="n">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">==</span><span class="mi">3</span><span class="p">){</span>
            <span class="n">add</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span>
            <span class="n">add</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="n">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">add</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">spfa</span><span class="p">()){</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">"-1"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span><span class="p">{</span>
        <span class="n">ll</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="n">sum</span><span class="o">+=</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"%lld</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">sum</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
<hr />
<h3 id="最近公共祖先lca">最近公共祖先lca</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mf">4e4</span> <span class="o">+</span> <span class="mi">5</span><span class="p">,</span> <span class="n">M</span> <span class="o">=</span> <span class="n">N</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">struct</span> <span class="nc">E</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="n">next</span><span class="p">;</span>
<span class="p">}</span> <span class="n">e</span><span class="p">[</span><span class="n">M</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">root</span><span class="p">,</span> <span class="n">u</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="n">dep</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="n">N</span><span class="p">][</span><span class="mi">17</span><span class="p">],</span> <span class="n">h</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="kt">void</span> <span class="n">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">e</span><span class="p">[</span><span class="o">++</span><span class="n">len</span><span class="p">].</span><span class="n">v</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span> <span class="n">e</span><span class="p">[</span><span class="n">len</span><span class="p">].</span><span class="n">next</span> <span class="o">=</span> <span class="n">h</span><span class="p">[</span><span class="n">u</span><span class="p">];</span> <span class="n">h</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">=</span> <span class="n">len</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">bfs</span><span class="p">()</span> <span class="p">{</span>        <span class="c1">// 初始化</span>
    <span class="kt">int</span> <span class="n">q</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">tt</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">hh</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">q</span><span class="p">[</span><span class="n">tt</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">root</span><span class="p">;</span>   <span class="c1">// 进入一个根节点</span>
    <span class="n">dep</span><span class="p">[</span><span class="n">root</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">dep</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">tt</span><span class="o">!=</span><span class="n">hh</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">u</span> <span class="o">=</span> <span class="n">q</span><span class="p">[</span><span class="n">hh</span><span class="o">++</span><span class="p">];</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">h</span><span class="p">[</span><span class="n">u</span><span class="p">];</span> <span class="n">j</span><span class="p">;</span> <span class="n">j</span> <span class="o">=</span> <span class="n">e</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">next</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">v</span> <span class="o">=</span> <span class="n">e</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">v</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
            <span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="o">=</span> <span class="n">dep</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">q</span><span class="p">[</span><span class="n">tt</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">v</span><span class="p">;</span>
            <span class="n">f</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">u</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">t</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span> <span class="n">f</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">f</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]][</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="n">lca</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 返回x，y的最近公共祖先</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="n">y</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">dep</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">-</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">x</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">t</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">i</span><span class="p">]]</span> <span class="o">&gt;=</span> <span class="n">dep</span><span class="p">[</span><span class="n">y</span><span class="p">])</span> <span class="n">x</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="n">y</span><span class="p">)</span> <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">t</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">f</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">i</span><span class="p">])</span> <span class="n">x</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">y</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">f</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="有向图的强连通分量">有向图的强连通分量</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">tarjan</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
    <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=++</span><span class="n">ti</span><span class="p">;</span>
    <span class="n">dic</span><span class="p">[</span><span class="o">++</span><span class="n">top</span><span class="p">]</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>
    <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="o">~</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
        <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
            <span class="n">tarjan</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
            <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">low</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
        <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">])</span> <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">==</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]){</span>     <span class="c1">// 联通块缩点</span>
        <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>
        <span class="n">ecc_cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="k">do</span><span class="p">{</span>
            <span class="n">y</span><span class="o">=</span><span class="n">dic</span><span class="p">[</span><span class="n">top</span><span class="o">--</span><span class="p">];</span>
            <span class="n">id</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">ecc_cnt</span><span class="p">;</span>
            <span class="n">ecc</span><span class="p">[</span><span class="n">ecc_cnt</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
            <span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">x</span><span class="o">!=</span><span class="n">y</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="无向图的强连通分量">无向图的强连通分量</h3>
<h4 id="e-dcc缩点">e-dcc缩点</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">dcc_cnt</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">dfn</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">low</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">ti</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">dic</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">top</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>   <span class="c1">// 用于记录边</span>

<span class="kt">void</span> <span class="nf">tarjan</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">pre</span><span class="p">){</span>  <span class="c1">// 用于计算桥的算法,pre是边不是点</span>
    <span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=++</span><span class="n">ti</span><span class="p">;</span>
    <span class="n">dic</span><span class="p">[</span><span class="n">top</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="o">~</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>    <span class="c1">// 注意这里的i表示head要初始化为-1</span>
        <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>    <span class="c1">// 这个点没走过</span>
            <span class="n">tarjan</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
            <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">low</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">&lt;</span><span class="n">low</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>  <span class="c1">//这里有桥</span>
                <span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="o">^</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">!=</span><span class="p">(</span><span class="n">pre</span><span class="o">^</span><span class="mi">1</span><span class="p">)){</span>   <span class="c1">// 这个点走过了，但不是父节点</span>
            <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">==</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]){</span> <span class="c1">// 说明这个是一个连通域的根结点</span>
        <span class="n">id</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=++</span><span class="n">sign</span><span class="p">;</span>   <span class="c1">// 这里将联通域中所有的点压缩为一个点</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">dic</span><span class="p">[</span><span class="o">--</span><span class="n">top</span><span class="p">];</span><span class="n">y</span><span class="o">!=</span><span class="n">x</span><span class="p">;</span><span class="n">y</span><span class="o">=</span><span class="n">dic</span><span class="p">[</span><span class="o">--</span><span class="n">top</span><span class="p">])</span> <span class="n">id</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">sign</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />

<h4 id="v-dcc缩边">v-dcc缩边</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">tarjan</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
    <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=++</span><span class="n">ti</span><span class="p">;</span>
    <span class="n">dic</span><span class="p">[</span><span class="o">++</span><span class="n">top</span><span class="p">]</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">==</span><span class="n">root</span><span class="o">&amp;&amp;</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">==-</span><span class="mi">1</span><span class="p">){</span>   <span class="c1">// 孤立点</span>
        <span class="n">dcc_cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="n">dcc</span><span class="p">[</span><span class="n">dcc_cnt</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">sign</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="o">~</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>    <span class="c1">// 不是孤立点</span>
        <span class="c1">// 注意这里的i表示head要初始化为-1</span>
        <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
            <span class="n">tarjan</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
            <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">low</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">dfn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">&lt;=</span><span class="n">low</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>
                <span class="n">sign</span><span class="o">++</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">sign</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="n">x</span><span class="o">!=</span><span class="n">root</span><span class="p">)</span> <span class="n">mp</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
                <span class="n">dcc_cnt</span><span class="o">++</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">z</span><span class="p">;</span>
                <span class="k">do</span><span class="p">{</span>
                    <span class="n">z</span><span class="o">=</span><span class="n">dic</span><span class="p">[</span><span class="n">top</span><span class="o">--</span><span class="p">];</span>
                    <span class="n">dcc</span><span class="p">[</span><span class="n">dcc_cnt</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">z</span><span class="p">);</span>
                <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">z</span><span class="o">!=</span><span class="n">y</span><span class="p">);</span>
                <span class="n">dcc</span><span class="p">[</span><span class="n">dcc_cnt</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">low</span><span class="p">[</span><span class="n">x</span><span class="p">],</span><span class="n">dfn</span><span class="p">[</span><span class="n">y</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="二分图">二分图</h3>
<hr />
<h4 id="染色法判断二分图是否合理">染色法判断二分图是否合理</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">c</span><span class="p">){</span>  <span class="c1">// 结点，颜色，阈值</span>
    <span class="n">color</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
        <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">val_y</span><span class="o">=</span><span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">color</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">==</span><span class="n">color</span><span class="p">[</span><span class="n">x</span><span class="p">])</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">color</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="n">dfs</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="mi">3</span><span class="o">-</span><span class="n">c</span><span class="p">,</span><span class="n">mid</span><span class="p">))</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">bool</span> <span class="n">check</span><span class="p">(){</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">color</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">color</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">color</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>     <span class="c1">// 出现矛盾就返回</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h4 id="匈牙利算法-解-二分图的最大匹配数">匈牙利算法 解 二分图的最大匹配数</h4>
<p>二分图的：
最小覆盖点的数量可以用匈牙利算法求解
最小覆盖点的数量 = 最大匹配数
最大独立集 = 总点数 - 最小覆盖点的数量</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">M</span><span class="p">];</span>  <span class="c1">// 表示i是否被访问过</span>
<span class="kt">int</span> <span class="n">match</span><span class="p">[</span><span class="n">M</span><span class="p">];</span>   <span class="c1">// 表示i的配对对象是match[i],0表示还没有配对上</span>
<span class="kt">bool</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span> <span class="c1">// 递归的寻找可以与x配对的点</span>
        <span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">ver</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]){</span>  <span class="c1">// 这个点没有访问过</span>
            <span class="n">mp</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> <span class="c1">// 标记一下表示访问过了</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">match</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">||</span><span class="n">dfs</span><span class="p">(</span><span class="n">match</span><span class="p">[</span><span class="n">y</span><span class="p">])){</span>   <span class="c1">// 找到一个没有配对过的点，或者一个可以让出y的方案</span>
                <span class="n">match</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">x</span><span class="p">;</span> <span class="c1">// 回溯的标注与其配对的点</span>
                <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>   <span class="c1">// 没找到可以增广的点</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="o">*</span>
    <span class="o">*</span>
    <span class="o">*</span>
    <span class="kt">int</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>  <span class="c1">// 表示二分图的最大匹配数</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>  <span class="c1">// 注意！！这里枚举的是二分图的左部（右部也可以）</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">mp</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">mp</span><span class="p">);</span>  <span class="c1">// 这一步不能少</span>
        <span class="k">if</span><span class="p">(</span><span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">))</span> 
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="dp">dp</h2>
<h3 id="背包问题">背包问题</h3>
<h4 id="完全背包">完全背包</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span> <span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">m</span> <span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">],</span><span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">+</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h4 id="多重背包的二进制优化">多重背包的二进制优化</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">while</span><span class="p">(</span><span class="n">n</span><span class="o">--</span><span class="p">){</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">v</span><span class="p">,</span><span class="o">&amp;</span><span class="n">w</span><span class="p">,</span><span class="o">&amp;</span><span class="n">s</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">s</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;&lt;=</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">s</span><span class="o">-=</span><span class="n">k</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">&gt;=</span><span class="n">v</span><span class="o">*</span><span class="n">k</span><span class="p">;</span><span class="n">i</span><span class="o">--</span><span class="p">)</span>
        <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">k</span><span class="o">*</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="n">k</span><span class="o">*</span><span class="n">w</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">&gt;=</span><span class="n">s</span><span class="o">*</span><span class="n">v</span><span class="p">;</span><span class="n">i</span><span class="o">--</span><span class="p">)</span>
        <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">s</span><span class="o">*</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="n">w</span><span class="o">*</span><span class="n">s</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>
<h3 id="数位dp">数位dp</h3>
<p>这个板子不具有一般性，请结合题目来理解：</p>

<p>如果一个正整数每一个数位都是 互不相同 的，我们称它是 特殊整数 。</p>

<p>给你一个正整数 \(n\) ，请你返回区间 \([1, n]\) 之间特殊整数的数目。</p>

<p>示例：<br />
输入:</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="mi">20</span>
</code></pre></div></div>

<p>输出</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="mi">19</span>
</code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="mi">15</span><span class="p">][</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">10</span><span class="p">];</span>   <span class="c1">// 前面出现了数字的合法情况下（当前数字允许是0），这里存储的是一般情况下（不受限制）的情况</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
<span class="n">string</span> <span class="n">s</span><span class="p">;</span>   <span class="c1">// 字符串表示的数字</span>

<span class="c1">// is_limt表示是否受到了前面数字的约束</span>
<span class="c1">// is_num第i个数前面是否填了数字</span>
<span class="kt">int</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="kt">int</span> <span class="n">mask</span><span class="p">,</span><span class="kt">bool</span> <span class="n">is_limt</span><span class="p">,</span><span class="kt">bool</span> <span class="n">is_num</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="n">n</span><span class="p">)</span> <span class="k">return</span> <span class="n">is_num</span><span class="p">;</span> <span class="c1">// 合法返回1</span>
        
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is_limt</span><span class="o">&amp;&amp;</span><span class="n">is_num</span><span class="o">&amp;&amp;</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">mask</span><span class="p">]</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">mask</span><span class="p">];</span>
        
    <span class="kt">int</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is_num</span><span class="p">)</span> <span class="n">res</span><span class="o">=</span><span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">mask</span><span class="p">,</span><span class="nb">false</span><span class="p">,</span><span class="nb">false</span><span class="p">);</span>  <span class="c1">// 前面全是0的状态是可以传导的，且前面是0那就对后面的数字不存在约束</span>

    <span class="c1">// 如果受到限制，那么就必须要设置最大值为s[i]，否则最大值可以到9</span>
    <span class="kt">int</span> <span class="n">up</span><span class="o">=</span><span class="n">is_limt</span><span class="o">?</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">'0'</span><span class="o">:</span><span class="mi">9</span><span class="p">;</span>

    <span class="c1">// is_sum==false表示前面没有填写数字，那么这一位需要从1开始，否则可以从0开始</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="n">is_num</span><span class="p">;</span><span class="n">d</span><span class="o">&lt;=</span><span class="n">up</span><span class="p">;</span><span class="n">d</span><span class="o">++</span><span class="p">)</span>   <span class="c1">// 遍历选择的数字</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">mask</span> <span class="o">&gt;&gt;</span> <span class="n">d</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">))</span>    <span class="c1">// 这个数字没有填写过</span>
            <span class="n">res</span><span class="o">+=</span><span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">mask</span><span class="o">|</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">d</span><span class="p">),</span><span class="n">d</span><span class="o">==</span><span class="n">up</span><span class="o">&amp;&amp;</span><span class="n">is_limt</span><span class="p">,</span><span class="nb">true</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is_limt</span><span class="o">&amp;&amp;</span><span class="n">is_num</span><span class="p">)</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">mask</span><span class="p">]</span><span class="o">=</span><span class="n">res</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>

<span class="p">}</span>
</code></pre></div></div>
<hr />
<h2 id="数据结构">数据结构</h2>
<hr />
<h3 id="树状数组">树状数组</h3>
<p>点修改，区间查询</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">ll</span> <span class="n">d</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="n">i</span><span class="o">&amp;-</span><span class="n">i</span><span class="p">)</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="n">d</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">ll</span> <span class="n">ask</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">){</span>
    <span class="n">ll</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(;</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">-=</span><span class="n">i</span><span class="o">&amp;-</span><span class="n">i</span><span class="p">)</span> <span class="n">res</span><span class="o">+=</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<h3 id="线段树">线段树</h3>

<p>区间修改，区间查询</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="kt">int</span> <span class="n">N</span><span class="o">=</span><span class="mf">2e5</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>

<span class="k">struct</span> <span class="nc">node</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">;</span>
    <span class="n">ll</span> <span class="n">sum</span><span class="p">,</span><span class="n">add</span><span class="p">;</span>
    <span class="cp">#define l(p) tree[p].l
</span>    <span class="cp">#define r(p) tree[p].r
</span>    <span class="cp">#define add(p) tree[p].add
</span>    <span class="cp">#define sum(p) tree[p].sum
</span><span class="p">}</span><span class="n">tree</span><span class="p">[</span><span class="n">N</span><span class="o">*</span><span class="mi">4</span><span class="p">];</span>

<span class="kt">void</span> <span class="n">build</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
    <span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="n">r</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">==</span><span class="n">r</span><span class="p">){</span>
        <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="n">a</span><span class="p">[</span><span class="n">l</span><span class="p">];</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
    <span class="n">build</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">mid</span><span class="p">);</span>
    <span class="n">build</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
    <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">spead</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">)){</span>
        <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+=</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+=</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+=</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
        <span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+=</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
        <span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">change</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">,</span><span class="kt">int</span> <span class="n">d</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">&lt;=</span><span class="n">r</span><span class="p">){</span>
        <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">+=</span><span class="n">d</span><span class="o">*</span><span class="p">(</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">-</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">+=</span><span class="n">d</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">spead</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">+</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">mid</span><span class="p">)</span> <span class="n">change</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">mid</span><span class="o">&lt;</span><span class="n">r</span><span class="p">)</span> <span class="n">change</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
    <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">=</span><span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">ll</span> <span class="n">ask</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
    <span class="n">spead</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">&lt;=</span><span class="n">r</span><span class="p">)</span> <span class="k">return</span> <span class="n">sum</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">l</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="o">+</span><span class="n">r</span><span class="p">(</span><span class="n">p</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
    <span class="n">ll</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">mid</span><span class="p">)</span> <span class="n">res</span><span class="o">+=</span><span class="n">ask</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">mid</span><span class="o">&lt;</span><span class="n">r</span><span class="p">)</span> <span class="n">res</span><span class="o">+=</span><span class="n">ask</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>


</code></pre></div></div>
<hr />

<h2 id="数学">数学</h2>
<hr />
<h3 id="pow">pow</h3>
<hr />

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ll</span> <span class="nf">pow</span><span class="p">(</span><span class="n">ll</span> <span class="n">p</span><span class="p">,</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
    <span class="n">ll</span> <span class="n">res</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">n</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span> <span class="n">res</span><span class="o">*=</span><span class="n">p</span><span class="p">;</span>
        <span class="n">p</span><span class="o">*=</span><span class="n">p</span><span class="p">;</span>
        <span class="n">res</span><span class="o">%=</span><span class="n">mod</span><span class="p">;</span>
        <span class="n">p</span><span class="o">%=</span><span class="n">mod</span><span class="p">;</span>
        <span class="n">n</span><span class="o">&gt;&gt;=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="矩阵快速幂">矩阵快速幂</h3>

<p>斐波那契前 n 项<strong>和</strong></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span><span class="cpf">&lt;cstring&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">ll</span><span class="p">;</span>
<span class="n">ll</span> <span class="n">n</span><span class="p">,</span><span class="n">mod</span><span class="p">;</span>
<span class="n">ll</span> <span class="n">res</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">};</span>
<span class="n">ll</span> <span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
             <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">},</span>
             <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">}</span> <span class="p">};</span>

<span class="kt">void</span> <span class="n">mul</span><span class="p">(){</span>
    <span class="n">ll</span> <span class="n">c</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
            <span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">+</span><span class="n">res</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">a</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">])</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">memcpy</span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">c</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">mulself</span><span class="p">(){</span>
    <span class="n">ll</span> <span class="n">c</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
                <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">+</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">a</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">])</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
    <span class="n">memcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">a</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">mod</span><span class="p">;</span>
    <span class="n">n</span><span class="o">--</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="n">n</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span> <span class="n">mul</span><span class="p">();</span>
        <span class="n">mulself</span><span class="p">();</span>
        <span class="n">n</span><span class="o">&gt;&gt;=</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="逆元计算">逆元计算</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">exgcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">y</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="n">x</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="n">a</span><span class="p">;}</span>
    <span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="n">exgcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">z</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>
    <span class="n">x</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
    <span class="n">y</span><span class="o">=</span><span class="n">z</span><span class="o">-</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">*</span><span class="n">y</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">d</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<hr />
<h3 id="欧拉筛">欧拉筛</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">prime</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">m</span><span class="p">;</span> <span class="c1">// 存放素数</span>
<span class="kt">bool</span> <span class="n">mp</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>     <span class="c1">// 判断是否为素数</span>
<span class="kt">int</span> <span class="n">v</span><span class="p">[</span><span class="n">N</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>

<span class="kt">void</span> <span class="n">primes</span><span class="p">(){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">prime</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">,</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">,</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">m</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">prime</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">||</span><span class="n">prime</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;</span><span class="n">N</span><span class="o">/</span><span class="n">i</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">prime</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">=</span><span class="n">prime</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="博弈论">博弈论</h3>

<p>给定一个有 N</p>

<p>个节点的有向无环图，图中某些节点上有棋子，两名玩家交替移动棋子。</p>

<p>玩家每一步可将任意一颗棋子沿一条有向边移动到另一个点，无法移动者输掉游戏。</p>

<p>对于给定的图和棋子初始位置，双方都会采取最优的行动，询问先手必胜还是先手必败。</p>

<p>对于一个有向无环图来说，如果只有一个棋子那么那个棋子的位置的sg值为0则必败，否则必胜<br />
如果有多个棋子那么取这些棋子的sg的异或值，异或值为0则必败，否则必胜。</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">N</span><span class="o">=</span><span class="mf">1e5</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">head</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">edge</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">Next</span><span class="p">[</span><span class="n">N</span><span class="p">],</span><span class="n">tt</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">p</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="kt">void</span> <span class="nf">add</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
	<span class="n">edge</span><span class="p">[</span><span class="o">++</span><span class="n">tt</span><span class="p">]</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>
	<span class="n">Next</span><span class="p">[</span><span class="n">tt</span><span class="p">]</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
	<span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">tt</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="n">h</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>

<span class="kt">int</span> <span class="n">sg</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">h</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="n">h</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
	<span class="n">unordered_map</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">bool</span><span class="o">&gt;</span><span class="n">mp</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">x</span><span class="p">];</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">Next</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
		<span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="n">edge</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="n">mp</span><span class="p">[</span><span class="n">sg</span><span class="p">(</span><span class="n">y</span><span class="p">)]</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
			<span class="n">h</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
			<span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">h</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">,</span><span class="o">&amp;</span><span class="n">p</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span><span class="o">&amp;</span><span class="n">y</span><span class="p">);</span>
		<span class="n">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">memset</span><span class="p">(</span><span class="n">h</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span> <span class="n">h</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">p</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
		<span class="n">res</span><span class="o">^=</span><span class="n">sg</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>	<span class="c1">// 用于计算sj函数 </span>
	<span class="p">}</span>
	<span class="k">if</span><span class="p">(</span><span class="n">res</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">puts</span><span class="p">(</span><span class="s">"lose"</span><span class="p">);</span> 
	<span class="k">else</span> <span class="n">puts</span><span class="p">(</span><span class="s">"win"</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Ranok</name></author><category term="算法" /><summary type="html"><![CDATA[  这是一个竞赛算法模板博客，用于应对xcpc等算法竞赛。此模板不一定是符合大众的模板，我会带有自己的风格。模板我会不断地更新，内容仅供参考。]]></summary></entry><entry><title type="html">基于svm实现的屏幕翻译项目解析</title><link href="http://localhost:4000/tranlate" rel="alternate" type="text/html" title="基于svm实现的屏幕翻译项目解析" /><published>2023-02-19T00:00:00+08:00</published><updated>2023-02-19T00:00:00+08:00</updated><id>http://localhost:4000/wuhan-translate</id><content type="html" xml:base="http://localhost:4000/tranlate"><![CDATA[<p><a id="go_to_top"></a>
  不知不觉间，人工智能慢慢开始走进千家万户。无人驾驶、AI绘图、语音识别、AI聊天都是人工智能的领域。我作为一个智能的学生已经被迷得不行了，在这份热爱的支持下我完成了这份项目。虽然我的项目与当今智能技术无法比拟，但是其中运用到的机器学习模型（如<code class="language-plaintext highlighter-rouge">SVM</code>分类器）足以能够让我的项目归类到人工智能。</p>

<hr />
<h1 id="目录">目录</h1>
<ul>
  <li><a href="#目录">目录</a></li>
  <li><a href="#前言">前言</a></li>
  <li><a href="#项目总目标">项目总目标</a></li>
  <li><a href="#正文">正文</a>
    <ul>
      <li><a href="#数据收集与数据清洗">数据收集与数据清洗</a>
        <ul>
          <li><a href="#为什么要收集数据">为什么要收集数据？</a></li>
          <li><a href="#数据收集">数据收集</a></li>
          <li><a href="#数据规范化">数据规范化</a></li>
        </ul>
      </li>
      <li><a href="#建模与机器学习svm">建模与机器学习（SVM）</a>
        <ul>
          <li><a href="#对建模的理解与机器学习的理解">对建模的理解与机器学习的理解</a></li>
          <li><a href="#建模">建模</a>
            <ul>
              <li><a href="#1随机划分训练集与测试集">1.随机划分训练集与测试集</a></li>
              <li><a href="#2参数调优">2.参数调优</a></li>
              <li><a href="#3训练">3.训练</a></li>
              <li><a href="#4模型检验">4.模型检验</a></li>
              <li><a href="#5模型保存">5.模型保存</a></li>
            </ul>
          </li>
          <li><a href="#数据处理">数据处理</a></li>
        </ul>
      </li>
      <li><a href="#单词--句子的识别">单词 \&amp; 句子的识别</a>
        <ul>
          <li><a href="#q--a">Q \&amp; A</a></li>
          <li><a href="#findcontours轮廓获取函数说明">findContours轮廓获取函数说明</a>
            <ul>
              <li><a href="#函数说明">函数说明</a></li>
              <li><a href="#函数签名">函数签名</a></li>
              <li><a href="#代码演示">代码演示</a></li>
            </ul>
          </li>
          <li><a href="#首先从图片中分离出句子">首先从图片中分离出句子</a></li>
          <li><a href="#其次从句子中分离出单词">其次从句子中分离出单词</a></li>
          <li><a href="#最后从单词中分离出字母并识别">最后从单词中分离出字母并识别</a></li>
        </ul>
      </li>
      <li><a href="#翻译">翻译</a>
        <ul>
          <li><a href="#传统爬虫">传统爬虫</a></li>
          <li><a href="#selenium技术模块介绍">selenium技术模块介绍</a></li>
          <li><a href="#selenium与传统爬虫的对比">selenium与传统爬虫的对比</a>
            <ul>
              <li><a href="#传统爬虫爬百度翻译">传统爬虫爬百度翻译</a></li>
              <li><a href="#selenium爬百度翻译">selenium爬百度翻译</a></li>
            </ul>
          </li>
          <li><a href="#selenium效率优化">selenium效率优化</a>
            <ul>
              <li><a href="#1-使用显式等待">1. 使用显式等待</a></li>
              <li><a href="#2-无头浏览器">2. 无头浏览器</a></li>
              <li><a href="#3-多线程优化">3. 多线程优化</a></li>
            </ul>
          </li>
          <li><a href="#翻译实现">翻译实现</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#作者自己的一些话">作者自己的一些话</a></li>
</ul>

<hr />

<h1 id="前言">前言</h1>
<p>  此项目专用于204技术交流会使用，未经本人允许不得外传。为了更好地展示项目，所以在这里写下这篇博客。本博客面向新人，我尽可能的使用了最朴素的方式来表达我的项目技术流程以及算法思想，且文章中不会出现大量生僻难懂的术语，请放心食用。另外，此静态博客网基于<a href="http://jekyllrb.com/">Jekyll</a>框架搭建，但对<code class="language-plaintext highlighter-rouge">Jekyll</code>的讨论并不在此次技术交流之列中。如果你对<code class="language-plaintext highlighter-rouge">Jekyll</code>感兴趣，随时欢迎与我讨论❤️。</p>

<p>  本项目设计以及编码历时共7天，共计划分8个模块，项目大致可以划出以下几个技术分支：</p>
<ul>
  <li>基于opencv实现的数据清洗与预处理</li>
  <li>基于svm机器学习分类器识别字母</li>
  <li>基于selenium无头浏览器实现的翻译爬虫</li>
  <li>使用threading线程池优化</li>
</ul>

<hr />

<blockquote>
  <p>温馨提示：如果你觉得界面配色有些刺眼，你可以点击右上角的菜单，选择使用<strong>圆形</strong>按钮切换主题背景。</p>
</blockquote>

<h1 id="项目总目标">项目总目标</h1>

<p>  实现一个可以实时读取屏幕信息，并翻译图中英文的屏幕翻译器。</p>

<p>  效果展示如下图，左右分别为翻译前后的对比：</p>

<div class="row">
    
    <div style="flex: 33.333333333333336%">
        <img src="/assets/img/blog-img/translate/2.jpg" alt="2.jpg" />
    </div>
    
    <div style="flex: 33.333333333333336%">
        <img src="/assets/img/blog-img/translate/1.jpg" alt="1.jpg" />
    </div>
    
</div>

<p>  项目主要的技术点以及流程如下所示</p>

<div class="row">
    
    <div style="flex: 33.333333333333336%">
        <img class="single" src="/assets/img/blog-img/translate/9.png" alt="9.png" />
    </div>
    
</div>

<hr />
<h1 id="正文">正文</h1>

<hr />

<h2 id="数据收集与数据清洗">数据收集与数据清洗</h2>
<hr />

<h3 id="为什么要收集数据">为什么要收集数据？</h3>

<p>  要翻译屏幕中的英文，首先要做的应该是识别出屏幕中的英文。识别的工作是交由机器学习模型实现的，但是模型并不是一开始就拥有识别英文的能力。事实上你可以将<code class="language-plaintext highlighter-rouge">python</code>所提供机器学习模型视为空壳，只有通过不断的喂养其数据，主观的告诉模型什么是对的什么是错的，在不断的训练学习之后模型才有识别的能力。机器学习因此得名“机器学习”。</p>

<p>  什么？你问我为什么不直接去网上下载一个模型？<br />
  那肯定是<del>（没找到）</del>想要锻炼💪自己呀！</p>

<p>  一般的，一个模型的好坏主要最关键的因素是数据的优劣。数据越多越纯净就越容易训练出优秀的模型。因此数据整理的部分显的尤为重要。</p>

<hr />
<h3 id="数据收集">数据收集</h3>

<p>  模型需要识别的是屏幕中的英文，所以收集的数据也应该是印刷体的的字母图片。不过这类数据资源在网上很少能找得到，少数在<a href="https://www.php.cn/tool/git/413611.html">Gethub</a>和<a href="https://cloud.tencent.com/developer/news/68329">Kaggle</a>上找到的资源所训练出的模型效果都不尽人意。</p>

<p>  最终还是决定，自己动手创造数据。<br />
  首先准备好自制的52个大小写英文字母一份。</p>

<div class="row">
    
    <div style="flex: 33.333333333333336%">
        <img class="single" src="/assets/img/blog-img/translate/3.jpg" alt="3.jpg" />
    </div>
    
</div>

<p>  每个字母只有一张图片用以供应模型的训练肯定是不够用的，所以应该对数据进行扩充，保证至少每个字母对应能有20张匹配的图片。这里使用到的技术是图片的<strong>下采样</strong>以做到图片的扩充，简单的理解就是通过对一张图片采用随机的不同程度的模糊化处理从而到多张图片。</p>

<p>  其中对字母A的采样结果示意图如下：</p>

<div class="row">
    
    <div style="flex: 33.333333333333336%">
        <img class="single" src="/assets/img/blog-img/translate/4.jpg" alt="4.jpg" />
    </div>
    
</div>

<p>  你问我为什么不多造几个数据，而是使用下采样扩充？<br />
  <del>（肝不够多）</del>下采样得到的图片是对原有图片的衍生，同样拥有原图像的基本信息，用这样的数据进行训练不会影响模型的效果。</p>

<h3 id="数据规范化">数据规范化</h3>

<p>  图像数据需要最终供模型训练，而训练的接口是固定的，因此所有的数据应该有相同的规格。</p>

<p>  我的做法是将数据处理成 \(20*20\) 像素的黑白图片素材使用。</p>

<p>  也就是将一个普通的字母图片通过横向纵向的拉伸与压缩变成一个 \(20*20\) 标准的图片。显而易见的，这种做法很容易导致图片信息了流失。我在实践中也遇到了这个问题，其中影响最大的就是字母 \(il\) 等长宽比差距较大的字母，如果直接通过拉伸与放缩的手段让其规范化的话就会出现以下的结果（左边为原图，右边为处理后的图像）以至于影响到后面建模的效果:</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/5.jpg" alt="5.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/6.jpg" alt="6.jpg" />
    </div>
    
</div>

<p>  对此我的做法是显式地判断图片的长宽比，当长宽比超过4时，手动放缩，具体代码如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">resize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="p">):</span>
        <span class="s">"""
        图像需要原先就是灰度图像
        将图片调整到标准大小20*20
        :param img: 原图像
        :return:finish_img
        """</span>

        <span class="k">if</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>  <span class="c1"># 表示长宽比太大了，不适合做拉伸操作
</span>            <span class="c1">## 待补充，这里需要解决过度拉伸的问题，可能需要寻找填充的方法
</span>            <span class="c1"># 计算需要用于填充的图像的宽高
</span>            <span class="n">high</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">wide</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>

            <span class="n">grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">high</span><span class="p">,</span> <span class="n">wide</span><span class="p">))</span>  <span class="c1"># 计算用于填充的黑色图片
</span>
            <span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">grid</span><span class="p">,</span> <span class="n">img</span><span class="p">))</span>  <span class="c1"># 左右都做填充
</span>            <span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">img</span><span class="p">,</span> <span class="n">grid</span><span class="p">))</span>  <span class="c1"># 左右都做填充
</span>
            <span class="c1"># 最后将填充的图像重新转换为20*20的格式
</span>            <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>
            <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">debug</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">"这里做了一次对称填充"</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>
        <span class="c1"># 调整大小并返回
</span>        <span class="k">return</span> <span class="n">img</span>
</code></pre></div></div>
<hr />

<h2 id="建模与机器学习svm">建模与机器学习（SVM）</h2>

<h3 id="对建模的理解与机器学习的理解">对建模的理解与机器学习的理解</h3>
<p>  在数据规范化后我们得到了，噪音（杂质）相对较少的 \(20 * 20\)的图片信息，但是我们的\(SVM\)分类器模型（下面以“\(SVM\)”简称）还不能直接使用这些数据，\(SVM\)所反映的是多个数值影响一个数值的<strong>映射关系函数</strong>，可以简单的概括成以下的函数，训练的最终目的就是为了得到这个函数：</p>

\[f(x) = w_1x_1 + w_2x_2 + w_3x_3 + /dots w_nx_n\]

<blockquote>
  <p>其中 \(x_i\) 表示自变量，可以理解为对应图片像素点的数值，\(w_i\)表示权值，\(f(x)\)是最终计算出来的结果。</p>
</blockquote>

<p>  将之前清洗好的图像，当成一个个\(n\)组400维的方程组，使用\(SVM\) 算法“解方程”。</p>

<blockquote>
  <p>400维由来：一个20*20的图片有400个像素点</p>
</blockquote>

<p>  上面最终计算得到上面的式子，也就是我们所说的一个训练好的模型。</p>

<hr />
<h3 id="建模">建模</h3>
<p>  数据建模，在这里不是指3D建模，而是指一个<strong>机器学习</strong>的流程。这里数据建模用到了机器学习是本项目可以称之为<strong>人工智能</strong>的原因之一。<be>接下来将简单讲解机器学习的流程。</be></p>

<h4 id="1随机划分训练集与测试集">1.随机划分训练集与测试集</h4>

<p>  将整理好的数据，按照一定比例划分成训练集与测试集，训练集的数据顾名思义是用于训练数据的，测试集的数据是用来检验模型的正确率的。</p>

<blockquote>
  <p>训练集的数据就好比那些的有答案的课本，我们拿他学习提升自己的能力，而测试集则更像是试卷，用来检测我们的学习成果。</p>
</blockquote>

<h4 id="2参数调优">2.参数调优</h4>

<p>   一个模型往往有很多的参数需要我们定义，这些参数在不同的情况下需要取不同的数值才能使模型达到最优的效果。不同于平时的算法竞赛题目，这些参数值往往不是确定的，需要我们自己去调整。当然，我们不需要自己手动调参，我们可以用<a href="https://blog.csdn.net/guoyc439/article/details/123381908">网格搜索</a>与<a href="https://blog.csdn.net/qq_36535820/article/details/119762665">k折交叉验证</a>两种方法来解决最优参数的寻找问题。</p>

<p>  这两种算法的主要做法是，将训练集的数据继续分出一个和验证集，通过不断测试与调整，最终计算出最优模型的参数。由于篇幅有限，其具体做法这里不做过多的描述。</p>

<h4 id="3训练">3.训练</h4>

<p>  模型训练的操作，其实才是机器学习里面最难的部分，不过好在SVM已经被python封装好了，我们只需要提供前面清洗出的数据以及定义<a href="#2参数调优">参数调优</a>，稍等片刻即可得到训练好的模型。</p>

<h4 id="4模型检验">4.模型检验</h4>

<p>  将之前分出的测试集数据代入模型进行预测，计算正确率。当然评价一个模型的好坏的指标有很多其他的评价指标还有\(R^2\)，召回率等等，这里不做延伸。</p>

<h4 id="5模型保存">5.模型保存</h4>

<p>  每次训练一个模型经常要消耗大量的时间，为此我们需要保存训练好的模型，在下次做识别时就不需要再训练了。</p>

<p>  上面对机器学习的建模过程的描述地十分简单，但是实际的建模过程远比这个要复杂。只要前面在的“数据分析”“数据选择与清洗”“模型选择”“参数设置”等等环节出现了一个错误都有可能把你的人工智能模型训练成“人工智障”，而且前面的繁多步骤也会加大调参排错的难度。我也是花了4天左右的时间才训练出了一个比较过得去的模型。</p>

<blockquote>
  <p>⚡如果你也想入门人工智能，那要求你至少要有比较强的python基础，成熟的面向对象的思维，以及强大的心理素质。⚡</p>
</blockquote>

<p>  以下是py代码实现</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">train</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="s">"""
        SVM模型实现
        :return: None
        """</span>
        <span class="c1">## 数据分析与预处理
</span>        <span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_data</span><span class="p">()</span>

        <span class="c1">## 网格搜索,找到最优参数
</span>        <span class="n">machine_svm</span> <span class="o">=</span> <span class="n">svm</span><span class="p">.</span><span class="n">SVC</span><span class="p">()</span>

        <span class="n">param_grid</span> <span class="o">=</span> <span class="p">{</span><span class="s">'C'</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">10</span><span class="p">)}</span>  <span class="c1"># 这里设置了参数的测试范围
</span>        <span class="n">grid_search</span> <span class="o">=</span> <span class="n">GridSearchCV</span><span class="p">(</span><span class="n">machine_svm</span><span class="p">,</span> <span class="n">param_grid</span><span class="p">,</span> <span class="n">cv</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>  <span class="c1"># 建立网格搜索器模型
</span>        <span class="n">grid_search</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>  <span class="c1"># 开始搜索
</span>
        <span class="c1">## 创建分类器对象
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"最优参数是 c= "</span><span class="p">,</span> <span class="n">grid_search</span><span class="p">.</span><span class="n">best_params_</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"最优模型正确率 = "</span><span class="p">,</span> <span class="n">grid_search</span><span class="p">.</span><span class="n">best_score_</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">machine_svm</span> <span class="o">=</span> <span class="n">grid_search</span><span class="p">.</span><span class="n">best_estimator_</span>  <span class="c1"># 获取最优模型
</span>
        <span class="c1">## 模型训练
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">machine_svm</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

        <span class="c1">## 模型验证
</span>        <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">machine_svm</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span>
        <span class="n">correct</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">count_nonzero</span><span class="p">(</span><span class="n">result</span> <span class="o">==</span> <span class="n">y_test</span><span class="p">)</span>
        <span class="n">accuracy</span> <span class="o">=</span> <span class="n">correct</span> <span class="o">/</span> <span class="n">result</span><span class="p">.</span><span class="n">size</span>

        <span class="k">print</span><span class="p">(</span><span class="s">"测试集正确率："</span><span class="p">,</span> <span class="n">accuracy</span><span class="p">)</span>

        <span class="c1">## 模型保存
</span>        <span class="n">joblib</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">machine_svm</span><span class="p">,</span> <span class="s">'model/svm.pkl'</span><span class="p">)</span>

</code></pre></div></div>

<hr />

<h3 id="数据处理">数据处理</h3>

<p>  在前面，我们用做了特殊处理的图片对模型进行训练，所以在用该模型进行识别操作时，也需要对被识别图像做同样的操作。在之前清洗数据时我并没有详细讲解具体的操作，所以放到这里详细说明。</p>

<p>  我们想要预测一个图像，显然无法直接对一个RGB格式的图片下手，对于一个RGB格式的图片，它的每一个像素点都由三个数值组成（Rad Green Blue），这不利于识别，所以需要处理成一个数值，这样的处理过程我们称之为<strong>灰度化</strong>。</p>

<p>  如下方的两个图像就是做了灰度化处理的图像对比。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/7.jpg" alt="7.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/8.jpg" alt="8.jpg" />
    </div>
    
</div>

<p>  为了更好的配对模型，我们需要对灰度图进一步简化，通常的做法是将像素点间的差距拉的尽可能大（离散化），我们通常使用的方式是<strong>二值化</strong></p>

<p>  如下方的两个图像是灰度图像做了二值化处理的前后对比。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/8.jpg" alt="8.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/10.jpg" alt="10.jpg" />
    </div>
    
</div>

<p>  二值化后的图像，为过滤或弱化出图形中的小白点（噪音），我们常常采用高斯模糊（打马赛克）以及腐蚀的方法。</p>

<p>  如下图分别为做了高斯模糊和腐蚀操作的二值图像。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/11.jpg" alt="11.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/12.jpg" alt="12.jpg" />
    </div>
    
</div>

<p>  有时，我们会把握不好腐蚀操作的度，以至于一些重要信息也被过滤掉了，为了弥补过滤掉的内容，一般会对腐蚀后的图像做<strong>膨胀</strong>操作。<br />
一般的，先对一个图像做腐蚀再对齐做膨胀的组合操作我们称之为<strong>开运算</strong>。</p>

<p>  如下为两个分别是做了碰撞和开运算的图像。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/13.jpg" alt="13.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/14.jpg" alt="14.jpg" />
    </div>
    
</div>

<p>  通过<code class="language-plaintext highlighter-rouge">opencv</code>库实现以上操作，可以帮助我们从一张图片中提取出很多有效的信息。你可以从下面的代码中直观得体会出这个处理流程。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">change_color</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="p">):</span>
        <span class="s">"""
        将图像进行预处理
        :param img:img 彩图
        :return: img 二值图
        """</span>
        <span class="c1">## 原图像备份
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 高斯模糊
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">GaussianBlur</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span>

        <span class="c1">## 图像灰度化
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 图像二值化
</span>        <span class="n">_</span><span class="p">,</span> <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">threshold</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="mi">115</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">THRESH_BINARY_INV</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 开运算降噪
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_OPEN</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 膨胀运算
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_DILATE</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">)),</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">copy_img</span>
</code></pre></div></div>
<hr />

<h2 id="单词--句子的识别">单词 &amp; 句子的识别</h2>

<p>  在前面的讲解中，我们已经得到了可以识别字母的模型和清洗好的数据。但是模型只有识别字母的能力没有识别单词的功能，更没有识别句子的能力。所以这里我们需要自己想办法将识别出来的字母进行组合拼凑。</p>

<hr />

<h3 id="q--a">Q &amp; A</h3>

<p>  问题1：为什么，模型无法识别单词？<br />
  答：模型是拿字母图集训练出来的，所以只能识别单词。</p>

<p>  问题2：是否能够训练出能识别单词的模型<br />
  答：可以，但是成本很大，效率也不高。对于26个字母都需要上百的图形数据取训练，如果换成数不胜数的单词的话，需要的数据那更是数不清。而且单词之间本身就有很多相似的部分，这也会加大识别的难度降低效率。</p>

<p>  问题3：如果模型不能识别单词，那要怎么处理这个问题呢？<br />
  答：其实使用<a href="#数据处理">数据处理</a>中说到的的方法就可以巧妙地处理这个问题，不过还要用到cv中的一个内置函数函数，具体操作请看下文。</p>

<hr />

<h3 id="findcontours轮廓获取函数说明">findContours轮廓获取函数说明</h3>

<h4 id="函数说明">函数说明</h4>

<p>   <a href="https://blog.csdn.net/m0_60447786/article/details/125452378">findContours</a>可以作用于，二值图像，查找出图像的所有轮廓信息并返回。</p>

<h4 id="函数签名">函数签名</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">findContours</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">contours</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">hierarchy</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</code></pre></div></div>
<p>  image：表示一个二值度图像。<br />
  mode：使用的二值化的算法。<br />
  method：轮廓检测的方式。</p>

<p>  函数具体的使用方式这里不做过多的阐述，如果你对此感兴趣，详情请看这里👉<a href="https://blog.csdn.net/m0_60447786/article/details/125452378">findContours函数详细解析</a></p>

<h4 id="代码演示">代码演示</h4>

<p>  文字的描述或许依然让你难以理解。那么我们来看看下面的代码和效果展示。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">test_findContours</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">image</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    <span class="s">"""
        该函数用于展示findContours的函数
        :param img: img
        :return: img,con
    """</span>
    <span class="c1">## 轮廓提取
</span>    <span class="n">contours</span><span class="p">,</span> <span class="n">w1</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">findContours</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">RETR_EXTERNAL</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">CHAIN_APPROX_SIMPLE</span><span class="p">)</span>
    
    <span class="c1">## 轮廓绘制
</span>    <span class="n">show_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">drawContours</span><span class="p">(</span><span class="n">copy_img</span><span class="p">.</span><span class="n">copy</span><span class="p">(),</span> <span class="n">contours</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">show_img</span><span class="p">)</span>
</code></pre></div></div>

<p>  如下两图，分别是原图和描绘轮廓后的图形。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/15.jpg" alt="15.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/16.jpg" alt="16.jpg" />
    </div>
    
</div>

<hr />

<h3 id="首先从图片中分离出句子">首先从图片中分离出句子</h3>

<p>  如何识别出一个句子？其实我们只需要框出句子的轮廓，再根据轮廓信息，从原图像中裁剪出来即可。</p>

<p>  但是前面谈到的findContours函数似乎只能查找出字母的轮廓，那要怎么做？</p>

<p>  其实只要适当的对图像做膨胀运算，让所有的字母粘连在一起，所有的单词粘连在一起，让它们形成一个整体。那这个整体不就是句子的轮廓了吗？怎么样是不是很巧妙？<br /></p>

<blockquote>
  <p>不能上手就对图像做膨胀运算，这可能会放大一些杂质（噪音）！</p>
</blockquote>

<p>  下面将处理过程进行展示，处理次序依次是高斯模糊、灰度化、二值化、开运算、膨胀</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/17.jpg" alt="17.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/18.jpg" alt="18.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/19.jpg" alt="19.jpg" />
    </div>
    
</div>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/20.jpg" alt="20.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/21.jpg" alt="21.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/22.jpg" alt="22.jpg" />
    </div>
    
</div>

<p>  代码实现如下。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">change_color</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="p">):</span>
        <span class="s">"""
        将图像进行预处理
        :param img:img 彩图
        :return: img 二值图
        """</span>
        <span class="c1">## 原图像备份
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 高斯模糊
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">GaussianBlur</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span>

        <span class="c1">## 图像灰度化
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 图像二值化
</span>        <span class="n">_</span><span class="p">,</span> <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">threshold</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="mi">115</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">THRESH_BINARY_INV</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 开运算降噪
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_OPEN</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="c1">## 膨胀运算
</span>        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">copy_img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_DILATE</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">)),</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">copy_img</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">copy_img</span>
</code></pre></div></div>

<hr />

<h3 id="其次从句子中分离出单词">其次从句子中分离出单词</h3>

<p>  这一步操作其实和，上一步差不多，只不过需要将膨胀运算等的参数略做调整，使得单词中的字母之间互相连接而单词之间不连接。</p>

<p>  除此之外，还要记录单词之间的次序，以便后期整理。</p>

<p>  话不多说，上结果：</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/23.jpg" alt="23.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/24.jpg" alt="24.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/25.jpg" alt="25.jpg" />
    </div>
    
</div>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/26.jpg" alt="26.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/27.jpg" alt="27.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/28.jpg" alt="28.jpg" />
    </div>
    
</div>

<p>  下面是代码展示，相比与句子识别部分的代码，下面还多了单词剪切和手动降噪的等代码逻辑。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">image_init</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="s">"""
        该函数用于将图像灰度化，模糊化，二值化等操作得到可以处理的图像
        :param img: img
        :return: img,con
        """</span>
        <span class="k">if</span> <span class="n">img</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">img</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">img</span>
        <span class="n">copy_img</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>

        <span class="c1">## 高斯滤波
</span>        <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">GaussianBlur</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span>

        <span class="c1">## 灰度化处理
</span>        <span class="n">gray_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_RGB2GRAY</span><span class="p">)</span>

        <span class="c1">## 二值化
</span>        <span class="n">_</span><span class="p">,</span> <span class="n">binary</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">threshold</span><span class="p">(</span><span class="n">gray_img</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">THRESH_BINARY_INV</span><span class="p">)</span>

        <span class="c1"># ## 开运算用以降噪
</span>        <span class="n">kernel</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
        <span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">binary</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_OPEN</span><span class="p">,</span> <span class="n">kernel</span><span class="p">,</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="c1">## 膨胀
</span>        <span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">binary</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">MORPH_DILATE</span><span class="p">,</span> <span class="n">kernel</span><span class="p">,</span> <span class="n">iterations</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

        <span class="c1">## 轮廓提取
</span>        <span class="n">contours</span><span class="p">,</span> <span class="n">w1</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">findContours</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">RETR_EXTERNAL</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">CHAIN_APPROX_SIMPLE</span><span class="p">)</span>
        <span class="n">show_img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">drawContours</span><span class="p">(</span><span class="n">copy_img</span><span class="p">.</span><span class="n">copy</span><span class="p">(),</span> <span class="n">contours</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>

        <span class="c1">## 提取有效轮廓
</span>        <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">contours</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">contourArea</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="o">&lt;</span> <span class="bp">self</span><span class="p">.</span><span class="n">min_area</span><span class="p">:</span>  <span class="c1"># 过于小的部分抛弃
</span>                <span class="k">continue</span>

            <span class="n">rect</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">boundingRect</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
            <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">weight</span><span class="p">,</span> <span class="n">height</span> <span class="o">=</span> <span class="n">rect</span>  <span class="c1"># 这个是轮廓的信息
</span>            <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">rect</span><span class="p">)</span>  <span class="c1"># 收集所有的轮廓信息
</span>        <span class="c1"># contour 所表示的是每一个矩形轮廓的左上点和右下点的坐标
</span>
        <span class="n">contours</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span> <span class="p">[</span><span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]]]</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">result</span><span class="p">]</span>

        <span class="c1">## 剪切对应的轮廓，并返回对应的轮廓矩形的左上点和右下点的坐标集合、
</span>        <span class="n">result_imgs</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">contour</span> <span class="ow">in</span> <span class="n">contours</span><span class="p">:</span>
            <span class="n">result_imgs</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">copy_img</span><span class="p">[</span><span class="n">contour</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span><span class="n">contour</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">contour</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]:</span><span class="n">contour</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]])</span>

        <span class="k">return</span> <span class="n">result_imgs</span><span class="p">,</span> <span class="n">contours</span>
</code></pre></div></div>

<hr />

<h3 id="最后从单词中分离出字母并识别">最后从单词中分离出字母并识别</h3>

<p>  其实这一步大体与前面步骤相同，只不过可能不需要再进行膨胀运算了，不然的话将字母整理粘合在一起就不好识别了。</p>

<p>  同样的，我们需要记录分离出来的字母的前后次序，以便整理出正确单词。</p>

<p>  对于每一个分离出来的字母图片同样按照之前<a href="#数据处理">数据处理</a>的步骤，整理成一个可供SVM分类器识别的二值图片后，进行字母预测。</p>

<p>  将识别好的字母按顺序组成单词，再将单词按照次序整理成句子（有些类似于函数回溯的过程）。那么我们就得到了图片的英文识别结果了。</p>

<p>  那么下面这两张图就是字母分离的结果，也是我们之前所展示过的。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/15.jpg" alt="15.jpg" />
    </div>
    
    <div style="flex: 10.0%">
        <img src="/assets/img/blog-img/translate/16.jpg" alt="16.jpg" />
    </div>
    
</div>

<p>  下面给出，字母图片处理的有关代码逻辑</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">resize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img</span><span class="p">):</span>
        <span class="s">"""
        图像需要原先就是灰度图像
        将图片调整到标准大小20*20
        :param img: 原图像
        :return:finish_img
        """</span>

        <span class="k">if</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>  <span class="c1"># 表示长宽比太大了，不适合做拉伸操作
</span>            <span class="c1">## 待补充，这里需要解决过度拉伸的问题，可能需要寻找填充的方法
</span>            <span class="c1"># 计算需要用于填充的图像的宽高
</span>            <span class="n">high</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">wide</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>

            <span class="n">grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">high</span><span class="p">,</span> <span class="n">wide</span><span class="p">))</span>  <span class="c1"># 计算用于填充的黑色图片
</span>
            <span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">grid</span><span class="p">,</span> <span class="n">img</span><span class="p">))</span>      <span class="c1"># 左右都做填充
</span>            <span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">img</span><span class="p">,</span> <span class="n">grid</span><span class="p">))</span>  <span class="c1"># 左右都做填充
</span>
            <span class="c1"># 最后将填充的图像重新转换为20*20的格式
</span>            <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>

          <span class="k">else</span><span class="p">:</span>
            <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>

        <span class="c1"># 调整大小并返回
</span>        <span class="k">return</span> <span class="n">img</span>

</code></pre></div></div>
<hr />

<h2 id="翻译">翻译</h2>

<p>  翻译功能，本项目使用爬虫实现。<br /></p>

<h3 id="传统爬虫">传统爬虫</h3>

<p>  对于传统的爬虫，其一般步骤是：</p>

<ol>
  <li>抓包，找接口。</li>
  <li>寻找表单中的一些参数规律，并解析。</li>
  <li>封装请求头，保存<code class="language-plaintext highlighter-rouge">cookie</code>状态，考虑使用代理等。</li>
  <li>发送表单请求，获取返回信息。</li>
  <li>解析数据，并保存。</li>
</ol>

<p>  传统的爬虫方式，其实就是通过伪装成浏览器的方式获取网络资源的。这种做法的好处是，小巧轻便，速度快。</p>

<p>  但是其局限性也很大，一旦后台更改了接口访问方式、文本加密方式就可能要重写一个份代码。对于需要保存登录信息的网页，我们使用的<code class="language-plaintext highlighter-rouge">cookie</code>也需要时不时更新一下。一些网站带有的反爬机制也会增加传统爬虫的难度。</p>

<blockquote>
  <p>顺带一提，百度翻译现在已经加密了翻译接口的表单参数，用传统的爬虫已经爬不了了。</p>
</blockquote>

<p>  所以我选择selenium技术进行爬虫。</p>

<hr />

<h3 id="selenium技术模块介绍">selenium技术模块介绍</h3>

<p>  如果说传统爬虫是伪装成浏览器，那么<code class="language-plaintext highlighter-rouge">selenium</code>就是模拟成浏览器访问数据。</p>

<p>  什么是“模拟成浏览器”？</p>

<p>  就是像真的浏览器一样，加载一个网页上所有的数据包括，JavaScript，html，png，等等。<br />
  如果处理得当，这种爬虫可以规避 \(95%\) 的反爬监控。</p>

<hr />

<h3 id="selenium与传统爬虫的对比">selenium与传统爬虫的对比</h3>

<p>  selenium的工作思路是基于网页html结构的，而传统爬虫是针对的API接口。</p>

<p>  下面以百度翻译的爬取为例来说明这两种方式的区别。</p>

<hr />

<h4 id="传统爬虫爬百度翻译">传统爬虫爬百度翻译</h4>

<p>  1. 打开网页，输入数据，开始抓包。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img class="single" src="/assets/img/blog-img/translate/29.jpg" alt="29.jpg" />
    </div>
    
</div>

<p>  2. 找到带有，翻译结果的参数。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img class="single" src="/assets/img/blog-img/translate/30.jpg" alt="30.jpg" />
    </div>
    
</div>

<p>  3. 根据抓包工具提供的信息封装请求头。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img class="single" src="/assets/img/blog-img/translate/31.jpg" alt="31.jpg" />
    </div>
    
</div>

<p>  4. 整理表单数据，发送请求。</p>

<p>  5. 接收返回信息并解析。</p>

<hr />

<h4 id="selenium爬百度翻译">selenium爬百度翻译</h4>

<p>  1. 打开网页，找到输入框，从html源码中定位输入框的位置，编写<code class="language-plaintext highlighter-rouge">XPATH</code>语句。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img class="single" src="/assets/img/blog-img/translate/29.jpg" alt="29.jpg" />
    </div>
    
</div>

<p>  2. 在定位到的输入框组件中，（不需要手动输入）输入数据。</p>

<p>  3. 再次使用<code class="language-plaintext highlighter-rouge">XPATH</code>语法，直接从结果框中定位翻译结果。</p>

<div class="row">
    
    <div style="flex: 10.0%">
        <img class="single" src="/assets/img/blog-img/translate/33.jpg" alt="33.jpg" />
    </div>
    
</div>

<p>  selenium的优势在于，不需要繁琐的更新请求头，不用担心接口的更新而导致程序会失效，selenium相比传统的爬虫更加稳定，如果网页没有较大的改变selenium可以一直有效。selenium的难度也不大，只要有一点html基础和XPATH语法就可以灵活使用。</p>

<p>  selenium的劣势也很明显，由于是模拟浏览器，所以会加载很多用不上的信息，比如网页中的图片，视频之类的资源，这会使得爬取的速度下降。</p>

<hr />

<h3 id="selenium效率优化">selenium效率优化</h3>

<p>  前面有提到，selenium因加载无用信息而导致速度的下降，对此我们有以下几种方式来加速。</p>

<h4 id="1-使用显式等待">1. 使用显式等待</h4>

<p>  网页中的信息往往在没有全部加载出来前（通俗的讲就是，刷新箭头还在转的时候），就已经出现了我们想要的信息，这个时候我们不需要等待直接上手抓数据。<br />
  这种方式称之为显式等待。</p>

<h4 id="2-无头浏览器">2. 无头浏览器</h4>

<p>  所谓的无头浏览器就是，直接不展示界面，让selenium在后台加载数据，省去浏览器展示的时间。</p>

<h4 id="3-多线程优化">3. 多线程优化</h4>

<p>  这是一种传统的的方法。如果要访问多次，那么多个线程加载肯定比一个要快。要注意访问公共资源时<code class="language-plaintext highlighter-rouge">上锁</code>。</p>

<blockquote>
  <p>多线程优化用的好的话，程序效率会大大提升。不过这也同样加大了调试的难度。初学者要慎重使用。</p>
</blockquote>

<hr />

<h3 id="翻译实现">翻译实现</h3>

<p>  selenium爬虫的代码实现，部分代码</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">spider</span><span class="p">:</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://fanyi.baidu.com/'</span>
    <span class="n">path_ad</span> <span class="o">=</span> <span class="s">'//div[@class="app-guide-inner"]/div[@class="app-guide-aside"]/span'</span>
    <span class="n">path_input</span> <span class="o">=</span> <span class="s">'//div[@class="textarea-wrap"]/textarea[@class="textarea"]'</span>
    <span class="n">path_out</span> <span class="o">=</span> <span class="s">'//p[@class="ordinary-output target-output clearfix"]/span'</span>

    <span class="o">@</span><span class="nb">staticmethod</span>
    <span class="k">def</span> <span class="nf">get_no_ui_browser</span><span class="p">():</span>
        <span class="s">"""
        获得一个无界面浏览器对象
        :return: Chrome
        """</span>
        <span class="n">chrome_options</span> <span class="o">=</span> <span class="n">Options</span><span class="p">()</span>
        <span class="n">chrome_options</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">'--headless'</span><span class="p">)</span>
        <span class="n">chrome_options</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">'--disable-gpu'</span><span class="p">)</span>
        <span class="n">chrome_options</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">'blink-settings=imagesEnabled=false'</span><span class="p">)</span>  <span class="c1"># 可以选择不加载图片以提升速度
</span>        <span class="n">browser</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Chrome</span><span class="p">(</span><span class="n">chrome_options</span><span class="o">=</span><span class="n">chrome_options</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">browser</span>

    <span class="o">@</span><span class="nb">staticmethod</span>
    <span class="k">def</span> <span class="nf">get_browser</span><span class="p">():</span>
        <span class="s">"""
        获得一个有界面浏览器对象（用于展示或者调试）
        :return:  Chrome
        """</span>

        <span class="k">return</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Chrome</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">click_object</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">object</span><span class="p">):</span>
        <span class="s">"""
        用于点击一个元素
        :param object:元素对象
        :return: None
        """</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">.</span><span class="n">execute_script</span><span class="p">(</span><span class="s">"arguments[0].click();"</span><span class="p">,</span> <span class="nb">object</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">close_ad</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 这里显示等待界面中的广告出现
</span>        <span class="k">try</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">ad</span> <span class="o">=</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="n">until</span><span class="p">(</span><span class="n">EC</span><span class="p">.</span><span class="n">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">path_ad</span><span class="p">)))</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">click_object</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">ad</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">browser</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_browser</span><span class="p">()</span> <span class="k">if</span> <span class="n">debug</span> <span class="k">else</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_no_ui_browser</span><span class="p">()</span>  <span class="c1"># 获取一个浏览器对象
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">.</span><span class="n">implicitly_wait</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>  <span class="c1"># 设置隐式等待的时间
</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">url</span><span class="p">)</span>  <span class="c1"># 打开界面
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">close_ad</span><span class="p">()</span>  <span class="c1"># 关闭界面上的广告
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">find_button</span><span class="p">()</span>  <span class="c1"># 寻找输入框
</span>
    <span class="k">def</span> <span class="nf">find_button</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="s">"""
        此方法用于实现常用元素的查找
        :return: None
        """</span>
        <span class="c1">## 寻找输入输出框框
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">text_input</span> <span class="o">=</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="n">until</span><span class="p">(</span>
            <span class="n">EC</span><span class="p">.</span><span class="n">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">path_input</span><span class="p">)))</span>
        <span class="c1"># self.text_out = self.browser.find_element(by=By.XPATH, value=self.path_out)
</span>
    <span class="k">def</span> <span class="nf">input</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="s">"""
        用于给输入框输入句子
        :param text: 待翻译文本
        :return: bool
        """</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">text_input</span><span class="p">.</span><span class="n">clear</span><span class="p">()</span>  <span class="c1"># 清除输入内容
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">text_input</span><span class="p">.</span><span class="n">send_keys</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>  <span class="c1"># 填写被翻译内容
</span>
    <span class="k">def</span> <span class="nf">get_translate_sentence</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="s">"""
        获取翻译结果
        :return:翻译结果
        """</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">text_out</span> <span class="o">=</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">browser</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="n">until</span><span class="p">(</span><span class="n">EC</span><span class="p">.</span><span class="n">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">XPATH</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">path_out</span><span class="p">)))</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="s">''</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">text_out</span><span class="p">.</span><span class="n">text</span>

    <span class="k">def</span> <span class="nf">translate_sentence</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">wait</span><span class="o">=</span><span class="mf">0.5</span><span class="p">):</span>
        <span class="s">"""
        用于实现翻译的逻辑
        :param text: 需要翻译的文本
        :return: 翻译结果
        """</span>
        <span class="bp">self</span><span class="p">.</span><span class="nb">input</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">wait</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_translate_sentence</span><span class="p">()</span>
</code></pre></div></div>

<p>  在加上多线程优化</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">translation_queue</span><span class="p">:</span>
    <span class="n">number</span> <span class="o">=</span> <span class="mi">5</span>  <span class="c1"># 默认开启界面数
</span>    <span class="n">queue</span> <span class="o">=</span> <span class="p">[]</span>  <span class="c1"># 浏览器队列
</span>    <span class="n">hh</span><span class="p">,</span> <span class="n">tt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>  <span class="c1"># 队列头，队列尾
</span>
    <span class="k">def</span> <span class="nf">add_browser</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">queue</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">spider</span><span class="p">())</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">number</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="c1">## 初始化线程池大小
</span>        <span class="k">if</span> <span class="n">number</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">number</span> <span class="o">=</span> <span class="n">number</span>

        <span class="c1">## 初始化5个浏览器
</span>        <span class="n">children</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">number</span><span class="p">):</span>
            <span class="n">children</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">add_browser</span><span class="p">))</span>
            <span class="n">children</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="n">start</span><span class="p">()</span>

        <span class="c1"># 等待所有浏览器初始化完毕
</span>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">number</span><span class="p">):</span>
            <span class="n">children</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">join</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">set_text</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">queue</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">tt</span><span class="p">].</span><span class="nb">input</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">tt</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">tt</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="bp">self</span><span class="p">.</span><span class="n">number</span>

    <span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">queue</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">hh</span><span class="p">].</span><span class="n">get_translate_sentence</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">hh</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">hh</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="bp">self</span><span class="p">.</span><span class="n">number</span>
        <span class="k">return</span> <span class="n">text</span>

</code></pre></div></div>
<hr />

<h1 id="作者自己的一些话">作者自己的一些话</h1>

<p>  本项目其实只是对人工智能算法模型SVM分类器的一个小小的应用。一个模型能做的事情其实都很小很简单，因此对图片的数据清洗解析简化等的步骤尤为重要，而这些处理步骤其实就是，将我们所能看懂图片信息一步步转化成计算机能读的懂的数据。然后将计算机得到的结果转化成我们能读懂的信息（如图片，文字，视频）。这些转化的任务正是我们程序员的工作。</p>

<p>  在项目实操中，还是遇到了不少的困难，例如训练数据找不到，训练数据洗不干净，模型效率低，字母<code class="language-plaintext highlighter-rouge">il</code>分不清，传统爬虫爬不了翻译等等问题。</p>

<p>  程序试错试也是一个复杂的而又漫长的过程，多线程的优化更是进一步加大了编码的难度。</p>

<p>  实现部分远比我当初预想的要难得多，没有团队的支持所有模块都是我一人完成的，平均花了1-2天的时间，虽然很辛苦，但总之项目还是写出来了，代码不多一共1400行，但行行都是心血的付出。</p>

<p>  希望新人们在以后中遇到困难也可以坚持下去，办法总比困难多。只要方向是对的，那么坚持下去就没有错。</p>

<hr />

<p><a href="#go_to_top">回到顶部</a></p>]]></content><author><name>Ranok</name></author><category term="人工智能" /><category term="计算机视觉" /><category term="python" /><category term="机器学习" /><category term="爬虫" /><summary type="html"><![CDATA[  不知不觉间，人工智能慢慢开始走进千家万户。无人驾驶、AI绘图、语音识别、AI聊天都是人工智能的领域。我作为一个智能的学生已经被迷得不行了，在这份热爱的支持下我完成了这份项目。虽然我的项目与当今智能技术无法比拟，但是其中运用到的机器学习模型（如SVM分类器）足以能够让我的项目归类到人工智能。]]></summary></entry><entry><title type="html">Java EE</title><link href="http://localhost:4000/javaee" rel="alternate" type="text/html" title="Java EE" /><published>2022-12-24T00:00:00+08:00</published><updated>2022-12-24T00:00:00+08:00</updated><id>http://localhost:4000/shaoxing-javaee</id><content type="html" xml:base="http://localhost:4000/javaee"><![CDATA[<p>  Java EE，Java 平台企业版（Java Platform Enterprise Edition），之前称为Java 2 Platform, Enterprise Edition (J2EE)，2018年3月更名为 Jakarta EE(这个名称应该还没有得到群众认可)。是 Sun 公司为企业级应用推出的标准平台，用来开发B/S架构软件。Java EE 可以说是一个框架，也可以说是一种规范。</p>

<hr />

<h2 id="前言">前言</h2>
<p>  《java EE》是一门与就业相关度较高的一门课程，作为企业级的应用开发，虽然书本上学的ssm框架已经过时，但是作为我们初学者，它的价值还是不小的。</p>

<p>  本博客按知识点整理一些相关内容，祝愿你可以取得一个让自己满意的成绩。</p>

<hr />
<h2 id="问题解析">问题解析</h2>
<h4 id="spring中bean的作用域有哪些默认是哪一个">Spring中Bean的作用域有哪些，默认是哪一个</h4>

<p>  singleton：单例模式（<strong>默认</strong>），在整个Spring IoC容器中，使用singleton定义的Bean将只有一个实例</p>

<p>  prototype：原型模式，每次通过容器的getBean方法获取prototype定义的Bean时，都将产生一个新的Bean实例</p>

<p>  request：对于每次HTTP请求，使用request定义的Bean都将产生一个新实例，即每次HTTP请求将会产生不同的Bean实例。只有在Web应用中使用Spring时，该作用域才有效</p>

<p>  session：对于每次HTTP Session，使用session定义的Bean豆浆产生一个新实例。同样只有在Web应用中使用Spring时，该作用域才有效</p>

<p>  globalsession：每个全局的HTTP Session，使用session定义的Bean都将产生一个新实例。典型情况下，仅在使用portlet context的时候有效。同样只有在Web应用中使用Spring时，该作用域才有效</p>

<hr />

<h4 id="spring中有哪些注解">Spring中有哪些注解</h4>
<p>  1. @Controller：将Controller层的类对象交由spring容器生成与管理</p>

<p>  2. @Service：将Service层的类对象交由spring容器生成与管理</p>

<p>  3. @Repository：将Dao层的类对象交由spring容器生成与管理</p>

<p>  4. @Component将类对象交由spring容器生成与管理</p>

<hr />

<h4 id="spring-aopioc的概念">Spring AOP、IOC的概念</h4>
<p>  AOP(Aspect-Oriented Programming:面向切面编程)：是指将那些与业务无关，却被多个业务模块所共同调用逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来，便于减少系统的重复代码，降低模块间的耦合度，提升系统的可维护性。</p>

<p>  IOC就是控制反转，是指程序将创建对象的控制权转交给Spring框架进行管理，由Spring通过java的反射机制根据配置文件在运行时动态的创建实例，并管理各个实例之间的依赖关系。</p>

<hr />

<h4 id="spring-aop中的通知类型">Spring AOP中的通知类型</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">通知类型</th>
      <th style="text-align: center">注解</th>
      <th style="text-align: center">说明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">before（前置通知）</td>
      <td style="text-align: center">@Before</td>
      <td style="text-align: center">通知方法在目标方法调用之前执行</td>
    </tr>
    <tr>
      <td style="text-align: center">after（后置通知）</td>
      <td style="text-align: center">@After</td>
      <td style="text-align: center">通知方法在目标方法返回或异常后调用</td>
    </tr>
    <tr>
      <td style="text-align: center">after-returning（返回通知）</td>
      <td style="text-align: center">@AfterReturning</td>
      <td style="text-align: center">通知方法会在目标方法返回后调用</td>
    </tr>
    <tr>
      <td style="text-align: center">after-throwing（异常抛出通知）</td>
      <td style="text-align: center">@AfterThrowing</td>
      <td style="text-align: center">通知方法会在目标方法抛出异常后调用</td>
    </tr>
    <tr>
      <td style="text-align: center">around（环绕通知）</td>
      <td style="text-align: center">@Around</td>
      <td style="text-align: center">通知方法会将目标方法封装起来</td>
    </tr>
  </tbody>
</table>

<hr />

<h4 id="spring-实现aop的动态代理的方式">Spring 实现AOP的动态代理的方式</h4>

<p>  1. JDK动态代理（基于接口实现的）：JDK动态代理制能对实现了接口的类生成代理，而不是针对类</p>

<p>  2. CGLIB动态代理（基于类实现的）：CGLIB是针对类实现代理，主要对指定的类生成一个子类，覆盖其中的方法，添加额外功能，因为是继承，所以该类方法不能用final来声明。</p>

<hr />

<h4 id="mybaes如何防止sql注入问题">MyBaes如何防止SQL注入问题</h4>

<p>  在编写MyBatis的映射语句时，尽量采用“#{xxx}”这样的格式。若不得不使用“${xxx}”这样的参数，要手工地做好过滤工作，来防止SQL注入攻击。</p>

<hr />

<h4 id="动态sql的使用">动态SQL的使用</h4>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"queryList"</span> <span class="na">parameterType=</span><span class="s">"com.jinzheng.pojo.Book"</span> <span class="na">resultType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
    select * from tb_book
    <span class="nt">&lt;where&gt;</span>
        <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"id != null and id !='' "</span><span class="nt">&gt;</span>
            or id = #{id}
        <span class="nt">&lt;/if&gt;</span>
        <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"name != null and name !='' "</span><span class="nt">&gt;</span>
            or name like concat('%',#{name},'%')
        <span class="nt">&lt;/if&gt;</span>
        <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"press != null and press !='' "</span><span class="nt">&gt;</span>
            or press like concat('%',#{press},'%')
        <span class="nt">&lt;/if&gt;</span>
        <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"author != null and author !='' "</span><span class="nt">&gt;</span>
            or author like concat('%',#{author},'%')
        <span class="nt">&lt;/if&gt;</span>
        <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"bookPrice != null and bookPrice !='' "</span><span class="nt">&gt;</span>
            or bookPrice = #{bookPrice}
        <span class="nt">&lt;/if&gt;</span>
    <span class="nt">&lt;/where&gt;</span>
<span class="nt">&lt;/select&gt;</span>
</code></pre></div></div>

<hr />

<h4 id="spring-mvc的工作原理">Spring MVC的工作原理</h4>

<div class="row">
    
    <div class="column">
        <img class="single" src="/assets/img/blog-img/javaee/1.png" alt="1.png" />
    </div>
    
</div>

<hr />

<h4 id="开发java-web项目的三层架构">开发Java Web项目的三层架构</h4>

<p>  1)：数据访问层：(dao持久层)主要是对原始数据（数据库或者文本文件等存放数据的形式）的操作层，
而不是指原始数据，也就是说，是对数据的操作，而不是数据库，具体为业务逻辑层或表示层
提供数据服务．</p>

<p>  2)：业务逻辑层：(service)主要是针对具体的问题的操作，也可以理解成对数据层的操作，对数据业务
逻辑处理，如果说数据层是积木，那逻辑层就是对这些积木的搭建。具体的讲主要负责对数
据层的操作。也就是说把一些数据层的操作进行组合。</p>

<p>  3)：表示层：(controller)主要表示WEB方式，如果逻辑层相当强大和完善，
无论表现层如何定义和更改，逻辑层都能完善地提供服务。
主要对用户的请求接受，以及数据的返回，为客户端提供应用程序的访问。</p>

<hr />

<h4 id="serverlet需要实现的两个方法是什么">serverlet需要实现的两个方法是什么</h4>
<p>  1. toGet 方法<br />
  2. toPut 方法<br /></p>

<h4 id="jsp的9个内置对象">JSP的9个内置对象</h4>

<p>  1. Request对象<br />
  2. Response对象<br />
  3. Out对象<br />
  4. session对象<br />
  5. Application对象<br />
  6. PageContext对象<br />
  7. Config对象<br />
  8. Page（相当于this）对象<br />
  9. Exception对象</p>

<hr />

<h4 id="程序设计题">程序设计题</h4>
<h5 id="1-mybean">1. MyBean</h5>
<p>设计一个数据库访问的代码：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">userFindByIdTest</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">resources</span> <span class="o">=</span> <span class="s">"mybatis-config.xml"</span><span class="o">;</span>
    <span class="nc">Reader</span> <span class="n">reader</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">reader</span> <span class="o">=</span> <span class="nc">Resources</span><span class="o">.</span><span class="na">getResourceAsReader</span><span class="o">(</span><span class="n">resources</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="nc">SqlSessionFactory</span> <span class="n">sqlMapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SqlSessionFactoryBuilder</span><span class="o">().</span><span class="na">build</span><span class="o">(</span><span class="n">reader</span><span class="o">);</span>
    <span class="nc">SqlSession</span> <span class="n">session</span> <span class="o">=</span> <span class="n">sqlMapper</span><span class="o">.</span><span class="na">openSession</span><span class="o">();</span>
    <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">selectOne</span><span class="o">(</span><span class="s">"findById"</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getUname</span><span class="o">());</span>
    <span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-aop">2. AOP</h5>
<p>基于注解的AOP代码：</p>

<h6 id="注册bean">注册bean</h6>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;bean</span> <span class="na">name=</span><span class="s">"userDao"</span> <span class="na">class=</span><span class="s">"com.itheima.demo03.UserDaoImpl"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;bean</span> <span class="na">name=</span><span class="s">"AnnoAdvice"</span> <span class="na">class=</span><span class="s">"com.itheima.demo04.AnnoAdvice"</span><span class="nt">/&gt;</span>
<span class="c">&lt;!-- 开启@aspectj的自动代理支持 --&gt;</span>
<span class="nt">&lt;aop:aspectj-autoproxy/&gt;</span>

</code></pre></div></div>

<h6 id="定义通知">定义通知</h6>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * 1、在切面中，需要通过指定的注解将方法标识为通知方法
 * @Before：前置通知，在目标对象方法执行之前执行
 * @After：后置通知，在目标对象方法的finally字句中执行
 * @AfterReturning：返回通知，在目标对象方法返回值之后执行
 * @AfterThrowing：异常通知，在目标对象方法的catch字句中执行
 *
 * 2、切入点表达式：设置在标识通知的注解的value属性中
 * execution(public int com.atguigu.spring.aop.annotation.CalculatorImpl.add(int, int)
 * execution(* com.atguigu.spring.aop.annotation.CalculatorImpl.*(..)
 * 第一个*表示任意的访问修饰符和返回值类型
 * 第二个*表示类中任意的方法
 * ..表示任意的参数列表
 * 类的地方也可以使用*，表示包下所有的类
 * 3、重用切入点表达式
 * //@Pointcut声明一个公共的切入点表达式
 * @Pointcut("execution(* com.atguigu.spring.aop.annotation.CalculatorImpl.*(..))")
 * public void pointCut(){}
 * 使用方式：@Before("pointCut()")
 *
 * 4、获取连接点的信息
 * 在通知方法的参数位置，设置JoinPoint类型的参数，就可以获取连接点所对应方法的信息
 * //获取连接点所对应方法的签名信息
 * Signature signature = joinPoint.getSignature();
 * //获取连接点所对应方法的参数
 * Object[] args = joinPoint.getArgs();
 *
 */</span>
 
<span class="nd">@Component</span>
<span class="nd">@Aspect</span>  <span class="c1">//将当前组件标识为切面</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoggerAspect</span> <span class="o">{</span>
 
    <span class="nd">@Pointcut</span><span class="o">(</span><span class="s">"execution(* com.atguigu.spring.aop.annotation.CalculatorImpl.*(..))"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">pointCut</span><span class="o">(){}</span>
 
    <span class="c1">//前置通知</span>
    <span class="c1">//@Before("execution(public int com.atguigu.spring.aop.annotation.CalculatorImpl.add(int, int))")</span>
    <span class="c1">//@Before("execution(* com.atguigu.spring.aop.annotation.CalculatorImpl.*(..))")</span>
    <span class="nd">@Before</span><span class="o">(</span><span class="s">"pointCut()"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">beforeAdviceMethod</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//获取连接点所对应方法的签名信息</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="c1">//获取连接点所对应方法的参数</span>
        <span class="nc">Object</span><span class="o">[]</span> <span class="n">args</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getArgs</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LoggerAspect，方法："</span><span class="o">+</span><span class="n">signature</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"，参数："</span><span class="o">+</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">args</span><span class="o">));</span>
    <span class="o">}</span>
 
    <span class="c1">//后置通知</span>
    <span class="nd">@After</span><span class="o">(</span><span class="s">"pointCut()"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterAdviceMethod</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">){</span>
        <span class="c1">// System.out.println("LoggerAspect,后置通知");</span>
        <span class="c1">//获取连接点所对应方法的签名信息</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LoggerAspect，方法："</span><span class="o">+</span><span class="n">signature</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"，执行完毕"</span><span class="o">);</span>
    <span class="o">}</span>
 
    <span class="c1">//返回通知</span>
    <span class="cm">/**
     * 在返回通知中若要获取目标对象方法的返回值
     * 只需要通过@AfterReturning注解的returning属性
     * 就可以将通知方法的某个参数指定为接收目标对象方法的返回值的参数
     */</span>
    <span class="nd">@AfterReturning</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"pointCut()"</span><span class="o">,</span> <span class="n">returning</span> <span class="o">=</span> <span class="s">"result"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterReturningAdviceMethod</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">,</span> <span class="nc">Object</span> <span class="n">result</span><span class="o">){</span>
        <span class="c1">// System.out.println("LoggerAspect,返回通知");</span>
        <span class="c1">//获取连接点所对应方法的签名信息</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LoggerAspect，方法："</span><span class="o">+</span><span class="n">signature</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"，结果："</span><span class="o">+</span><span class="n">result</span><span class="o">);</span>
    <span class="o">}</span>
 
      <span class="c1">//异常通知</span>
    <span class="nd">@AfterThrowing</span><span class="o">(</span> <span class="s">"pointCut()"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterThrowingAdviceMethod</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">){</span>
        <span class="c1">//获取连接点所对应方法的签名信息</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LoggerAspect，方法："</span><span class="o">+</span><span class="n">signature</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">",异常通知"</span><span class="o">);</span>
    <span class="o">}</span>
 
    <span class="cm">/**
     * 在异常通知中若要获取目标对象方法的异常
     * 只需要通过AfterThrowing注解的throwing属性
     * 就可以将通知方法的某个参数指定为接收目标对象方法出现的异常的参数
     */</span>
    <span class="nd">@AfterThrowing</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"pointCut()"</span><span class="o">,</span> <span class="n">throwing</span> <span class="o">=</span> <span class="s">"ex"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterThrowingAdviceMethod</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">,</span> <span class="nc">Throwable</span> <span class="n">ex</span><span class="o">){</span>
        <span class="c1">//获取连接点所对应方法的签名信息</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LoggerAspect，方法："</span><span class="o">+</span><span class="n">signature</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"，异常："</span><span class="o">+</span><span class="n">ex</span><span class="o">);</span>
    <span class="o">}</span>
 
 
    <span class="c1">//环绕通知</span>
    <span class="nd">@Around</span><span class="o">(</span><span class="s">"pointCut()"</span><span class="o">)</span>
    <span class="c1">//环绕通知的方法的返回值一定要和目标对象方法的返回值一致</span>
    <span class="kd">public</span> <span class="nc">Object</span> <span class="nf">aroundAdviceMethod</span><span class="o">(</span><span class="nc">ProceedingJoinPoint</span> <span class="n">joinPoint</span><span class="o">){</span>
        <span class="nc">Object</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"环绕通知--&gt;前置通知"</span><span class="o">);</span>
            <span class="c1">//表示目标对象方法的执行</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">proceed</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"环绕通知--&gt;返回通知"</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Throwable</span> <span class="n">throwable</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">throwable</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"环绕通知--&gt;异常通知"</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"环绕通知--&gt;后置通知"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="mybean-xml程序编写">MyBean XML程序编写</h4>
<p>要求写出对应的增删改查的几种代码</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span>
<span class="nt">&lt;mapper</span> <span class="na">namespace=</span><span class="s">"com.jinzheng.dao.BookMapper"</span><span class="nt">&gt;</span>

<span class="c">&lt;!--    显示所有目录--&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"findAll"</span> <span class="na">resultType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
        select * from tb_book
    <span class="nt">&lt;/select&gt;</span>

<span class="c">&lt;!--    根据id查询图书信息 --&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"findBookById"</span> <span class="na">parameterType=</span><span class="s">"Integer"</span>
            <span class="na">resultType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
        select *
        from tb_book
        where id=#{id}
    <span class="nt">&lt;/select&gt;</span>

<span class="c">&lt;!--    添加数据--&gt;</span>
    <span class="nt">&lt;insert</span> <span class="na">id=</span><span class="s">"addBook"</span> <span class="na">parameterType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
        insert into tb_book values (#{id},#{name},#{press},#{author},#{bookPrice})
    <span class="nt">&lt;/insert&gt;</span>

<span class="c">&lt;!--        删除数据--&gt;</span>
    <span class="nt">&lt;delete</span> <span class="na">id=</span><span class="s">"deleteById"</span> <span class="na">parameterType=</span><span class="s">"Integer"</span><span class="nt">&gt;</span>
        delete from tb_book where id = #{id}
    <span class="nt">&lt;/delete&gt;</span>

<span class="c">&lt;!--    修改数据--&gt;</span>
    <span class="nt">&lt;update</span> <span class="na">id=</span><span class="s">"updateBook"</span> <span class="na">parameterType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
        update tb_book
        <span class="nt">&lt;set&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"name != null and name != '' "</span><span class="nt">&gt;</span>
                name = #{name},
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"press != null and press != '' "</span><span class="nt">&gt;</span>
                press = #{press},
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"author != null and author != '' "</span><span class="nt">&gt;</span>
                author = #{author},
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"bookPrice != null and bookPrice != '' "</span><span class="nt">&gt;</span>
                bookPrice = #{bookPrice},
            <span class="nt">&lt;/if&gt;</span>

        <span class="nt">&lt;/set&gt;</span>
        where id = #{id}
    <span class="nt">&lt;/update&gt;</span>

<span class="c">&lt;!--        根据图书信息去模糊查询图书信息(动态SQL)--&gt;</span>
    <span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"queryList"</span> <span class="na">parameterType=</span><span class="s">"com.jinzheng.pojo.Book"</span> <span class="na">resultType=</span><span class="s">"com.jinzheng.pojo.Book"</span><span class="nt">&gt;</span>
        select * from tb_book
        <span class="nt">&lt;where&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"id != null and id !='' "</span><span class="nt">&gt;</span>
                or id = #{id}
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"name != null and name !='' "</span><span class="nt">&gt;</span>
                or name like concat('%',#{name},'%')
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"press != null and press !='' "</span><span class="nt">&gt;</span>
                or press like concat('%',#{press},'%')
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"author != null and author !='' "</span><span class="nt">&gt;</span>
                or author like concat('%',#{author},'%')
            <span class="nt">&lt;/if&gt;</span>
            <span class="nt">&lt;if</span> <span class="na">test=</span><span class="s">"bookPrice != null and bookPrice !='' "</span><span class="nt">&gt;</span>
                or bookPrice = #{bookPrice}
            <span class="nt">&lt;/if&gt;</span>
        <span class="nt">&lt;/where&gt;</span>
    <span class="nt">&lt;/select&gt;</span>

<span class="nt">&lt;/mapper&gt;</span>

</code></pre></div></div>]]></content><author><name>Ranok</name></author><category term="java" /><category term="java ee" /><category term="期末考试" /><summary type="html"><![CDATA[  Java EE，Java 平台企业版（Java Platform Enterprise Edition），之前称为Java 2 Platform, Enterprise Edition (J2EE)，2018年3月更名为 Jakarta EE(这个名称应该还没有得到群众认可)。是 Sun 公司为企业级应用推出的标准平台，用来开发B/S架构软件。Java EE 可以说是一个框架，也可以说是一种规范。]]></summary></entry></feed>